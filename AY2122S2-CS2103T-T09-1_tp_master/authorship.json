[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-1/tp/actions)","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp/branch/master/graph/badge.svg?token\u003dF2HBLHWFOZ)](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp)","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"* This is Harmonia, a CLI-centric application for students to manage their academic and non-academic tasks and events.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"  * Add and delete tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"  * Mark tasks when they are completed.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"  * Add tags to categorise tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"  * Search for tasks by tags or keywords.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"* The application is named `Harmonia`(Harmony in Latin) as it aims to help students manage the complexity of daily tasks, thus creating harmony amongst their schedules.","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"* For the detailed documentation of this project, see the **[Harmonia Product Website](https://ay2122s2-cs2103t-t09-1.github.io/tp/)**.","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"nicollegann":8,"-":5,"sbhbenjamin":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"### Joeie Tao","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/joeietao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"[[github](https://github.com/joeietao)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/joeietao.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Documentation","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"### Benjamin Seah","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/sbhbenjamin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"[[homepage](https://www.sbhbenjamin.works/)]","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/sbhbenjamin)]","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/sbhbenjamin.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Integration","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"### Thikhina Bakmeedeniya","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/thikhinab.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/thikhinab)]","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/thikhinab.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Testing","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"### Jiang Zhengtao","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/ainsleyj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/ainsleyj)]","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/ainsleyj.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Code Quality","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"### Nicolle Gan","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/nicollegann.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/nicollegann)]","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/nicollegann.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Deliverables and Deadlines","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"-":30,"sbhbenjamin":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"sbhbenjamin"},"content":"* students who have a need to manage a significant number of tasks of different types","lastModifiedDate":"2022-02-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"sbhbenjamin"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-24"},{"lineNumber":266,"author":{"gitId":"sbhbenjamin"},"content":"Harmonia is the easiest way for students to manage the complexity associated with their schooling years – from the plethora of assignments, ad-hoc consultations and events, to deadlines. This app will only help to manage tasks, and does not act as a calendar notifying the user of any upcoming event/deadline.","lastModifiedDate":"2022-02-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"sbhbenjamin"},"content":"Priorities: High (must have) - `* * * *`, Medium (nice to have) - `* * *`, Medium-low (nice to have but difficult) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2022-02-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority  | As a …​        | I want to …​                                                | So that I can…​                                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"sbhbenjamin"},"content":"|-----------|----------------|-------------------------------------------------------------|--------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-24"},{"lineNumber":275,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | add a new task                                              |                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":276,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | delete a task                                               | remove tasks that I no longer need                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":277,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | mark a task as complete                                     |                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":278,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | mark a task as incomplete                                   |                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":279,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | see all my tasks when I start up the application            | view my tasks more conveniently without having to perform any extra operations |","lastModifiedDate":"2022-02-24"},{"lineNumber":280,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | tag a task                                                  | categorise my tasks according to my preferred system                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":281,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | modify a task                                               | amend a mistake or update a task                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":282,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | search by tags                                              | find tasks related to a category                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":283,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | search by keywords                                          | find a specific task more easily                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":284,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | new user       | have straightforward commands I can use                     | use the application more intuitively                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":285,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | expert user    | modify the tasks in the data file directly                  | modify the tasks in a way that is not supported by the application             |","lastModifiedDate":"2022-02-24"},{"lineNumber":286,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | tag a task with multiple tags                               | categorise tasks under multiple categories at a time                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":287,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | search for tasks that fall within a specific time range     | find the tasks that lie between a specific period                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":288,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | view upcoming deadlines                                     | prioritise what tasks I need to do first                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":289,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | view tags I have already added when creating a new task     | know how to tag new tasks and avoid creating similar tags                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":290,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | view all of my upcoming–deadlines and longer-term deadlines | have a more holistic view of all events in the short-term and long-term future |","lastModifiedDate":"2022-02-24"},{"lineNumber":291,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | access the user guide through the interface                 | access the documentation without having to search online for it                |","lastModifiedDate":"2022-02-24"},{"lineNumber":292,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | sort my tasks by certain filters                            | organise my view the way I prefer                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":293,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | label my tasks with priorities                              | keep track of which tasks are more important                                   |","lastModifiedDate":"2022-02-24"},{"lineNumber":294,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | new user       | view suggestions if I type in the wrong command             | recover from mistakes and use the correct command more easily                  |","lastModifiedDate":"2022-02-24"},{"lineNumber":295,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | potential user | see the app populated with sample data                      | easily see how the application would look like when in use                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":296,"author":{"gitId":"sbhbenjamin"},"content":"| `* *`     | user           | set repeated occurrence of a task                           | avoid having to add a task multiple times                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":297,"author":{"gitId":"sbhbenjamin"},"content":"| `* *`     | new user       | revert changes made                                         | undo changes that were made by mistake                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":298,"author":{"gitId":"sbhbenjamin"},"content":"| `* *`     | expert user    | use shortcuts                                               | perform operations more efficiently                                            |","lastModifiedDate":"2022-02-24"},{"lineNumber":299,"author":{"gitId":"sbhbenjamin"},"content":"| `*`       | user           | bulk mark different tasks as complete                       | marking everything I finished a day with just one command                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":300,"author":{"gitId":"sbhbenjamin"},"content":"| `*`       | expert user    | delete multiple tasks at once                               | do not have to delete tasks one by one                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"nicollegann"},"content":"(For all use cases below, the **System** is `Harmonia` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC01 - Add a task**","lastModifiedDate":"2022-03-06"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"nicollegann"},"content":"1. User chooses to add a task.","lastModifiedDate":"2022-02-25"},{"lineNumber":310,"author":{"gitId":"nicollegann"},"content":"2. User enters the task description.","lastModifiedDate":"2022-02-25"},{"lineNumber":311,"author":{"gitId":"nicollegann"},"content":"3. Harmonia adds the task.","lastModifiedDate":"2022-02-25"},{"lineNumber":312,"author":{"gitId":"nicollegann"},"content":"4. Harmonia informs the user that the task has been successfully added.","lastModifiedDate":"2022-02-25"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"nicollegann"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-25"},{"lineNumber":318,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":319,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":320,"author":{"gitId":"sbhbenjamin"},"content":"    Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":321,"author":{"gitId":"nicollegann"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":322,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":323,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":324,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":325,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC02 - Delete a task**","lastModifiedDate":"2022-03-06"},{"lineNumber":326,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":327,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":328,"author":{"gitId":"nicollegann"},"content":"1. User chooses to remove a task from the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":329,"author":{"gitId":"nicollegann"},"content":"2. User enters the request to remove the task.","lastModifiedDate":"2022-02-25"},{"lineNumber":330,"author":{"gitId":"nicollegann"},"content":"3. Harmonia deletes the task.","lastModifiedDate":"2022-02-25"},{"lineNumber":331,"author":{"gitId":"nicollegann"},"content":"4. Harmonia informs the user that the task has been successfully deleted.","lastModifiedDate":"2022-02-25"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"nicollegann"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":336,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":337,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":338,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":339,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":340,"author":{"gitId":"nicollegann"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":342,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":344,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC03 - Mark a task as complete**","lastModifiedDate":"2022-03-06"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":347,"author":{"gitId":"nicollegann"},"content":"1. User chooses to mark a task as complete from the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":348,"author":{"gitId":"nicollegann"},"content":"2. User enters the request to mark a task based on its index in the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":349,"author":{"gitId":"nicollegann"},"content":"3. Harmonia marks the task as complete.","lastModifiedDate":"2022-02-25"},{"lineNumber":350,"author":{"gitId":"nicollegann"},"content":"4. Harmonia informs the user that the task has been successfully marked.","lastModifiedDate":"2022-02-25"},{"lineNumber":351,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":352,"author":{"gitId":"nicollegann"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":353,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":354,"author":{"gitId":"nicollegann"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":355,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":356,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":357,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":358,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":359,"author":{"gitId":"nicollegann"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":361,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":362,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":363,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC04 - Unmark a task from completion**","lastModifiedDate":"2022-03-06"},{"lineNumber":364,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":365,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":366,"author":{"gitId":"nicollegann"},"content":"1. User chooses to unmark a task from completion from the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":367,"author":{"gitId":"nicollegann"},"content":"2. User enters the request to unmark a task based on its index in the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":368,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia marks the task as incomplete.","lastModifiedDate":"2022-03-06"},{"lineNumber":369,"author":{"gitId":"nicollegann"},"content":"4. Harmonia informs the user that the task has been successfully unmarked.","lastModifiedDate":"2022-02-25"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":374,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":375,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":376,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":377,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":378,"author":{"gitId":"nicollegann"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":382,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC05 - Add a tag to the task**","lastModifiedDate":"2022-03-06"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":384,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":385,"author":{"gitId":"AinsleyJ"},"content":"1. User chooses to add a tag to an existing task.","lastModifiedDate":"2022-02-27"},{"lineNumber":386,"author":{"gitId":"AinsleyJ"},"content":"2. User enters the request to add the tag to the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":387,"author":{"gitId":"AinsleyJ"},"content":"3. Harmonia adds the tag to the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":388,"author":{"gitId":"AinsleyJ"},"content":"4. Harmonia informs the user that the tag has been successfully added to the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":390,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":392,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":393,"author":{"gitId":"AinsleyJ"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-27"},{"lineNumber":394,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":395,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":396,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":397,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":399,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":401,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC06 - Edit a task**","lastModifiedDate":"2022-03-06"},{"lineNumber":402,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":403,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":404,"author":{"gitId":"AinsleyJ"},"content":"1. User chooses to edit a task from the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":405,"author":{"gitId":"AinsleyJ"},"content":"2. User enters the request to edit the task with the updated details.","lastModifiedDate":"2022-02-27"},{"lineNumber":406,"author":{"gitId":"AinsleyJ"},"content":"3. Harmonia updates the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":407,"author":{"gitId":"AinsleyJ"},"content":"4. Harmonia informs the user that the task has been successfully updated.","lastModifiedDate":"2022-02-27"},{"lineNumber":408,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":409,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":410,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":411,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":412,"author":{"gitId":"AinsleyJ"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-27"},{"lineNumber":413,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":414,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":415,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":416,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":417,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":418,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":419,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":420,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC07 - List all tasks**","lastModifiedDate":"2022-03-06"},{"lineNumber":421,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":422,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":423,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to list out all tasks.","lastModifiedDate":"2022-03-07"},{"lineNumber":424,"author":{"gitId":"sbhbenjamin"},"content":"2. User enters the request to list all tasks.","lastModifiedDate":"2022-03-07"},{"lineNumber":425,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia lists out all tasks.","lastModifiedDate":"2022-03-07"},{"lineNumber":426,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":427,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":428,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":429,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":430,"author":{"gitId":"AinsleyJ"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-27"},{"lineNumber":431,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":432,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":433,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":434,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":435,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":436,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":437,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":438,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC08 - Search for a task by keyword/tag**","lastModifiedDate":"2022-03-06"},{"lineNumber":439,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":440,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":441,"author":{"gitId":"AinsleyJ"},"content":"1. User enters the request to search for task(s) by keyword/tag.","lastModifiedDate":"2022-02-27"},{"lineNumber":442,"author":{"gitId":"AinsleyJ"},"content":"2. Harmonia shows a list of tasks that match the specified keyword/tag.","lastModifiedDate":"2022-02-27"},{"lineNumber":443,"author":{"gitId":"AinsleyJ"},"content":"3. Harmonia informs the user that the search result has been displayed successfully.","lastModifiedDate":"2022-02-27"},{"lineNumber":444,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":445,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":446,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":447,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":448,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects that the keyword is missing.","lastModifiedDate":"2022-03-06"},{"lineNumber":449,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":450,"author":{"gitId":"AinsleyJ"},"content":"    * 2a2. User enters a new command.","lastModifiedDate":"2022-02-27"},{"lineNumber":451,"author":{"gitId":"AinsleyJ"},"content":"  Steps 2a1-2a2 are repeated until valid data is inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":452,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":453,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":454,"author":{"gitId":"AinsleyJ"},"content":"* 2b. Harmonia detects that the tag does not exist.","lastModifiedDate":"2022-02-27"},{"lineNumber":455,"author":{"gitId":"AinsleyJ"},"content":"    * 2b1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":456,"author":{"gitId":"AinsleyJ"},"content":"    * 2b2. User enters a new command.","lastModifiedDate":"2022-02-27"},{"lineNumber":457,"author":{"gitId":"AinsleyJ"},"content":"  Steps 2a1-2a2 are repeated until valid data is inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":458,"author":{"gitId":"sbhbenjamin"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-03-06"},{"lineNumber":459,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":460,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":461,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":462,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC09 - Undo the previous change**","lastModifiedDate":"2022-03-06"},{"lineNumber":463,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":464,"author":{"gitId":"sbhbenjamin"},"content":"**Preconditions:** Changes were made by the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":465,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":466,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":467,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to undo the previous change.","lastModifiedDate":"2022-03-06"},{"lineNumber":468,"author":{"gitId":"sbhbenjamin"},"content":"2. User enters the request to undo the previous change.","lastModifiedDate":"2022-03-06"},{"lineNumber":469,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia restores the state before the previous change.","lastModifiedDate":"2022-03-06"},{"lineNumber":470,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":471,"author":{"gitId":"sbhbenjamin"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":472,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":473,"author":{"gitId":"sbhbenjamin"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":474,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia is unable to recognize the request entered by the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":475,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":476,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":477,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":478,"author":{"gitId":"sbhbenjamin"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-03-06"},{"lineNumber":479,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":480,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":481,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":482,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC10 - Search for tasks within date range**","lastModifiedDate":"2022-03-06"},{"lineNumber":483,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":484,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":485,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to search for tasks that fall within a specific date range.","lastModifiedDate":"2022-03-06"},{"lineNumber":486,"author":{"gitId":"sbhbenjamin"},"content":"2. User enters the request to search for the tasks by date range.","lastModifiedDate":"2022-03-06"},{"lineNumber":487,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia displays the tasks that match the criteria.","lastModifiedDate":"2022-03-06"},{"lineNumber":488,"author":{"gitId":"sbhbenjamin"},"content":"4. Harmonia informs the user that the result has been displayed successfully.","lastModifiedDate":"2022-03-06"},{"lineNumber":489,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":490,"author":{"gitId":"sbhbenjamin"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":491,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":492,"author":{"gitId":"sbhbenjamin"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":493,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":494,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":495,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":496,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":497,"author":{"gitId":"sbhbenjamin"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-03-06"},{"lineNumber":498,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":499,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":501,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC11 - Sort tasks**","lastModifiedDate":"2022-03-06"},{"lineNumber":502,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":503,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":504,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to sort the task by a certain property.","lastModifiedDate":"2022-03-06"},{"lineNumber":505,"author":{"gitId":"sbhbenjamin"},"content":"2. User enters the request to sort the task based on a property.","lastModifiedDate":"2022-03-06"},{"lineNumber":506,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia displays the tasks based on the property.","lastModifiedDate":"2022-03-06"},{"lineNumber":507,"author":{"gitId":"sbhbenjamin"},"content":"4. Harmonia informs the user that the sort has been performed successfully.","lastModifiedDate":"2022-03-06"},{"lineNumber":508,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":509,"author":{"gitId":"sbhbenjamin"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":510,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":511,"author":{"gitId":"sbhbenjamin"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":512,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":513,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":514,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":515,"author":{"gitId":"sbhbenjamin"},"content":"  Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":516,"author":{"gitId":"sbhbenjamin"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-03-06"},{"lineNumber":517,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":518,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":519,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":520,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC12 - Set repeated occurrences of a task**","lastModifiedDate":"2022-03-06"},{"lineNumber":521,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":522,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":523,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to set repeated occurrences of a task.","lastModifiedDate":"2022-03-07"},{"lineNumber":524,"author":{"gitId":"sbhbenjamin"},"content":"2. User enters the request to set repeated occurrences of a task.","lastModifiedDate":"2022-03-06"},{"lineNumber":525,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia sets the task as a repeated occurrence.","lastModifiedDate":"2022-03-06"},{"lineNumber":526,"author":{"gitId":"sbhbenjamin"},"content":"4. Harmonia informs the user that the task has been added as a repeated occurrence.","lastModifiedDate":"2022-03-06"},{"lineNumber":527,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":528,"author":{"gitId":"sbhbenjamin"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":529,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":530,"author":{"gitId":"sbhbenjamin"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":531,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":532,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":533,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":534,"author":{"gitId":"sbhbenjamin"},"content":"      Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":535,"author":{"gitId":"sbhbenjamin"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-06"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":537,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":538,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":539,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC13 - Categorise task according to priority**","lastModifiedDate":"2022-03-06"},{"lineNumber":540,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":541,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":542,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to assign a priority to a task.","lastModifiedDate":"2022-03-06"},{"lineNumber":543,"author":{"gitId":"sbhbenjamin"},"content":"2. User enters the request to assign priority to the task.","lastModifiedDate":"2022-03-07"},{"lineNumber":544,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia assigns priority to the task.","lastModifiedDate":"2022-03-07"},{"lineNumber":545,"author":{"gitId":"sbhbenjamin"},"content":"4. Harmonia informs the user that the priority of the task has been updated.","lastModifiedDate":"2022-03-07"},{"lineNumber":546,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":547,"author":{"gitId":"sbhbenjamin"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":548,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":549,"author":{"gitId":"sbhbenjamin"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":550,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":551,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":552,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":553,"author":{"gitId":"sbhbenjamin"},"content":"      Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":554,"author":{"gitId":"sbhbenjamin"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-06"},{"lineNumber":555,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":556,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":557,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":558,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC14 - View user guide**","lastModifiedDate":"2022-03-06"},{"lineNumber":559,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":560,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":561,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to view the user guide.","lastModifiedDate":"2022-03-06"},{"lineNumber":562,"author":{"gitId":"sbhbenjamin"},"content":"2. User requests to view the user guide.","lastModifiedDate":"2022-03-06"},{"lineNumber":563,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia outputs a message with a URL to the user guide.","lastModifiedDate":"2022-03-06"},{"lineNumber":564,"author":{"gitId":"sbhbenjamin"},"content":"4. User copies the URL to the user guide.","lastModifiedDate":"2022-03-06"},{"lineNumber":565,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":566,"author":{"gitId":"sbhbenjamin"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":567,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":568,"author":{"gitId":"sbhbenjamin"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":569,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":570,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":571,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":572,"author":{"gitId":"sbhbenjamin"},"content":"      Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":573,"author":{"gitId":"sbhbenjamin"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-03-06"},{"lineNumber":574,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":575,"author":{"gitId":"sbhbenjamin"},"content":"\u003cbr/\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":576,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":577,"author":{"gitId":"sbhbenjamin"},"content":"**Use case: UC15 - Add multiple tags to a task**","lastModifiedDate":"2022-03-06"},{"lineNumber":578,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":579,"author":{"gitId":"sbhbenjamin"},"content":"**MSS**","lastModifiedDate":"2022-03-06"},{"lineNumber":580,"author":{"gitId":"sbhbenjamin"},"content":"1. User chooses to add multiple tags to an existing task.","lastModifiedDate":"2022-03-06"},{"lineNumber":581,"author":{"gitId":"sbhbenjamin"},"content":"2. User requests to add multiple tags to a task.","lastModifiedDate":"2022-03-06"},{"lineNumber":582,"author":{"gitId":"sbhbenjamin"},"content":"3. Harmonia adds the different tags to the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":583,"author":{"gitId":"sbhbenjamin"},"content":"4. Harmonia informs the user that the tags have been successfully added to the task.","lastModifiedDate":"2022-03-06"},{"lineNumber":584,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":585,"author":{"gitId":"sbhbenjamin"},"content":"    Use case ends.","lastModifiedDate":"2022-03-06"},{"lineNumber":586,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":587,"author":{"gitId":"sbhbenjamin"},"content":"**Extensions**","lastModifiedDate":"2022-03-06"},{"lineNumber":588,"author":{"gitId":"sbhbenjamin"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-03-06"},{"lineNumber":589,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":590,"author":{"gitId":"sbhbenjamin"},"content":"    * 2a2. User enters a new request.","lastModifiedDate":"2022-03-06"},{"lineNumber":591,"author":{"gitId":"sbhbenjamin"},"content":"      Steps 2a1-2a2 are repeated until valid request is inputted.","lastModifiedDate":"2022-03-06"},{"lineNumber":592,"author":{"gitId":"AinsleyJ"},"content":"      Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":593,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":594,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"sbhbenjamin"},"content":"1. Should work on most *Mainstream* OS as long as it has Java `11` or above installed.","lastModifiedDate":"2022-02-24"},{"lineNumber":597,"author":{"gitId":"sbhbenjamin"},"content":"2. Should be able to accomplish most of the tasks faster using commands than using the mouse by users with above average typing speed for regular English text (i.e. not code, not system admin commands)","lastModifiedDate":"2022-02-24"},{"lineNumber":598,"author":{"gitId":"sbhbenjamin"},"content":"3. Should respond within two seconds.","lastModifiedDate":"2022-02-24"},{"lineNumber":599,"author":{"gitId":"sbhbenjamin"},"content":"4. Should be usable by a novice who has never used Harmonia before.","lastModifiedDate":"2022-02-24"},{"lineNumber":600,"author":{"gitId":"sbhbenjamin"},"content":"5. Is not required to remind users about upcoming deadlines or events.","lastModifiedDate":"2022-02-24"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"sbhbenjamin"},"content":"* **Task**: A piece of work that the user needs to complete","lastModifiedDate":"2022-02-24"},{"lineNumber":606,"author":{"gitId":"sbhbenjamin"},"content":"* **Tag**: A label or category attached to a task to give additional information to it","lastModifiedDate":"2022-02-24"},{"lineNumber":607,"author":{"gitId":"sbhbenjamin"},"content":"* **Keyword**: A word that the user queries to search for a task","lastModifiedDate":"2022-02-24"},{"lineNumber":608,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nicollegann":35,"AinsleyJ":53,"-":359,"sbhbenjamin":214}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"Harmonia is a **desktop app for managing tasks related to your academic life, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Harmonia can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"## Table of Contents","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"  - [Adding a task: add](#adding-a-task-add)","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"  - [Listing all tasks: list](#listing-all-tasks-list)","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"  - [Deleting a task: delete](#deleting-a-task-delete)","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"  - [Locating a task: find](#locating-a-task-find)","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"  - [Marking as complete: mark](#marking-as-complete--mark)","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"  - [Marking as complete: unmark](#marking-as-incomplete--unmark)","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"  - [Editing a task: edit](#editing-a-task--edit)","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"  - [Exiting the program: exit](#exiting-the-program--exit)","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"1. Ensure that you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"2. Download the latest `Harmonia.jar` from [here](https://github.com/AY2122S2-CS2103T-T09-1/tp.git)","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"3. Copy the file to the folder you want to use as the home folder for your Harmonia.","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"5. Type the command in the command box and press Enter to execute it. (E.g type `list` to list down all the tasks)","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"### Adding a task: `add`","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"Adds a task into the Harmonia.","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"Format:  `add d/DESCRIPTION`","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"Example: `add d/CS2103T tp meeting`","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"Shows a list of all the existing tasks in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"Format: `list`","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"Deletes a specified task from Harmonia.","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"- Deletes the task at the specified `INDEX` from the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"- The index **must be a positive integer** 1, 2, 3","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"Example: `delete 3` deletes the 3rd task in the task list","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"### Locating a task: `find`","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"Finds a task which description or tag contains the given keywords.","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"Format:","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"- `find KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"- `find t/TAG`","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"- `find book`","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"- `find book read`","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"- `find t/CS2103T`","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"### Marking as complete : `mark`","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"Marks specified task from the existing task list from as complete.","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"- Marks the task at the specified `INDEX` as complete.","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"- The index **must be a positive integer** 1, 2, 3,","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"Example: `list` followed by `mark 2` marks the 2nd task in the task list as complete.","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"### Marking as incomplete : `unmark`","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"Marks specified task from the existing task list from as incomplete.","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"- Marks the task at the specified `INDEX` as incomplete.","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"- The index **must be a positive integer** 1, 2, 3,","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"Example: `list` followed by `unmark 3` marks the 3rd task in the task list as incomplete.","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"### Editing a task : `edit`","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"Edits the specified task in the task list.","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"Format: `edit INDEX [d/DESCRIPTION] [t/TAG]`","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"- Edits the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"- When editing tags, the existing tags of the task will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"- You can remove all the task’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"Example: `edit 2 d/Prepare for CS2103T Tutorial` Edits the description of the 2nd task to be `Prepare for CS2103T Tutorial`","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"Harmonia\u0027s data is saved in the hard disk automatically after any command changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"thikhinab"},"content":"**Add** | `add d/DESCRIPTION` \u003cbr\u003e e.g., `add d/read book`","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"thikhinab"},"content":"**Edit** | `edit INDEX [d/DESCRIPTION] [t/TAG]`\u003cbr\u003e e.g.,`edit 2 n/CS2101 meeting t/CS2101`","lastModifiedDate":"2022-02-26"},{"lineNumber":129,"author":{"gitId":"thikhinab"},"content":"**Mark**| `mark INDEX` \u003cbr\u003e e.g., `mark 3`","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"thikhinab"},"content":"**Unmark**| `unmark INDEX` \u003cbr\u003e e.g., `unmark 3`","lastModifiedDate":"2022-02-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**List**| `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"thikhinab"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e `find t/[TAG]` \u003cbr\u003e e.g., `find book` \u003cbr\u003e e.g., `find book read` \u003cbr\u003e e.g., `find t/CS2103T`","lastModifiedDate":"2022-02-26"},{"lineNumber":133,"author":{"gitId":"thikhinab"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"thikhinab":30,"joeietao":42,"-":61}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"title: Harmonia","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-1/tp/actions)","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp/branch/master/graph/badge.svg?token\u003dF2HBLHWFOZ)](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp)","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"Harmonia is a CLI-centric application for students to manage their academic and non-academic tasks and events.","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"* If you are interested in using Harmonia, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"* If you are interested about developing Harmonia, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"sbhbenjamin":6}},{"path":"docs/team/ainsleyj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"AinsleyJ"},"content":"title: Zhengtao\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"AinsleyJ"},"content":"**Overview**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"Harmonia is a command-line-based personal task manager, which helps university students to manage their academic tasks. It is written in Java and has a GUI implemented with JavaFX.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"* **Code Contributed**: [link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dainsleyj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"* **Enhancements implemented**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"* **Contributions to the UG**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"* **Contributions to the DG**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"AinsleyJ"},"content":"* **Contributions to team-based tasks**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"* **Review/mentoring contributions**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"AinsleyJ"},"content":"* **Contributions beyond the project team**: To be added.","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"AinsleyJ":11,"sbhbenjamin":15}},{"path":"docs/team/joeietao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"title: Joeie\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"### Project: Harmonia","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"**Overview**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"Harmonia is a **desktop app for managing tasks related to your academic life, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Harmonia can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djoeietao\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"* **Enhancements to implemented**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"* **Contributions to the UG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"* **Contributions to the DG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"* **Contributions to team-based tasks**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"* **Review contributions**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"joeietao":11,"sbhbenjamin":16}},{"path":"docs/team/nicollegann.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"title: Nicolle\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"### Project: Harmonia","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"**Overview**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"Harmonia is a desktop app for students to manage their academic and non-academic tasks and events.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dnicollegann\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"* **Enhancements to implemented**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"* **Contributions to the UG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"* **Contributions to the DG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"* **Contributions to team-based tasks**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"* **Review contributions**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"nicollegann":11,"sbhbenjamin":16}},{"path":"docs/team/sbhbenjamin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"**Overview**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"Harmonia is a command-line-based personal task manager, which helps university students to manage their academic tasks. It is written in Java and has a GUI implemented with JavaFX.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"* **Code Contributed**: [link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dainsleyj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"* **Enhancements implemented**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions to the UG**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions to the DG**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions to team-based tasks**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"* **Review/mentoring contributions**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions beyond the project team**: To be added.","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"sbhbenjamin":26}},{"path":"docs/team/thikhinab.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"title: Thikhina\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"### Project: Harmonia","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"Harmonia is a command-line-based personal task manager, which helps university students to manage their academic tasks. It is written in Java and has a GUI implemented with JavaFX.","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"* **Code contributed**: [link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dthikhina\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"* **Enhancements implemented**: To be added.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"* **Contributions to the UG**: To be added.","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"* **Contributions to the DG**: To be added.","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"* **Contributions to team-based tasks**: To be added.","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"* **Review/mentoring contributions**: To be added.","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"* **Contributions beyond the project team**: To be added.","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"thikhinab":10,"sbhbenjamin":14}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"import seedu.address.storage.TaskListStorage;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TaskList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"        storage \u003d new StorageManager(taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s task list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"     * The data from the sample task list will be used instead if {@code storage}\u0027s task list is not found,","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"     * or an empty task list will be used instead if errors occur when reading {@code storage}\u0027s task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"        ReadOnlyTaskList initialData;","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"            if (!taskListOptional.isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"            initialData \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"            initialData \u003d new TaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"            initialData \u003d new TaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"nicollegann"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"nicollegann"},"content":"        logger.info(\"Starting Harmonia \" + MainApp.VERSION);","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"nicollegann"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Harmonia ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicollegann":23,"-":160}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicollegann":1,"AinsleyJ":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"     * Returns the TaskList.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"     * @see seedu.address.model.Model#getTaskList()","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"joeietao":9,"-":41}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.logic.parser.HarmoniaParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"AinsleyJ"},"content":"    private final HarmoniaParser harmoniaParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"        harmoniaParser \u003d new HarmoniaParser();","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"        Command command \u003d harmoniaParser.parseCommand(commandText);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"AinsleyJ"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"        return model.getTaskList();","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"        return model.getTaskListFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"joeietao":8,"AinsleyJ":5,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":" * Adds a task to the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"AinsleyJ"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"AinsleyJ"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"            + PREFIX_NAME + \" \" + \"Review individual projects\" + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"            + PREFIX_DESCRIPTION + \" \" + \"To review two ips that are sent to my email, for 4 participation points\" + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"            + PREFIX_DEADLINE + \" 2022-03-12\" + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"            + PREFIX_TAG + \" \" + \"CS2103T\" + \" \"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"            + PREFIX_TAG + \" \" + \"participation\";","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in Harmonia\";","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"AinsleyJ"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"AinsleyJ"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"AinsleyJ"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AinsleyJ":17,"-":42,"sbhbenjamin":5}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" * Clears the task list.","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task list has been cleared!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        model.setTaskList(new TaskList());","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicollegann":4,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":" * Deletes a task identified using it\u0027s displayed index from the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"AinsleyJ"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AinsleyJ":9,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":" * Edits the details of an existing task in the task list.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"            + PREFIX_NAME + \"Midterm Test Revision\"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"            + PREFIX_DESCRIPTION + \"Chapters 1-4 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"            + PREFIX_DEADLINE + \"2022-03-20\"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"            + PREFIX_TAG + \"CS2102\";","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in Harmonia.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"    public EditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"        Name updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"nicollegann"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"nicollegann"},"content":"        CompletionStatus isComplete \u003d taskToEdit.getCompletionStatus();","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"nicollegann"},"content":"        Deadline updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDeadline());","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"nicollegann"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"nicollegann"},"content":"        return new Task(updatedName, updatedDescription, isComplete, updatedDeadline, updatedTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"nicollegann"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"nicollegann"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"nicollegann"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"nicollegann"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"nicollegann"},"content":"        private Description description;","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"nicollegann"},"content":"        private Deadline deadline;","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"nicollegann"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"nicollegann"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"nicollegann"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"nicollegann"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"nicollegann"},"content":"            return CollectionUtil.isAnyNonNull(name, description, deadline, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"nicollegann"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"nicollegann"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"nicollegann"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"nicollegann"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"nicollegann"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"nicollegann"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"nicollegann"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"nicollegann"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"nicollegann"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"nicollegann"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"nicollegann"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"nicollegann"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"nicollegann":67,"-":148}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Harmonia as requested ...\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"AinsleyJ":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" * Finds and lists all tasks in task list whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"            + \"Example: \" + COMMAND_WORD + \" tutorial assignment\";","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"nicollegann":7,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AinsleyJ":3,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":" * Marks a task identified using it\u0027s displayed index from the task list as completed.","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"            + \": Marks the task identified by the index number used in the displayed task list as completed.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Completed Task: %1$s\";","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_TASK_ALREADY_COMPLETED \u003d \"This task is already marked as complete.\";","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * Creates a marked iteration of the Task provided.","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     * @param task task to be copied.","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     * @return marked task.","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    private static Task createMarkedTask(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"        Name name \u003d task.getName();","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"        Description description \u003d task.getDescription();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"        CompletionStatus completionStatus \u003d new CompletionStatus(\"true\");","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        Deadline deadline \u003d task.getDeadline();","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        Set\u003cTag\u003e tags \u003d task.getTags();","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"        Task markedTask \u003d new Task(name, description, completionStatus, deadline, tags);","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"        return markedTask;","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"        Task markedTask \u003d createMarkedTask(taskToMark);","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"        if (taskToMark.equals(markedTask)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"        model.strictSetTask(taskToMark, markedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask));","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"                || (other instanceof MarkCommand // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"                \u0026\u0026 targetIndex.equals(((MarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"thikhinab":83}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":" * Marks a task identified using it\u0027s displayed index from the task list as uncompleted.","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"            + \": Marks the task identified by the index number used in the displayed task list as uncompleted.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Uncompleted Task: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_TASK_ALREADY_UNCOMPLETED \u003d \"This task is already marked as incomplete.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public UnmarkCommand(Index targetIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * Creates a unmarked iteration of the Task provided.","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     * @param task task to be copied.","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     * @return marked task.","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    private Task createUnmarkedTask(Task task) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"        Name name \u003d task.getName();","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"        Description description \u003d task.getDescription();","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"        CompletionStatus completionStatus \u003d new CompletionStatus(\"false\");","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        Deadline deadline \u003d task.getDeadline();","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        Set\u003cTag\u003e tags \u003d task.getTags();","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"        Task unmarkedTask \u003d new Task(name, description, completionStatus, deadline, tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"        return unmarkedTask;","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"        Task unmarkedTask \u003d createUnmarkedTask(taskToUnmark);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"        if (taskToUnmark.equals(unmarkedTask)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_UNCOMPLETED);","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"        model.strictSetTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, unmarkedTask));","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"                || (other instanceof UnmarkCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"thikhinab":83}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"AinsleyJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"AinsleyJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"AinsleyJ"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_DESCRIPTION, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_DESCRIPTION)","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"AinsleyJ"},"content":"        Deadline deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"AinsleyJ"},"content":"        CompletionStatus completionStatus \u003d new CompletionStatus(\"false\");","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"AinsleyJ"},"content":"        Task task \u003d new Task(name, description, completionStatus, deadline, tagList);","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"AinsleyJ"},"content":"        return new AddCommand(task);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"AinsleyJ":13,"-":44,"sbhbenjamin":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"AinsleyJ"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"AinsleyJ"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"dl/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"AinsleyJ":2,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DEADLINE, PREFIX_TAG);","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"            editTaskDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"            editTaskDescriptor.setDescription(","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"        return new EditCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nicollegann":14,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nicollegann":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/HarmoniaParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"AinsleyJ"},"content":"public class HarmoniaParser {","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thikhinab":8,"AinsleyJ":1,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"thikhinab":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"AinsleyJ"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":79,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"AinsleyJ"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"AinsleyJ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"AinsleyJ"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"AinsleyJ"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"AinsleyJ"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"AinsleyJ"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"AinsleyJ"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"AinsleyJ"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"AinsleyJ"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"AinsleyJ"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2022-03-08"},{"lineNumber":97,"author":{"gitId":"AinsleyJ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"AinsleyJ"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"AinsleyJ"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":101,"author":{"gitId":"AinsleyJ"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"AinsleyJ"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"AinsleyJ"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"AinsleyJ"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"AinsleyJ"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"AinsleyJ"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"AinsleyJ"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"AinsleyJ":32,"-":76,"sbhbenjamin":1}},{"path":"src/main/java/seedu/address/logic/parser/TaskListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"public class TaskListParser {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joeietao":1,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":" * Parses input arguments and creates a new UnmarkCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * and returns a UnmarkCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"thikhinab":29}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"     * Sets the user prefs\u0027 task list file path.","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"     * Replaces task list data with the data in {@code taskList}.","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"    /** Returns the TaskList */","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"     * The task must exist in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"     * Adds the given task.","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask} under stricter conditions.","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"    void strictSetTask(Task target, Task editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thikhinab":7,"-":61,"sbhbenjamin":26}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":" * Represents the in-memory model of the task list data.","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"     * Initializes a ModelManager with the given taskList and userPrefs.","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"    public ModelManager(ReadOnlyTaskList taskList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"        requireAllNonNull(taskList, userPrefs);","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        logger.fine(\"Initializing with task list: \" + taskList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"        this(new TaskList(), new UserPrefs());","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"        return taskList;","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.removeTask(target);","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"sbhbenjamin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"sbhbenjamin"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask} under stricter conditions.","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"    public void strictSetTask(Task target, Task markedTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"thikhinab"},"content":"        requireAllNonNull(target, markedTask);","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"thikhinab"},"content":"        taskList.strictSetTask(target, markedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"sbhbenjamin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code versionedTaskList}","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"sbhbenjamin"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"sbhbenjamin"},"content":"        return filteredTasks;","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"sbhbenjamin"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"sbhbenjamin"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-02-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"sbhbenjamin"},"content":"        return taskList.equals(other.taskList)","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-02-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thikhinab":11,"-":109,"sbhbenjamin":41}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":" * Unmodifiable view of a task list","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"sbhbenjamin":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"sbhbenjamin":1}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.List;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":" * Wraps all data at the task-list level","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"    /*","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"     *   among constructors.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"    {","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"    public TaskList() {}","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"     * Creates an TaskList using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        this();","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    //// task-level operations","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"     * The task must not already exist in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"        tasks.add(p);","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"     * Removes {@code key} from this {@code TaskList}.","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code key} must exist in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask} under stricter conditions.","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"    public void strictSetTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"        tasks.strictSetTask(target, editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"sbhbenjamin"},"content":"    //// util methods","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"sbhbenjamin"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"sbhbenjamin"},"content":"        // TODO: refine later","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"sbhbenjamin"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"sbhbenjamin"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"sbhbenjamin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"sbhbenjamin"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 tasks.equals(((TaskList) other).tasks));","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":125,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"sbhbenjamin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"sbhbenjamin"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"thikhinab":10,"sbhbenjamin":120}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"harmonia.json\");","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"        setTaskListFilePath(newUserPrefs.getTaskListFilePath());","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"        return taskListFilePath;","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 taskListFilePath.equals(o.taskListFilePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"        return Objects.hash(guiSettings, taskListFilePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"        sb.append(\"\\nLocal data file location : \" + taskListFilePath);","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"sbhbenjamin":10}},{"path":"src/main/java/seedu/address/model/task/CompletionStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":" * Represents a Task\u0027s completion status in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"public class CompletionStatus {","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"            \"Completion status must be either true or false\";","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"    public final String value;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    private final Boolean booleanValue;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs an {@code CompletionStatus}.","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"     * @param completionStatus A valid completion status.","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    public CompletionStatus(String completionStatus) {","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(completionStatus);","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"        checkArgument(isValidCompletionStatus(completionStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        value \u003d completionStatus;","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"        booleanValue \u003d Boolean.parseBoolean(completionStatus);","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     * Returns true if a given string is a valid CompletionStatus.","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    public static boolean isValidCompletionStatus(String test) {","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"        return (\"true\".equals(test) || \"false\".equals(test));","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        return booleanValue ? \"true\" : \"false\";","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"                || (other instanceof CompletionStatus // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"                \u0026\u0026 booleanValue.equals((((CompletionStatus) other).booleanValue))); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"thikhinab":18,"sbhbenjamin":29}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":" * Represents a Task\u0027s deadline in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"public class Deadline {","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"            \"Deadlines should be in the format YYYY-MM-DD\";","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"    public final String value;","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    private final LocalDate localDateValue;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a {@code Deadline}. Accepts date in the format of yyyy-mm-dd.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"     * @param deadline A valid deadline.","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        checkArgument(isValidDeadline(deadline), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"        value \u003d deadline;","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"        localDateValue \u003d LocalDate.parse(deadline);","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        try {","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"            return true;","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"            return false;","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"        return localDateValue.toString();","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"                \u0026\u0026 localDateValue.equals(((Deadline) other).localDateValue)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"thikhinab":6,"sbhbenjamin":55}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":" * Represents a Task\u0027s description in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"public class Description {","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"AinsleyJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"            \"Description should not be blank or start with white spaces,\"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"                    + \" and the length should be less than 256 characters.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"AinsleyJ"},"content":"    /*","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"AinsleyJ"},"content":"     * The first character of the description must not be a whitespace.","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"AinsleyJ"},"content":"     * For other characters, they must be printable or whitespaces.","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"AinsleyJ"},"content":"     * The maximum number of characters allowed is 255.","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"AinsleyJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\\\\p{Punct}][\\\\p{Alnum}\\\\p{Punct}\\\\s]{0,254}\";","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    public final String value;","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"    public Description(String description) {","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        value \u003d description;","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"AinsleyJ"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"AinsleyJ"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"AinsleyJ"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"AinsleyJ"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"AinsleyJ"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        return value;","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        return value.hashCode();","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"AinsleyJ":15,"sbhbenjamin":43}},{"path":"src/main/java/seedu/address/model/task/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":" * Represents a Task\u0027s name in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"     * and only alphanumeric characters are allowed.","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"     * The maximum number of characters allowed is 255.","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\\\\p{Punct}][\\\\p{Alnum}\\\\p{Punct}\\\\s]{0,254}\";","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"-":54,"sbhbenjamin":6}},{"path":"src/main/java/seedu/address/model/task/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword));","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"-":26,"sbhbenjamin":5}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"public class Task {","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"    // Identity fields","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"    private final Name name;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    private final Description description;","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"    private final CompletionStatus isCompleted;","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"    // Data fields","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"    public Task(Name name, Description description, CompletionStatus isCompleted, Deadline deadline, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        requireAllNonNull(name, description, tags);","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"    public Name getName() {","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"        return name;","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        return description;","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"    public CompletionStatus getCompletionStatus() {","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"        return isCompleted;","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"        return deadline;","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"            return true;","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"            return true;","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"            return false;","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 otherTask.getCompletionStatus().equals(getCompletionStatus())","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"sbhbenjamin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"sbhbenjamin"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"sbhbenjamin"},"content":"        return Objects.hash(name, description, isCompleted, deadline, tags);","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":105,"author":{"gitId":"sbhbenjamin"},"content":"    public String toString() {","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"sbhbenjamin"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"sbhbenjamin"},"content":"        builder.append(getName())","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"sbhbenjamin"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"sbhbenjamin"},"content":"                .append(getDescription())","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"sbhbenjamin"},"content":"                .append(\"; Completion Status: \")","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"sbhbenjamin"},"content":"                .append(getCompletionStatus())","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"sbhbenjamin"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"sbhbenjamin"},"content":"                .append(getDeadline());","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"sbhbenjamin"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"sbhbenjamin"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"sbhbenjamin"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"sbhbenjamin"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"sbhbenjamin"},"content":"        return builder.toString();","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"sbhbenjamin":123}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.List;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":" * tasks uses Task#isSameTask(Task) for equality to ensure that the task being added or updated is","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object)","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":" * to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":" *","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":" *","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     * Returns true if the list contains an exactly the same task as the given argument.","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"    public boolean strictContains(Task toCheck) {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"sbhbenjamin"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"sbhbenjamin"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"sbhbenjamin"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":105,"author":{"gitId":"sbhbenjamin"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask} under stricter conditions","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"     * by using {@link Task#equals(Object) equals}.","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"    public void strictSetTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"thikhinab"},"content":"        if (strictContains(editedTask)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"thikhinab"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"thikhinab"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"sbhbenjamin"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"sbhbenjamin"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":136,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":137,"author":{"gitId":"sbhbenjamin"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"sbhbenjamin"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":140,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":142,"author":{"gitId":"sbhbenjamin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"sbhbenjamin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":144,"author":{"gitId":"sbhbenjamin"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"sbhbenjamin"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":147,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":148,"author":{"gitId":"sbhbenjamin"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":149,"author":{"gitId":"sbhbenjamin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-27"},{"lineNumber":150,"author":{"gitId":"sbhbenjamin"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":152,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":154,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"sbhbenjamin"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"sbhbenjamin"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-02-27"},{"lineNumber":158,"author":{"gitId":"sbhbenjamin"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-02-27"},{"lineNumber":159,"author":{"gitId":"sbhbenjamin"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-02-27"},{"lineNumber":160,"author":{"gitId":"sbhbenjamin"},"content":"                    return false;","lastModifiedDate":"2022-02-27"},{"lineNumber":161,"author":{"gitId":"sbhbenjamin"},"content":"                }","lastModifiedDate":"2022-02-27"},{"lineNumber":162,"author":{"gitId":"sbhbenjamin"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":163,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":164,"author":{"gitId":"sbhbenjamin"},"content":"        return true;","lastModifiedDate":"2022-02-27"},{"lineNumber":165,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":166,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"thikhinab":29,"sbhbenjamin":137}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":" * identity).","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"sbhbenjamin":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"sbhbenjamin":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":" * Contains utility methods for populating {@code TaskList} with sample data.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"        return new Task[] {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"            new Task(new Name(\"Complete Tutorial\"), new Description(\"Hand draw UML diagrams\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"                new CompletionStatus(\"true\"), new Deadline(\"2022-03-10\"), getTagSet(\"CS2103T\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"            new Task(new Name(\"Prepare for Presentation\"), new Description(\"Finalise slides and memorise script\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"                new CompletionStatus(\"false\"), new Deadline(\"2022-03-12\"), getTagSet(\"CS2101\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"            new Task(new Name(\"Review individual projects\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"                new Description(\"Review two ips that are sent to my email, for 4 participation points\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"                new CompletionStatus(\"true\"), new Deadline(\"2022-03-13\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"                getTagSet(\"CS2103T\", \"participation\")),","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"            new Task(new Name(\"Revise for Midterm Test\"), new Description(\"Chapters 1-5\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"                new CompletionStatus(\"false\"), new Deadline(\"2022-03-25\"), getTagSet(\"CS2102\")),","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"            new Task(new Name(\"Complete Assignment\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"                new Description(\"Name submission file as assignment1_name and upload to Luminus folder\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"                new CompletionStatus(\"false\"), new Deadline(\"2022-04-01\"), getTagSet(\"CS2105\"))","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        TaskList sampleTl \u003d new TaskList();","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"            sampleTl.addTask(sampleTask);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"        return sampleTl;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"nicollegann":27,"-":27,"sbhbenjamin":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":" * Jackson-friendly version of {@link seedu.address.model.task.Task}","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    private final String name;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    private final String description;","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    private final String isCompleted;","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    private final String deadline;","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"description\") String description,","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"                             @JsonProperty(\"isCompleted\") String isCompleted, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"    public JsonAdaptedTask(Task task) {","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"        name \u003d task.getName().fullName;","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"        description \u003d task.getDescription().value;","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"        isCompleted \u003d task.getCompletionStatus().value;","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"        deadline \u003d task.getDeadline().value;","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"        tagged.addAll(task.getTags().stream()","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"     * Converts this Jackson-friendly adapted Task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"        if (isCompleted \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"                    CompletionStatus.class.getSimpleName()));","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"        if (!CompletionStatus.isValidCompletionStatus(isCompleted)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(CompletionStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"        final CompletionStatus modelIsCompleted \u003d new CompletionStatus(isCompleted);","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"                    Deadline.class.getSimpleName()));","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"        return new Task(modelName, modelDescription, modelIsCompleted, modelDeadline, modelTags);","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"thikhinab":112}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"class JsonSerializableTaskList {","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given tasks.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     * Converts a given {@code ReadOnlyTaskList} into this class for Jackson use.","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskList}.","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     * Converts this task list into the model\u0027s {@code TaskList} object.","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"    public TaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"            if (taskList.hasTask(task)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"        return taskList;","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"thikhinab":60}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":" * A class to access TaskList data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException {","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"     * Similar to {@link #readTaskList()}.","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"        if (!jsonTaskList.isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"thikhinab":20,"-":59}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"public interface Storage extends TaskListStorage, UserPrefsStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thikhinab":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":" * Manages storage of TaskList data in local storage.","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     * Creates a {@code StorageManager} with the given {@code TaskListStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    public StorageManager(TaskListStorage taskListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thikhinab":17,"-":60}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":" * Represents a storage for {@link seedu.address.model.TaskList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"public interface TaskListStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"     * Returns TaskList data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"     * @see #getTaskListFilePath()","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"     * @param taskList cannot be null.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"thikhinab":47}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaskListFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"joeietao"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2022-03-09"},{"lineNumber":167,"author":{"gitId":"joeietao"},"content":"        return taskListPanel;","lastModifiedDate":"2022-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joeietao":7,"-":189}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"    public final Task task;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"    private Label description;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"    private Label completionStatus;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"    private Label deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"        description.setText(task.getDescription().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"        completionStatus.setText((task.getCompletionStatus().value \u003d\u003d \"true\") ? \"Completed\" : \"Incomplete\");","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"        deadline.setText(task.getDeadline().value);","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"        task.getTags().stream()","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"joeietao":19,"-":58}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"    @FXML","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"        super(FXML);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"                setText(null);","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"            } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"joeietao":49}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"         title\u003d\"Harmonia\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"        \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"joeietao":3,"-":57}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"      \u003cLabel fx:id\u003d\"completionStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$completionStatus\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"      \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeietao":3,"-":33}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"joeietao":1,"-":7}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import java.util.HashMap;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import java.util.Map;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import javafx.application.Application;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//public class AppParametersTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    public void parse_validConfigPath_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    public void parse_nullConfigPath_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//        expected.setConfigPath(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":58}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//public class LogicManagerTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    @TempDir","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//    public Path temporaryFolder;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//    private Logic logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        // Execute add command","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//                + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joeietao"},"content":"//     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joeietao"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joeietao"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joeietao"},"content":"//            String expectedMessage) {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"joeietao"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"joeietao"},"content":"//     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"joeietao"},"content":"//     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"joeietao"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"joeietao"},"content":"//     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"joeietao"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"joeietao"},"content":"//            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"joeietao"},"content":"//        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"joeietao"},"content":"//     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"joeietao"},"content":"//    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"joeietao"},"content":"//        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"joeietao"},"content":"//            super(filePath);","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"joeietao"},"content":"//        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"joeietao"},"content":"//            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"///**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"// * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"// */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//public class AddCommandIntegrationTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    private Model model;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    public void execute_newTask_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//        expectedModel.addTask(validTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(new AddCommand(validTask), model,","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//                String.format(AddCommand.MESSAGE_SUCCESS, validTask), expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//        Task taskInList \u003d model.getTaskList().getTaskList().get(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(new AddCommand(taskInList), model, AddCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//public class AddCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//        CommandResult commandResult \u003d new AddCommand(validTask).execute(modelStub);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//        AddCommand addCommand \u003d new AddCommand(validTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        Task eat \u003d new TaskBuilder().withName(\"eat\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//        Task work \u003d new TaskBuilder().withName(\"work\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//        AddCommand addEatCommand \u003d new AddCommand(eat);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//        AddCommand addWorkCommand \u003d new AddCommand(work);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//        assertTrue(addEatCommand.equals(addEatCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//        AddCommand addEatCommandCopy \u003d new AddCommand(eat);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//        assertTrue(addEatCommand.equals(addEatCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        assertFalse(addEatCommand.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//        assertFalse(addEatCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//        // different task -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        assertFalse(addEatCommand.equals(addWorkCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//     * A default model stub that have all the failing methods.","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//    private class ModelStub implements Model {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//        public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//        public void addTask(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//        public void setTaskList(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joeietao"},"content":"//        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joeietao"},"content":"//        public void deleteTask(Task target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"joeietao"},"content":"//        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"joeietao"},"content":"//        public void strictSetTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"joeietao"},"content":"//        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"joeietao"},"content":"//        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"joeietao"},"content":"//     * A Model stub that contains a single task.","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"joeietao"},"content":"//    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"joeietao"},"content":"//        private final Task task;","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"joeietao"},"content":"//        ModelStubWithTask(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"joeietao"},"content":"//            requireNonNull(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"joeietao"},"content":"//            this.task \u003d task;","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"joeietao"},"content":"//        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"joeietao"},"content":"//            requireNonNull(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"joeietao"},"content":"//            return this.task.isSameTask(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"joeietao"},"content":"//     * A Model stub that always accept the task being added.","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"joeietao"},"content":"//    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"joeietao"},"content":"//        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"joeietao"},"content":"//        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"joeietao"},"content":"//            requireNonNull(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"joeietao"},"content":"//            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"joeietao"},"content":"//        public void addTask(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"joeietao"},"content":"//            requireNonNull(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"joeietao"},"content":"//            tasksAdded.add(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"joeietao"},"content":"//        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"joeietao"},"content":"//        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"joeietao"},"content":"//            return new TaskList();","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":198}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//public class ClearCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//    public void execute_emptyTaskList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//        Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    public void execute_nonEmptyTaskList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//        expectedModel.setTaskList(new TaskList());","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//public class CommandResultTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//        assertFalse(commandResult.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//        // different showHelp value -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//        // different exit value -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//    public void hashcode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//        // same values -\u003e returns same hashcode","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_NAME_TUTORIAL \u003d \"Complete Tutorial\";","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_NAME_MIDTERM \u003d \"Midterm Test\";","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_DESCRIPTION_TUTORIAL \u003d \"Week 9 Tutorial, draw OODM \u0026 activity diagram\";","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_DESCRIPTION_MIDTERM \u003d \"Chapter 1-3\";","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_DEADLINE_TUTORIAL \u003d \"2022-03-17\";","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_DEADLINE_MIDTERM \u003d \"2022-03-21\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_COMPLETION_STATUS_TRUE \u003d \"true\";","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_COMPLETION_STATUS_FALSE \u003d \"false\";","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_TAG_CS2103T \u003d \"CS2103T\";","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_TAG_CS2102 \u003d \"CS2102\";","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"    public static final String VALID_TAG_TEST \u003d \"Test\";","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    public static final String NAME_DESC_TUTORIAL \u003d \" \" + PREFIX_NAME + VALID_NAME_TUTORIAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"    public static final String NAME_DESC_MIDTERM \u003d \" \" + PREFIX_NAME + VALID_NAME_MIDTERM;","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"    public static final String DESCRIPTION_DESC_TUTORIAL \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_TUTORIAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"    public static final String DESCRIPTION_DESC_MIDTERM \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    public static final String DEADLINE_DESC_TUTORIAL \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_TUTORIAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    public static final String DEADLINE_DESC_MIDTERM \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_MIDTERM;","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    public static final String TAG_DESC_CS2103T \u003d \" \" + PREFIX_TAG + VALID_TAG_CS2103T;","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"    public static final String TAG_DESC_CS2102 \u003d \" \" + PREFIX_TAG + VALID_TAG_CS2102;","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"    public static final String TAG_DESC_TEST \u003d \" \" + PREFIX_TAG + VALID_TAG_TEST;","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME; // empty string not allowed for names","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + \"Lorem ipsum dolor sit amet, \"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"            + \"consectetur adipiscing elit. Sed metus diam, egestas sed ante pulvinar, fermentum dignissim arcu. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"            + \"Donec pellentesque massa vel dolor blandit imperdiet. In bibendum justo urna, vitae venenatis \"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"            + \"magna dictum quis. Proin erat curae.\"; // description should not be more than 255 characters","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"    public static final String INVALID_DEADLINE_DESC \u003d \" \" + PREFIX_DEADLINE + \"2022/01/01\"; // wrong date format","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"test*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_TUTORIAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_MIDTERM;","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        DESC_TUTORIAL \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_TUTORIAL)","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"                .withDescription(VALID_DESCRIPTION_TUTORIAL).withDeadline(VALID_DEADLINE_TUTORIAL)","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"                .withTags(VALID_TAG_CS2103T).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"        DESC_MIDTERM \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_MIDTERM)","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"                .withDescription(VALID_DESCRIPTION_MIDTERM).withDeadline(VALID_DEADLINE_MIDTERM)","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"                .withTags(VALID_TAG_CS2102, VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"     * - the task list, filtered task list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"        TaskList expectedTaskList \u003d new TaskList(actualModel.getTaskList());","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"        assertEquals(expectedTaskList, actualModel.getTaskList());","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"     * {@code model}\u0027s task list.","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"thikhinab"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"thikhinab"},"content":"        final String[] splitName \u003d task.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"thikhinab"},"content":"        model.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"thikhinab"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"thikhinab":57,"-":73}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"///**","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"// * {@code DeleteCommand}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"// */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//public class DeleteCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//        ModelManager expectedModel \u003d new ModelManager(model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//        showNoTask(expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//        // different task -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//    private void showNoTask(Model model) {","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":109}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"///**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"// */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//public class EditCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//        Task editedTask \u003d taskInList.withName(VALID_NAME_MIDTERM).withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//                .withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_MIDTERM)","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//                .withDescription(VALID_DESCRIPTION_MIDTERM).withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastTask, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withName(VALID_NAME_MIDTERM).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//                new EditTaskDescriptorBuilder().withName(VALID_NAME_MIDTERM).build());","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//        Model expectedModel \u003d new ModelManager(new TaskList(model.getTaskList()), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//        // edit task in filtered list into a duplicate in task list","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//        Task taskInList \u003d model.getTaskList().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joeietao"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_MIDTERM).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joeietao"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joeietao"},"content":"//     * but smaller than size of task list","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"joeietao"},"content":"//    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"joeietao"},"content":"//        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"joeietao"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"joeietao"},"content":"//        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"joeietao"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"joeietao"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"joeietao"},"content":"//                new EditTaskDescriptorBuilder().withName(VALID_NAME_MIDTERM).build());","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"joeietao"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"joeietao"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"joeietao"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_TASK, DESC_TUTORIAL);","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"joeietao"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_TUTORIAL);","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"joeietao"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"joeietao"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"joeietao"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"joeietao"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"joeietao"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"joeietao"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"joeietao"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"joeietao"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"joeietao"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"joeietao"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_TASK, DESC_TUTORIAL)));","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"joeietao"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"joeietao"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_TASK, DESC_MIDTERM)));","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":173}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//public class EditTaskDescriptorTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_TUTORIAL);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//        assertTrue(DESC_TUTORIAL.equals(descriptorWithSameValues));","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//        assertTrue(DESC_TUTORIAL.equals(DESC_TUTORIAL));","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//        assertFalse(DESC_TUTORIAL.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//        assertFalse(DESC_TUTORIAL.equals(5));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//        assertFalse(DESC_TUTORIAL.equals(DESC_MIDTERM));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"//        EditTaskDescriptor editedTutorial \u003d new EditTaskDescriptorBuilder(DESC_TUTORIAL)","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"//                .withName(VALID_NAME_MIDTERM).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//        assertFalse(DESC_TUTORIAL.equals(editedTutorial));","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//        // different description -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"//        editedTutorial \u003d new EditTaskDescriptorBuilder(DESC_TUTORIAL)","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"//                .withDescription(VALID_DESCRIPTION_MIDTERM).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//        assertFalse(DESC_TUTORIAL.equals(editedTutorial));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//        // different deadline -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//        editedTutorial \u003d new EditTaskDescriptorBuilder(DESC_TUTORIAL).withDeadline(VALID_DEADLINE_MIDTERM).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//        assertFalse(DESC_TUTORIAL.equals(editedTutorial));","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//        editedTutorial \u003d new EditTaskDescriptorBuilder(DESC_TUTORIAL).withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//        assertFalse(DESC_TUTORIAL.equals(editedTutorial));","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":4,"joeietao":51}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//public class ExitCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//    public void execute_exit_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":20}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.APPLY_INTERNSHIP;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.BUY_ART_SUPPLIES;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.MEET_ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"///**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"// * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"// */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//public class FindCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    private Model expectedModel \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//        // different task -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alice Art Internship\");","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        assertEquals(Arrays.asList(MEET_ALICE, BUY_ART_SUPPLIES, APPLY_INTERNSHIP), model.getFilteredTaskList());","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":83}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//public class HelpCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//    public void execute_help_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":20}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"///**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"// */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//public class ListCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//    private Model model;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    private Model expectedModel;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    @BeforeEach","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    public void setUp() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//        expectedModel \u003d new ModelManager(model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":39}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPLETION_STATUS_TRUE;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"        Task markedTask \u003d new TaskBuilder(taskToMark).withCompletionStatus(VALID_COMPLETION_STATUS_TRUE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        expectedModel.strictSetTask(model.getFilteredTaskList().get(0), markedTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"    public void execute_validCompletedTaskUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"        // INDEX SECOND TASK: default completion status set to true","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"        assertEquals(taskToMark.getCompletionStatus().value, \"true\");","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"        assertCommandFailure(markCommand, model, MarkCommand.MESSAGE_TASK_ALREADY_COMPLETED);","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"        Task markedTask \u003d new TaskBuilder(taskToMark).withCompletionStatus(VALID_COMPLETION_STATUS_TRUE).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskList(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"        expectedModel.strictSetTask(model.getFilteredTaskList().get(0), markedTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"        // ensures that outOfBoundIndex is still in bounds of task list","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskList().getTaskList().size());","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"thikhinab":118}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2102;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2102;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalTasks.CS2102_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"AinsleyJ"},"content":"//    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        Task expectedTask \u003d new TaskBuilder(CS2102_MIDTERM).withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//        // whitespace only preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//                + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST, new AddCommand(expectedTask));","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//        // multiple names - last name accepted","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, NAME_DESC_TUTORIAL + NAME_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//                + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST , new AddCommand(expectedTask));","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        // multiple descriptions - last description accepted","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, NAME_DESC_MIDTERM + DESCRIPTION_DESC_TUTORIAL","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//                + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST , new AddCommand(expectedTask));","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//        // multiple deadlines - last deadline accepted","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser,  NAME_DESC_MIDTERM + DESCRIPTION_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//                + DEADLINE_DESC_TUTORIAL + DEADLINE_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST , new AddCommand(expectedTask));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//        // multiple tags - all accepted","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//        Task expectedTaskMultipleTags \u003d new TaskBuilder(CS2102_MIDTERM).withTags(VALID_TAG_TEST, VALID_TAG_CS2102)","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//                .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser,  NAME_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//                + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM + TAG_DESC_TEST","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_CS2102, new AddCommand(expectedTaskMultipleTags));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//     * This method is commented out now, as there\u0027s no optional fields at this point.","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"////    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"////    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"////        // zero tags","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"////        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"////        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"////                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"////    }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//        // missing name prefix","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, VALID_NAME_MIDTERM + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM,","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//        // missing description prefix","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, NAME_DESC_MIDTERM + VALID_DESCRIPTION_MIDTERM + DEADLINE_DESC_MIDTERM,","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//        // missing deadline prefix","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, NAME_DESC_MIDTERM + DESCRIPTION_DESC_MIDTERM + VALID_DEADLINE_MIDTERM,","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//        // all prefixes missing","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, VALID_NAME_MIDTERM + VALID_DESCRIPTION_MIDTERM + VALID_DEADLINE_MIDTERM,","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//                expectedMessage);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        // invalid name","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST + TAG_DESC_CS2102, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//        // invalid description","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, NAME_DESC_MIDTERM + INVALID_DESCRIPTION_DESC + DEADLINE_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST + TAG_DESC_CS2102, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//        // invalid deadline","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, NAME_DESC_MIDTERM + DESCRIPTION_DESC_MIDTERM + INVALID_DEADLINE_DESC","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST + TAG_DESC_CS2102, Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//        // invalid tag","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, NAME_DESC_MIDTERM + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//                + INVALID_TAG_DESC + TAG_DESC_CS2102, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + DESCRIPTION_DESC_MIDTERM + INVALID_DEADLINE_DESC","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_TEST + TAG_DESC_CS2102, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joeietao"},"content":"//        // non-empty preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_MIDTERM + DESCRIPTION_DESC_MIDTERM","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joeietao"},"content":"//                + DEADLINE_DESC_MIDTERM + TAG_DESC_TEST + TAG_DESC_CS2102,","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joeietao"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"AinsleyJ"},"content":"//}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"joeietao":130,"AinsleyJ":2}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//public class ArgumentTokenizerTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//        String argsString \u003d \"  \";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//        // Verify the last value is returned","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        // Verify the number of values returned is as expected","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//        // Verify all values returned are as expected and in order","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//    public void tokenize_oneArgument() {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        // Preamble present","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        // No preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//    public void tokenize_multipleArguments() {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//        // Only two arguments are present","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//        // All three arguments are present","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//        argsString \u003d \"\";","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//        // Two arguments repeated, some have empty values","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joeietao"},"content":"//    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joeietao"},"content":"//        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joeietao"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joeietao"},"content":"//        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joeietao"},"content":"//        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"joeietao"},"content":"//        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"joeietao"},"content":"//        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"joeietao"},"content":"//    public void equalsMethod() {","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"joeietao"},"content":"//        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"joeietao"},"content":"//        assertEquals(aaa, aaa);","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"joeietao"},"content":"//        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"joeietao"},"content":"//        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"joeietao"},"content":"//        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":150}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"///**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"// * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"// * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"// * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"// * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"// * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"// */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//public class DeleteCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2103T;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//public class EditCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//        // no index specified","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, VALID_NAME_TUTORIAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//        // no field specified","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//        // no index and no field specified","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//        // negative index","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_TUTORIAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//        // zero index","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_TUTORIAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"//        assertParseFailure(","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"//                parser, \"1\" + INVALID_DESCRIPTION_DESC, Description.MESSAGE_CONSTRAINTS); // invalid description","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC, Deadline.MESSAGE_CONSTRAINTS); // invalid deadline","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//        // invalid description followed by valid deadline","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//                parser, \"1\" + INVALID_DESCRIPTION_DESC + DEADLINE_DESC_TUTORIAL, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//        // valid description followed by invalid description. The test case for invalid description followed by","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//        // valid description is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//                parser, \"1\" + DESCRIPTION_DESC_MIDTERM + INVALID_DESCRIPTION_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Task} being edited,","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_CS2103T + TAG_DESC_TEST + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_CS2103T + TAG_EMPTY + TAG_DESC_TEST, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_CS2103T + TAG_DESC_TEST, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_DEADLINE_DESC + VALID_DESCRIPTION_TUTORIAL,","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_MIDTERM + TAG_DESC_TEST","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//                + DEADLINE_DESC_TUTORIAL + NAME_DESC_TUTORIAL + TAG_DESC_CS2103T;","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_TUTORIAL)","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//                .withDescription(VALID_DESCRIPTION_MIDTERM).withDeadline(VALID_DEADLINE_TUTORIAL)","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//                .withTags(VALID_TAG_CS2103T, VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joeietao"},"content":"//                .withDeadline(VALID_DEADLINE_TUTORIAL).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joeietao"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joeietao"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joeietao"},"content":"//        // name","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joeietao"},"content":"//        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joeietao"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_TUTORIAL).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"joeietao"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"joeietao"},"content":"//        // description","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"joeietao"},"content":"//        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"joeietao"},"content":"//        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_TUTORIAL).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"joeietao"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"joeietao"},"content":"//        // deadline","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"joeietao"},"content":"//        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_TUTORIAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"joeietao"},"content":"//        descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE_TUTORIAL).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"joeietao"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"joeietao"},"content":"//        // tags","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"joeietao"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_CS2103T;","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"joeietao"},"content":"//        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TAG_CS2103T).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"joeietao"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"joeietao"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"joeietao"},"content":"//        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"joeietao"},"content":"//        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_TUTORIAL + DEADLINE_DESC_TUTORIAL","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"joeietao"},"content":"//                + TAG_DESC_CS2103T + DESCRIPTION_DESC_TUTORIAL + DEADLINE_DESC_TUTORIAL + TAG_DESC_CS2103T","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"joeietao"},"content":"//                + DESCRIPTION_DESC_MIDTERM + DEADLINE_DESC_MIDTERM + TAG_DESC_TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"joeietao"},"content":"//                .withDeadline(VALID_DEADLINE_MIDTERM).withTags(VALID_TAG_CS2103T, VALID_TAG_TEST)","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"joeietao"},"content":"//                .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"joeietao"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"joeietao"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"joeietao"},"content":"//        // no other valid values specified","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"joeietao"},"content":"//        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"joeietao"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_DESCRIPTION_DESC + DESCRIPTION_DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"nicollegann"},"content":"//        EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"nicollegann"},"content":"//                new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_MIDTERM).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"joeietao"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"joeietao"},"content":"//        // other valid values specified","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"joeietao"},"content":"//        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_MIDTERM + INVALID_DESCRIPTION_DESC","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"joeietao"},"content":"//                + DESCRIPTION_DESC_MIDTERM;","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"joeietao"},"content":"//        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"joeietao"},"content":"//                .withDeadline(VALID_DEADLINE_MIDTERM).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"joeietao"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"joeietao"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"joeietao"},"content":"//        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"joeietao"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"joeietao"},"content":"//        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"joeietao"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":4,"joeietao":198}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//public class FindCommandParserTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Tutorial\", \"Midterm\")));","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, \"Tutorial Midterm\", expectedFindCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//        assertParseSuccess(parser, \" \\n Tutorial \\n \\t Midterm  \\t\", expectedFindCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":34}},{"path":"src/test/java/seedu/address/logic/parser/HarmoniaParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"public class HarmoniaParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"    private final HarmoniaParser parser \u003d new HarmoniaParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TaskUtil.getAddCommand(task));","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        assertEquals(new AddCommand(task), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_TASK), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(task).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"                + INDEX_FIRST_TASK.getOneBased() + \" \" + TaskUtil.getEditTaskDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_TASK, descriptor), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"        MarkCommand command \u003d (MarkCommand) parser.parseCommand(","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"                MarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"        assertEquals(new MarkCommand(INDEX_FIRST_TASK), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), (","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"            ) -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"thikhinab":28,"-":81}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":" * outside of the MarkCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":" * same path through the MarkCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"        assertParseSuccess(parser, \"1\", new MarkCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"thikhinab":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//public class ParserUtilTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    private static final String INVALID_NAME \u003d \" \"; // empty string not allowed for names","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    private static final String INVALID_DESCRIPTION \u003d \" \"; // empty string not allowed for description","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//    private static final String INVALID_DEADLINE \u003d \"2022/01/01\"; // wrong date format","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//    private static final String INVALID_TAG \u003d \"#test\"; // \u0027#\u0027 not allowed in tags","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    private static final String VALID_NAME \u003d \"Complete Assignment\";","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    private static final String VALID_DESCRIPTION \u003d \"Upload submission file to LumiNUS folder\";","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//    private static final String VALID_DEADLINE \u003d \"2022-04-02\";","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    private static final String VALID_TAG_1 \u003d \"CS2103T\";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//    private static final String VALID_TAG_2 \u003d \"Test\";","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//        // No whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//        // Leading and trailing whitespaces","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//    public void parseDeadline_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDeadline((String) null));","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//    public void parseDeadline_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDeadline(INVALID_DEADLINE));","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//    public void parseDeadline_validValueWithoutWhitespace_returnsDeadline() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedDeadline, ParserUtil.parseDeadline(VALID_DEADLINE));","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//    public void parseDeadline_validValueWithWhitespace_returnsTrimmedDeadline() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//        String deadlineWithWhitespace \u003d WHITESPACE + VALID_DEADLINE + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//        Deadline expectedDeadline \u003d new Deadline(VALID_DEADLINE);","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedDeadline, ParserUtil.parseDeadline(deadlineWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joeietao"},"content":"//    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joeietao"},"content":"//    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joeietao"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"joeietao"},"content":"//    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"joeietao"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"joeietao"},"content":"//    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"joeietao"},"content":"//        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"joeietao"},"content":"//        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"joeietao"},"content":"//    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"joeietao"},"content":"//    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"joeietao"},"content":"//        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"joeietao"},"content":"//    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"joeietao"},"content":"//        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"joeietao"},"content":"//    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"joeietao"},"content":"//        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"joeietao"},"content":"//        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":170}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2102_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2105_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2107_ASSIGNMENT;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.testutil.TaskListBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(new TaskList(), new TaskList(modelManager.getTaskList()));","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"        userPrefs.setTaskListFilePath(Paths.get(\"task/list/file/path\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"        userPrefs.setTaskListFilePath(Paths.get(\"new/task/list/file/path\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTaskListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskListFilePath(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTaskListFilePath_validPath_setsTaskListFilePath() {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"        Path path \u003d Paths.get(\"task/list/file/path\");","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"        modelManager.setTaskListFilePath(path);","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(path, modelManager.getTaskListFilePath());","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"    public void hasTask_taskNotInTaskList_returnsFalse() {","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(modelManager.hasTask(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"    public void hasTask_taskInTaskList_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"        modelManager.addTask(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(modelManager.hasTask(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"sbhbenjamin"},"content":"        TaskList taskList \u003d new TaskListBuilder().withTask(CS2105_MIDTERM).withTask(CS2102_MIDTERM).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"sbhbenjamin"},"content":"        TaskList differentTaskList \u003d new TaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"        modelManager \u003d new ModelManager(taskList, userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"sbhbenjamin"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(taskList, userPrefs);","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"sbhbenjamin"},"content":"        // different taskList -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTaskList, userPrefs)));","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"sbhbenjamin"},"content":"        String[] keywords \u003d CS2107_ASSIGNMENT.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"sbhbenjamin"},"content":"        modelManager.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskList, userPrefs)));","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"sbhbenjamin"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"sbhbenjamin"},"content":"        differentUserPrefs.setTaskListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskList, differentUserPrefs)));","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"-":97,"sbhbenjamin":36}},{"path":"src/test/java/seedu/address/model/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2105_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"public class TaskListTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor() {","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(Collections.emptyList(), taskList.getTaskList());","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.resetData(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"    public void resetData_withValidReadOnlyTaskList_replacesData() {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"        TaskList newData \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.resetData(newData);","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(newData, taskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"        Task editedCS2105 \u003d new TaskBuilder(CS2105_MIDTERM)","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"                .withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"                .withTags(VALID_TAG_TEST)","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"                .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(CS2105_MIDTERM, editedCS2105);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"        TaskListStub newData \u003d new TaskListStub(newTasks);","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.resetData(newData));","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.hasTask(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"    public void hasTask_taskNotInTaskList_returnsFalse() {","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(taskList.hasTask(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"    public void hasTask_taskInTaskList_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.addTask(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(taskList.hasTask(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskList_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"        taskList.addTask(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"        Task editedCS2105 \u003d new TaskBuilder(CS2105_MIDTERM).withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"                .withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(taskList.hasTask(editedCS2105));","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taskList.getTaskList().remove(0));","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"     * A stub ReadOnlyTaskList whose tasks list can violate interface constraints.","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"    private static class TaskListStub implements ReadOnlyTaskList {","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"        TaskListStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"sbhbenjamin"},"content":"        @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"sbhbenjamin"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"sbhbenjamin"},"content":"            return tasks;","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sbhbenjamin":104}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTaskListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskListFilePath(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"-":19,"sbhbenjamin":2}},{"path":"src/test/java/seedu/address/model/task/CompletionStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"public class CompletionStatusTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CompletionStatus(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_invalidCompletionStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"        String invalidCompletionStatus \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CompletionStatus(invalidCompletionStatus));","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    public void isValidCompletionStatus() {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"        // invalid completion status","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(\"\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(\"F\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CompletionStatus.isValidCompletionStatus(\"T\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"        // valid completion status","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(CompletionStatus.isValidCompletionStatus(\"true\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(CompletionStatus.isValidCompletionStatus(\"false\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sbhbenjamin":34}},{"path":"src/test/java/seedu/address/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"        String invalidDeadline \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"        // null date","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        // blank date","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\" \")); // spaces only","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        // missing parts","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"10-22\")); // missing year","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"2022-10\")); // missing month","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"2022-22\")); // missing day","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        // invalid parts","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"2022-10-32\")); // day exceeds limit","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"2022-13-26\")); // month exceeds limit","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"999-13-26\")); // year under limit","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"10000-13-26\")); // year over limit","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"        // invalid format","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"26-10-2022\")); // DD-MM-YYYY","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"10-26-2022\")); // MM-DD-YYYY","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"2022/10/22\")); // DD/MM/YYYY","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"--03-20\")); // ISO_8601 format without year","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"20090106\")); // Basic ISO_8601 format","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"2nd October 2007\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Deadline.isValidDeadline(\"2 October 2007\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"        // valid date","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Deadline.isValidDeadline(\"2022-10-22\")); // YYYY-MM-DD","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sbhbenjamin":54}},{"path":"src/test/java/seedu/address/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    public void isValidDescription() {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"        // null description","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        // invalid descriptions","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Description.isValidDescription(\"ㅁㅂㅇㅈㅊㅋㅌㅍㅎ\")); // non-english characters","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Description.isValidDescription(\"╲ʕ·ᴥ· ╲ʔ\")); // symbols","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Description.isValidDescription(\"☝\")); // emojis","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Description.isValidDescription(\" Complete CS2103T Week 8 Readings\")); // first char whitespace","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Description.isValidDescription(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"                + \"sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"                + \"nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"                + \"dolor em\")); // 256 characters","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"        // valid description","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Description.isValidDescription(\"Complete CS2103T Week 8 Readings\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Description.isValidDescription(\"H\")); // one character","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Description.isValidDescription(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"                + \"sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \"","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"                + \"nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"                + \"dolor e\")); // 255 characters","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sbhbenjamin":47}},{"path":"src/test/java/seedu/address/model/task/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"                new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"                Collections.singletonList(\"CS2103T\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"CS2103T tutorial\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"Tutorial\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"CS2103T Tutorial\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"CS2103T\", \"CS3240\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"CS3240 Finals\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"TutoriaL\", \"cs3240\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"CS3240 tutorial\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"CS3240\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"CS3240\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"CS2103T Tutorial\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"        // Keywords match description, completion status, deadline and tags, but does not match name","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"                .asList(\"G1\", \"true\", \"2022-10-22\", \"CS2103T\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(predicate.test(new TaskBuilder()","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"                .withName(\"Complete Tutorial\")","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"                .withDescription(\"Finish 3 parts of G1\")","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"                .withCompletionStatus(\"true\")","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"                .withDeadline(\"2022-10-22\")","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"                .withTags(\"CS2103T\").build()));","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"-":55,"sbhbenjamin":27}},{"path":"src/test/java/seedu/address/model/task/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"public class NameTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    public void isValidName() {","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"        // null name","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"        // invalid name","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Name.isValidName(\" Complete CS3240 Milestones\")); // first character whitespace","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Name.isValidName(\"ㅁㅂㅇㅈㅊㅋㅌㅍㅎ\")); // non-english characters","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Name.isValidName(\"╲ʕ·ᴥ· ╲ʔ\")); // symbols","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Name.isValidName(\"☝\")); // emojis","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(Name.isValidName(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"                + \"sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"                + \"nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \"","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"                + \"dolor em\")); // 256 characters","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"        // valid name","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Name.isValidName(\"complete tutorials\")); // alphabets only","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Name.isValidName(\"complete cs3240 milestones\")); // alphanumeric characters","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Name.isValidName(\"Complete Tutorials\")); // with capital letters","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        // contains non-alphanumeric characters","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Name.isValidName(\"Complete CS3240 Milestones, Tutorials and Lectures\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(Name.isValidName(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"                + \"sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis \"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"                + \"nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \"","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"                + \"dolor e\")); // 255 characters","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sbhbenjamin":51}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPLETION_STATUS_FALSE;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPLETION_STATUS_TRUE;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_TUTORIAL;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TUTORIAL;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_TUTORIAL;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2105_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2105_TUTORIAL;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"public class TaskTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(CS2105_MIDTERM.isSameTask(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.isSameTask(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"        Task editedMidtermTask \u003d new TaskBuilder(CS2105_MIDTERM)","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"                .withDescription(VALID_DESCRIPTION_TUTORIAL)","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"                .withDeadline(VALID_DEADLINE_TUTORIAL)","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"                .withCompletionStatus(VALID_COMPLETION_STATUS_FALSE)","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"                .withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(CS2105_MIDTERM.isSameTask(editedMidtermTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        editedMidtermTask \u003d new TaskBuilder(CS2105_MIDTERM).withName(VALID_NAME_TUTORIAL).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.isSameTask(editedMidtermTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"        Task editedTutorialTask \u003d new TaskBuilder(CS2105_TUTORIAL)","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"                .withName(VALID_NAME_TUTORIAL.toLowerCase())","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"                .build();","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_TUTORIAL.isSameTask(editedTutorialTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_TUTORIAL + \" \";","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"        editedTutorialTask \u003d new TaskBuilder(CS2105_TUTORIAL).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_TUTORIAL.isSameTask(editedTutorialTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"    public void equals() {","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"        Task midtermCopy \u003d new TaskBuilder(CS2105_MIDTERM).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(CS2105_MIDTERM.equals(midtermCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(CS2105_MIDTERM.equals(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(5));","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(CS2105_TUTORIAL));","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"        Task editedMidtermTask \u003d new TaskBuilder(CS2105_MIDTERM).withName(VALID_NAME_TUTORIAL).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(editedMidtermTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"        editedMidtermTask \u003d new TaskBuilder(CS2105_MIDTERM).withDescription(VALID_DESCRIPTION_TUTORIAL).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(editedMidtermTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"        editedMidtermTask \u003d new TaskBuilder(CS2105_MIDTERM).withDeadline(VALID_DEADLINE_TUTORIAL).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(editedMidtermTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"        // different completion status -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"        editedMidtermTask \u003d new TaskBuilder(CS2105_MIDTERM).withCompletionStatus(VALID_COMPLETION_STATUS_TRUE).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(editedMidtermTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"        editedMidtermTask \u003d new TaskBuilder(CS2105_MIDTERM).withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(CS2105_MIDTERM.equals(editedMidtermTask));","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sbhbenjamin":97}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2103T_PROJECT;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.testutil.TypicalTasks.CS2105_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"        assertFalse(uniqueTaskList.contains(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(uniqueTaskList.contains(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"        Task editedCS2105 \u003d new TaskBuilder(CS2105_MIDTERM).withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"                .withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"        assertTrue(uniqueTaskList.contains(editedCS2105));","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(CS2105_MIDTERM, null));","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(CS2105_MIDTERM, CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.setTask(CS2105_MIDTERM, CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"        expectedUniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"sbhbenjamin"},"content":"        Task editedCS2105 \u003d new TaskBuilder(CS2105_MIDTERM).withDescription(VALID_DESCRIPTION_MIDTERM)","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"sbhbenjamin"},"content":"                .withTags(VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.setTask(CS2105_MIDTERM, editedCS2105);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"sbhbenjamin"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"sbhbenjamin"},"content":"        expectedUniqueTaskList.add(editedCS2105);","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.setTask(CS2105_MIDTERM, CS2103T_PROJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"sbhbenjamin"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"sbhbenjamin"},"content":"        expectedUniqueTaskList.add(CS2103T_PROJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2103T_PROJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(CS2105_MIDTERM, CS2103T_PROJECT));","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"sbhbenjamin"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"sbhbenjamin"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(CS2105_MIDTERM));","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"sbhbenjamin"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.remove(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"sbhbenjamin"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":129,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"sbhbenjamin"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"sbhbenjamin"},"content":"        expectedUniqueTaskList.add(CS2103T_PROJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.add(CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"sbhbenjamin"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(CS2103T_PROJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"sbhbenjamin"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"sbhbenjamin"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"sbhbenjamin"},"content":"        expectedUniqueTaskList.add(CS2103T_PROJECT);","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"sbhbenjamin"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":159,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":160,"author":{"gitId":"sbhbenjamin"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":161,"author":{"gitId":"sbhbenjamin"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(CS2105_MIDTERM, CS2105_MIDTERM);","lastModifiedDate":"2022-03-20"},{"lineNumber":162,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"sbhbenjamin"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":166,"author":{"gitId":"sbhbenjamin"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-20"},{"lineNumber":167,"author":{"gitId":"sbhbenjamin"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-20"},{"lineNumber":168,"author":{"gitId":"sbhbenjamin"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-20"},{"lineNumber":169,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":170,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sbhbenjamin":170}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.TypicalTasks.CS2105_MIDTERM;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"    private static final String INVALID_NAME \u003d \"ㅊㅋㅌㅍㅎ\";","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    private static final String INVALID_COMPLETION_STATUS \u003d \"unknown\";","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"    private static final String INVALID_DEADLINE \u003d \"example.com\";","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"    private static final String INVALID_TAG \u003d \"#CS2103T\";","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"    private static final String VALID_NAME \u003d CS2105_MIDTERM.getName().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"    private static final String VALID_DESCRIPTION \u003d CS2105_MIDTERM.getDescription().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    private static final String VALID_COMPLETION_STATUS \u003d CS2105_MIDTERM.getCompletionStatus().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    private static final String VALID_DEADLINE \u003d CS2105_MIDTERM.getDeadline().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d CS2105_MIDTERM.getTags().stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(CS2105_MIDTERM);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"        assertEquals(CS2105_MIDTERM, task.toModelType());","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(INVALID_NAME, VALID_DESCRIPTION, VALID_COMPLETION_STATUS,","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"                        VALID_DEADLINE, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(null, VALID_DESCRIPTION, VALID_COMPLETION_STATUS,","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"                        VALID_DEADLINE, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(VALID_NAME, INVALID_DESCRIPTION, VALID_COMPLETION_STATUS,","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"                        VALID_DEADLINE, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(VALID_NAME, null, VALID_COMPLETION_STATUS, VALID_DEADLINE, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_invalidCompletionStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, INVALID_COMPLETION_STATUS,","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"                        VALID_DEADLINE, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d CompletionStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_nullCompletionStatus_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, null, VALID_DEADLINE, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CompletionStatus.class.getSimpleName());","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_COMPLETION_STATUS,","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"                        INVALID_DEADLINE, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_COMPLETION_STATUS, null, VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName());","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"thikhinab"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"thikhinab"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"thikhinab"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"thikhinab"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_COMPLETION_STATUS,","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"thikhinab"},"content":"                        VALID_DEADLINE, invalidTags);","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"thikhinab":119,"sbhbenjamin":1}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//    @TempDir","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//                : null;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//        // Save in new file and read back","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thikhinab"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"thikhinab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"thikhinab"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"thikhinab"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"thikhinab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"thikhinab"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"thikhinab"},"content":"public class JsonSerializableTaskListTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"thikhinab"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskListTest\");","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"thikhinab"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTaskList.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"thikhinab"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskList.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"thikhinab"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskTaskList.json\");","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"thikhinab"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"thikhinab"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"        TaskList taskListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"thikhinab"},"content":"        TaskList typicalTaskList \u003d TypicalTasks.getTypicalTaskList();","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"        assertEquals(taskListFromFile, typicalTaskList);","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_invalidTasksFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"thikhinab"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"thikhinab"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"thikhinab"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"thikhinab"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"thikhinab"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"thikhinab"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"thikhinab"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskList.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"thikhinab"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"thikhinab"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"thikhinab"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"thikhinab"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"thikhinab":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import java.util.Optional;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//    @TempDir","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//                : null;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"harmonia.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//        return userPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joeietao"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joeietao"},"content":"//        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joeietao"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joeietao"},"content":"//        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joeietao"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":123}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"thikhinab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"thikhinab"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"thikhinab"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tl\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"thikhinab"},"content":"        storageManager \u003d new StorageManager(taskListStorage, userPrefsStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"thikhinab"},"content":"    public void taskListReadSave() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"thikhinab"},"content":"         * {@link JsonTaskListStorage} class.","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"thikhinab"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskListStorageTest} class.","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"thikhinab"},"content":"        TaskList original \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"thikhinab"},"content":"        storageManager.saveTaskList(original);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"thikhinab"},"content":"        ReadOnlyTaskList retrieved \u003d storageManager.readTaskList().get();","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"thikhinab"},"content":"        assertEquals(original, new TaskList(retrieved));","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"thikhinab"},"content":"    public void getTaskListFilePath() {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"thikhinab"},"content":"        assertNotNull(storageManager.getTaskListFilePath());","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"thikhinab":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"     * consistency with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":2,"-":32}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    private EditCommand.EditTaskDescriptor descriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"        descriptor \u003d new EditCommand.EditTaskDescriptor();","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public EditTaskDescriptorBuilder(EditCommand.EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        this.descriptor \u003d new EditCommand.EditTaskDescriptor(descriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        descriptor \u003d new EditCommand.EditTaskDescriptor();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        descriptor.setDescription(task.getDescription());","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        descriptor.setDeadline(task.getDeadline());","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"     * Sets the {@code Description} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"     * Sets the {@code Deadline} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"    public EditTaskDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"        descriptor.setDeadline(new Deadline(deadline));","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"     * that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"    public EditCommand.EditTaskDescriptor build() {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"        return descriptor;","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":78}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public static final String DEFAULT_NAME \u003d \"CS2103T Tutorial\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Tutorial for Week 9\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"2022-03-16\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"    public static final String DEFAULT_COMPLETION_STATUS \u003d \"false\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    private Name name;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"    private Description description;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"    private CompletionStatus completionStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        deadline \u003d new Deadline(DEFAULT_DEADLINE);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"        completionStatus \u003d new CompletionStatus(DEFAULT_COMPLETION_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"        completionStatus \u003d taskToCopy.getCompletionStatus();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"nicollegann"},"content":"    public TaskBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"nicollegann"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"nicollegann"},"content":"     * Sets the {@code CompletionStatus} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"nicollegann"},"content":"    public TaskBuilder withCompletionStatus(String completionStatus) {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"nicollegann"},"content":"        this.completionStatus \u003d new CompletionStatus(completionStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"nicollegann"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"nicollegann"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"nicollegann"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"nicollegann"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"nicollegann"},"content":"    public TaskBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"nicollegann"},"content":"        this.deadline \u003d new Deadline(deadline);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"nicollegann"},"content":"    public Task build() {","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"nicollegann"},"content":"        return new Task(name, description, completionStatus, deadline, tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":96}},{"path":"src/test/java/seedu/address/testutil/TaskListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":" * A utility class to help with building task list objects.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":" *     {@code TaskList tl \u003d new TaskListBuilder().withTask(\"work\").build();}","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"public class TaskListBuilder {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"    public TaskListBuilder() {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"    public TaskListBuilder(TaskList taskList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"     * Adds a new {@code task} to the {@code TaskList} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    public TaskListBuilder withTask(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    public TaskList build() {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"        return taskList;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":34}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicollegann"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"nicollegann"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":" * A utility class for Task.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"nicollegann"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"public class TaskUtil {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"nicollegann"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"nicollegann"},"content":"    public static String getAddCommand(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"nicollegann"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"nicollegann"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"nicollegann"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"nicollegann"},"content":"        sb.append(PREFIX_NAME + task.getName().fullName + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"nicollegann"},"content":"        sb.append(PREFIX_DESCRIPTION + task.getDescription().value + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"nicollegann"},"content":"        sb.append(PREFIX_DEADLINE + task.getDeadline().value + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"        task.getTags().stream().forEach(","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"nicollegann"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"nicollegann"},"content":"        );","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"nicollegann"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"nicollegann"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"nicollegann"},"content":"    public static String getEditTaskDescriptorDetails(EditCommand.EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"nicollegann"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"nicollegann"},"content":"        descriptor.getDescription().ifPresent(description -\u003e sb.append(PREFIX_DESCRIPTION).append(description.value)","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"nicollegann"},"content":"                .append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"        descriptor.getDeadline().ifPresent(deadline -\u003e sb.append(PREFIX_DEADLINE).append(deadline.value).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"nicollegann"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"nicollegann"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"nicollegann"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"nicollegann"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"nicollegann"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"nicollegann"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"nicollegann"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"nicollegann"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"nicollegann"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":61}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"nicollegann"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"nicollegann"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"nicollegann"},"content":"     * Returns the last index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"nicollegann"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"nicollegann"},"content":"     * Returns the task in the {@code model}\u0027s task list at {@code index}.","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"nicollegann"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"nicollegann"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"nicollegann":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-20"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPLETION_STATUS_FALSE;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPLETION_STATUS_TRUE;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_TUTORIAL;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TUTORIAL;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MIDTERM;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_TUTORIAL;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2102;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2103T;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TEST;","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"import java.util.List;","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"/**","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":" */","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task CS2105_MIDTERM \u003d new TaskBuilder().withName(\"CS2105 Midterm\")","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"            .withCompletionStatus(\"false\").withDeadline(\"2022-03-03\")","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"Lecture 1-5, Tutorial 1-4\")","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"            .withTags(\"CS2105\", \"exam\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"thikhinab"},"content":"    /** Task with Completion Status set to true **/","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"thikhinab"},"content":"    public static final Task CS2105_FINALS \u003d new TaskBuilder().withName(\"CS2105 Finals\")","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"thikhinab"},"content":"            .withCompletionStatus(\"true\")","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"            .withDeadline(\"2022-11-11\").withDescription(\"All lectures and tutorials\")","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"            .withTags(\"CS2105\", \"exam\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task CS2105_TUTORIAL \u003d new TaskBuilder().withName(\"CS2105 Tutorial\")","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"Week 9 Tutorial\").withDeadline(\"2022-03-16\").withCompletionStatus(\"false\")","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"            .withTags(\"CS2105\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task CS2103T_PROJECT \u003d new TaskBuilder().withName(\"CS2103T Project\")","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"V1.2b completion\").withDeadline(\"2022-03-13\").withCompletionStatus(\"false\")","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"            .withTags(\"CS2103T\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task MEET_ALICE \u003d new TaskBuilder().withName(\"Meet Alice\")","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"Meeting Alice at NUS\").withDeadline(\"2022-04-01\").withCompletionStatus(\"false\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task BUY_ART_SUPPLIES \u003d new TaskBuilder().withName(\"Buy Art Supplies\")","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"Buy Art supplies for art project\").withDeadline(\"2022-03-21\")","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"            .withCompletionStatus(\"false\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task APPLY_INTERNSHIP \u003d new TaskBuilder().withName(\"Apply Internship\")","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"Apply for opening at Shopee\").withDeadline(\"2022-03-24\")","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"            .withCompletionStatus(\"false\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"    // Manually added","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task CALL_BOB \u003d new TaskBuilder().withName(\"Call Bob\")","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"Call Bob to discuss when to meet\").withDeadline(\"2022-03-05\")","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"            .withCompletionStatus(\"false\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task CS2107_ASSIGNMENT \u003d new TaskBuilder().withName(\"CS2107 Assignment\")","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(\"Assignment 2\").withDeadline(\"2022-03-20\").withCompletionStatus(\"false\").build();","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"sbhbenjamin"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task CS2103T_TUTORIAL \u003d new TaskBuilder().withName(VALID_NAME_TUTORIAL)","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(VALID_DESCRIPTION_TUTORIAL).withDeadline(VALID_DEADLINE_TUTORIAL)","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"sbhbenjamin"},"content":"            .withCompletionStatus(VALID_COMPLETION_STATUS_TRUE).withTags(VALID_TAG_CS2103T).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"sbhbenjamin"},"content":"    public static final Task CS2102_MIDTERM \u003d new TaskBuilder().withName(VALID_NAME_MIDTERM)","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"sbhbenjamin"},"content":"            .withDescription(VALID_DESCRIPTION_MIDTERM).withDeadline(VALID_DEADLINE_MIDTERM)","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"sbhbenjamin"},"content":"            .withCompletionStatus(VALID_COMPLETION_STATUS_FALSE).withTags(VALID_TAG_CS2102, VALID_TAG_TEST).build();","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"sbhbenjamin"},"content":"    public static final String KEYWORD_MATCHING_NUS \u003d \"NUS\"; // A keyword that matches NUS","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"sbhbenjamin"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"sbhbenjamin"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"sbhbenjamin"},"content":"     * Returns an {@code TaskList} with all the typical Tasks.","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"sbhbenjamin"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"sbhbenjamin"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"sbhbenjamin"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"thikhinab"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"            tl.addTask(task);","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"sbhbenjamin"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"sbhbenjamin"},"content":"        return tl;","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"sbhbenjamin"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"sbhbenjamin"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103T_PROJECT, CS2105_FINALS, CS2105_MIDTERM,","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"sbhbenjamin"},"content":"                CS2105_TUTORIAL, MEET_ALICE));","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"sbhbenjamin"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"sbhbenjamin"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"thikhinab":5,"sbhbenjamin":80}},{"path":"src/test/java/seedu/address/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import javafx.beans.DefaultProperty;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"///**","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"// * A test object which can be constructed via an FXML file.","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"// * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"// */","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//@DefaultProperty(\"text\")","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//public class TestFxmlObject {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//    private String text;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//    public TestFxmlObject() {}","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//    public TestFxmlObject(String text) {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//        setText(text);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//    public String getText() {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//        return text;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    public void setText(String text) {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//        this.text \u003d text;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":35}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"//package seedu.address.ui;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joeietao"},"content":"//import java.net.URL;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"//import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"//import seedu.address.MainApp;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"//public class UiPartTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"//    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"//    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"//    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"//    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joeietao"},"content":"//    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joeietao"},"content":"//    @TempDir","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"//    public Path testFolder;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"//    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joeietao"},"content":"//    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joeietao"},"content":"//        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joeietao"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"//    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joeietao"},"content":"//        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joeietao"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joeietao"},"content":"//    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joeietao"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"//    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"//        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"//        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joeietao"},"content":"//        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joeietao"},"content":"//    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joeietao"},"content":"//    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joeietao"},"content":"//    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joeietao"},"content":"//    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joeietao"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joeietao"},"content":"//        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joeietao"},"content":"//    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joeietao"},"content":"//        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joeietao"},"content":"//        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joeietao"},"content":"//        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joeietao"},"content":"//        return testFileUrl;","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joeietao"},"content":"//    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joeietao"},"content":"//     * UiPart used for testing.","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joeietao"},"content":"//     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joeietao"},"content":"//     */","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joeietao"},"content":"//    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joeietao"},"content":"//        @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joeietao"},"content":"//        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joeietao"},"content":"//        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joeietao"},"content":"//            super(fxmlFileUrl, root);","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joeietao"},"content":"//        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joeietao"},"content":"//            super(fxmlFileName, root);","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joeietao"},"content":"//        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joeietao"},"content":"//            super(fxmlFileUrl);","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joeietao"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joeietao"},"content":"//        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joeietao"},"content":"//            super(fxmlFileName);","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joeietao"},"content":"//            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joeietao"},"content":"//        }","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joeietao"},"content":"//    }","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joeietao"},"content":"//","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joeietao"},"content":"//}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":114}},{"path":"src/test/resources/view/UiPartTest/invalidFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"\u003c!--Not a valid FXML file--\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":1}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"\u003c!--\u0026lt;!\u0026ndash;\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\u0026ndash;\u0026gt;--\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"\u003c!--\u003c?import seedu.address.ui.TestFxmlObject?\u003e--\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"\u003c!--\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e--\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":3,"-":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joeietao"},"content":"\u003c!--\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e--\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"\u003c!--\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"--\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joeietao"},"content":"\u003c!--            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e--\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joeietao"},"content":"\u003c!--    \u003ctext\u003eHello World!\u003c/text\u003e--\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"\u003c!--\u003c/fx:root\u003e--\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joeietao":5,"-":1}}]
