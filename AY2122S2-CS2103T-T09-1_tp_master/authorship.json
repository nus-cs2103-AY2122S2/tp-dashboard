[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-1/tp/actions)","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp/branch/master/graph/badge.svg?token\u003dF2HBLHWFOZ)](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp)","lastModifiedDate":"2022-02-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"* This is Harmonia, a CLI-centric application for students to manage their academic and non-academic tasks and events.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"  * Add and delete tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"  * Mark tasks when they are completed.","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"nicollegann"},"content":"  * Add tags to categorise tasks.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"nicollegann"},"content":"  * Search for tasks by tags or keywords.","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"nicollegann"},"content":"* The application is named `Harmonia`(Harmony in Latin) as it aims to help students manage the complexity of daily tasks, thus creating harmony amongst their schedules.","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"* For the detailed documentation of this project, see the **[Harmonia Product Website](https://ay2122s2-cs2103t-t09-1.github.io/tp/)**.","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"nicollegann"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"nicollegann":8,"-":5,"sbhbenjamin":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"### Joeie Tao","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/joeietao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"[[github](https://github.com/joeietao)]","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/joeietao.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Documentation","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"### Benjamin Seah","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/sbhbenjamin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"[[homepage](https://www.sbhbenjamin.works/)]","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/sbhbenjamin)]","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/sbhbenjamin.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Integration","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"### Thikhina Bakmeedeniya","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/thikhinab.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/thikhinab)] ","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/thikhinab.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Testing","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"### Jiang Zhengtao","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/ainsleyj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/ainsleyj)]","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/ainsleyj.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Code Quality","lastModifiedDate":"2022-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"sbhbenjamin"},"content":"### Nicolle Gan","lastModifiedDate":"2022-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"sbhbenjamin"},"content":"\u003cimg src\u003d\"images/nicollegann.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"sbhbenjamin"},"content":"[[github](http://github.com/nicollegann)]","lastModifiedDate":"2022-02-22"},{"lineNumber":54,"author":{"gitId":"sbhbenjamin"},"content":"[[portfolio](team/nicollegann.md)]","lastModifiedDate":"2022-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"sbhbenjamin"},"content":"* Role: Deliverables and Deadlines","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"-":30,"sbhbenjamin":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"sbhbenjamin"},"content":"* students who have a need to manage a significant number of tasks of different types","lastModifiedDate":"2022-02-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"sbhbenjamin"},"content":"**Value proposition**:  ","lastModifiedDate":"2022-02-24"},{"lineNumber":266,"author":{"gitId":"sbhbenjamin"},"content":"Harmonia is the easiest way for students to manage the complexity associated with their schooling years – from the plethora of assignments, ad-hoc consultations and events, to deadlines. This app will only help to manage tasks, and does not act as a calendar notifying the user of any upcoming event/deadline.","lastModifiedDate":"2022-02-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"sbhbenjamin"},"content":"Priorities: High (must have) - `* * * *`, Medium (nice to have) - `* * *`, Medium-low (nice to have but difficult) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2022-02-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority  | As a …​        | I want to …​                                                | So that I can…​                                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"sbhbenjamin"},"content":"|-----------|----------------|-------------------------------------------------------------|--------------------------------------------------------------------------------|","lastModifiedDate":"2022-02-24"},{"lineNumber":275,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | add a new task                                              |                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":276,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | delete a task                                               | remove tasks that I no longer need                                             |","lastModifiedDate":"2022-02-24"},{"lineNumber":277,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | mark a task as complete                                     |                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":278,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | mark a task as incomplete                                   |                                                                                |","lastModifiedDate":"2022-02-24"},{"lineNumber":279,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | see all my tasks when I start up the application            | view my tasks more conveniently without having to perform any extra operations |","lastModifiedDate":"2022-02-24"},{"lineNumber":280,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | tag a task                                                  | categorise my tasks according to my preferred system                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":281,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | modify a task                                               | amend a mistake or update a task                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":282,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | search by tags                                              | find tasks related to a category                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":283,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | user           | search by keywords                                          | find a specific task more easily                                               |","lastModifiedDate":"2022-02-24"},{"lineNumber":284,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | new user       | have straightforward commands I can use                     | use the application more intuitively                                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":285,"author":{"gitId":"sbhbenjamin"},"content":"| `* * * *` | expert user    | modify the tasks in the data file directly                  | modify the tasks in a way that is not supported by the application             |","lastModifiedDate":"2022-02-24"},{"lineNumber":286,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | tag a task with multiple tags                               | categorise tasks under multiple categories at a time                           |","lastModifiedDate":"2022-02-24"},{"lineNumber":287,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | search for tasks that fall within a specific time range     | find the tasks that lie between a specific period                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":288,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | view upcoming deadlines                                     | prioritise what tasks I need to do first                                       |","lastModifiedDate":"2022-02-24"},{"lineNumber":289,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | view tags I have already added when creating a new task     | know how to tag new tasks and avoid creating similar tags                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":290,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | view all of my upcoming–deadlines and longer-term deadlines | have a more holistic view of all events in the short-term and long-term future |","lastModifiedDate":"2022-02-24"},{"lineNumber":291,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | access the user guide through the interface                 | access the documentation without having to search online for it                |","lastModifiedDate":"2022-02-24"},{"lineNumber":292,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | sort my tasks by certain filters                            | organise my view the way I prefer                                              |","lastModifiedDate":"2022-02-24"},{"lineNumber":293,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | user           | label my tasks with priorities                              | keep track of which tasks are more important                                   |","lastModifiedDate":"2022-02-24"},{"lineNumber":294,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | new user       | view suggestions if I type in the wrong command             | recover from mistakes and use the correct command more easily                  |","lastModifiedDate":"2022-02-24"},{"lineNumber":295,"author":{"gitId":"sbhbenjamin"},"content":"| `* * *`   | potential user | see the app populated with sample data                      | easily see how the application would look like when in use                     |","lastModifiedDate":"2022-02-24"},{"lineNumber":296,"author":{"gitId":"sbhbenjamin"},"content":"| `* *`     | user           | set repeated occurrence of a task                           | avoid having to add a task multiple times                                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":297,"author":{"gitId":"sbhbenjamin"},"content":"| `* *`     | new user       | revert changes made                                         | undo changes that were made by mistake                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":298,"author":{"gitId":"sbhbenjamin"},"content":"| `* *`     | expert user    | use shortcuts                                               | perform operations more efficiently                                            |","lastModifiedDate":"2022-02-24"},{"lineNumber":299,"author":{"gitId":"sbhbenjamin"},"content":"| `*`       | user           | bulk mark different tasks as complete                       | marking everything I finished a day with just one command                      |","lastModifiedDate":"2022-02-24"},{"lineNumber":300,"author":{"gitId":"sbhbenjamin"},"content":"| `*`       | expert user    | delete multiple tasks at once                               | do not have to delete tasks one by one                                         |","lastModifiedDate":"2022-02-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"nicollegann"},"content":"(For all use cases below, the **System** is `Harmonia` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-02-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"nicollegann"},"content":"**Use case: UC01 - Adding a task**","lastModifiedDate":"2022-02-25"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"nicollegann"},"content":"1.  User chooses to add a task.","lastModifiedDate":"2022-02-25"},{"lineNumber":311,"author":{"gitId":"nicollegann"},"content":"2.  User enters the task description.","lastModifiedDate":"2022-02-25"},{"lineNumber":312,"author":{"gitId":"nicollegann"},"content":"3.  Harmonia adds the task.","lastModifiedDate":"2022-02-25"},{"lineNumber":313,"author":{"gitId":"nicollegann"},"content":"4.  Harmonia informs the user that the task has been successfully added.","lastModifiedDate":"2022-02-25"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"nicollegann"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-25"},{"lineNumber":320,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":321,"author":{"gitId":"nicollegann"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2022-02-25"},{"lineNumber":322,"author":{"gitId":"nicollegann"},"content":"  ","lastModifiedDate":"2022-02-25"},{"lineNumber":323,"author":{"gitId":"nicollegann"},"content":"    Steps 2a1-2a2 are repeated until valid data is inputted.","lastModifiedDate":"2022-02-25"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":325,"author":{"gitId":"nicollegann"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":326,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":327,"author":{"gitId":"nicollegann"},"content":"**Use case: UC02 - Deleting a task**","lastModifiedDate":"2022-02-25"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":331,"author":{"gitId":"nicollegann"},"content":"1.  User chooses to remove a task from the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":332,"author":{"gitId":"nicollegann"},"content":"2.  User enters the request to remove the task.","lastModifiedDate":"2022-02-25"},{"lineNumber":333,"author":{"gitId":"nicollegann"},"content":"3.  Harmonia deletes the task.","lastModifiedDate":"2022-02-25"},{"lineNumber":334,"author":{"gitId":"nicollegann"},"content":"4.  Harmonia informs the user that the task has been successfully deleted.","lastModifiedDate":"2022-02-25"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"nicollegann"},"content":"* 2a. Harmonia detects an error in the entered index.","lastModifiedDate":"2022-02-25"},{"lineNumber":341,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":342,"author":{"gitId":"nicollegann"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2022-02-25"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"nicollegann"},"content":"    Steps 2a1-2a2 are repeated until a valid index is inputted.    ","lastModifiedDate":"2022-02-25"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"nicollegann"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":348,"author":{"gitId":"nicollegann"},"content":"**Use case: UC03 - Marking a task as complete**","lastModifiedDate":"2022-02-25"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":350,"author":{"gitId":"nicollegann"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":352,"author":{"gitId":"nicollegann"},"content":"1.  User chooses to mark a task as complete from the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":353,"author":{"gitId":"nicollegann"},"content":"2.  User enters the request to mark a task based on its index in the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":354,"author":{"gitId":"nicollegann"},"content":"3.  Harmonia marks the task as complete.","lastModifiedDate":"2022-02-25"},{"lineNumber":355,"author":{"gitId":"nicollegann"},"content":"4.  Harmonia informs the user that the task has been successfully marked.","lastModifiedDate":"2022-02-25"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":357,"author":{"gitId":"nicollegann"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":358,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":359,"author":{"gitId":"nicollegann"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":360,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":361,"author":{"gitId":"nicollegann"},"content":"* 2a. Harmonia detects an error in the entered index.","lastModifiedDate":"2022-02-25"},{"lineNumber":362,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":363,"author":{"gitId":"nicollegann"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2022-02-25"},{"lineNumber":364,"author":{"gitId":"nicollegann"},"content":"    ","lastModifiedDate":"2022-02-25"},{"lineNumber":365,"author":{"gitId":"nicollegann"},"content":"    Steps 2a1-2a2 are repeated until a valid index is inputted.","lastModifiedDate":"2022-02-25"},{"lineNumber":366,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":367,"author":{"gitId":"nicollegann"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":369,"author":{"gitId":"nicollegann"},"content":"**Use case: UC04 - Unmarking a task from completion**","lastModifiedDate":"2022-02-25"},{"lineNumber":370,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":371,"author":{"gitId":"nicollegann"},"content":"**MSS**","lastModifiedDate":"2022-02-25"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":373,"author":{"gitId":"nicollegann"},"content":"1.  User chooses to unmark a task from completion from the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":374,"author":{"gitId":"nicollegann"},"content":"2.  User enters the request to unmark a task based on its index in the task list.","lastModifiedDate":"2022-02-25"},{"lineNumber":375,"author":{"gitId":"nicollegann"},"content":"3.  Harmonia unmarks the task to become uncompleted.","lastModifiedDate":"2022-02-25"},{"lineNumber":376,"author":{"gitId":"nicollegann"},"content":"4.  Harmonia informs the user that the task has been successfully unmarked.","lastModifiedDate":"2022-02-25"},{"lineNumber":377,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":378,"author":{"gitId":"nicollegann"},"content":"    Use case ends.","lastModifiedDate":"2022-02-25"},{"lineNumber":379,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":380,"author":{"gitId":"nicollegann"},"content":"**Extensions**","lastModifiedDate":"2022-02-25"},{"lineNumber":381,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":382,"author":{"gitId":"nicollegann"},"content":"* 2a. Harmonia detects an error in the entered index.","lastModifiedDate":"2022-02-25"},{"lineNumber":383,"author":{"gitId":"nicollegann"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-25"},{"lineNumber":384,"author":{"gitId":"nicollegann"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2022-02-25"},{"lineNumber":385,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":386,"author":{"gitId":"nicollegann"},"content":"  Steps 2a1-2a2 are repeated until a valid index is inputted.","lastModifiedDate":"2022-02-25"},{"lineNumber":387,"author":{"gitId":"nicollegann"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":388,"author":{"gitId":"nicollegann"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-25"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"AinsleyJ"},"content":"**Use case: UC05 - Adding a tag to the task**","lastModifiedDate":"2022-02-27"},{"lineNumber":391,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":392,"author":{"gitId":"AinsleyJ"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":393,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":394,"author":{"gitId":"AinsleyJ"},"content":"1.  User chooses to add a tag to an existing task.","lastModifiedDate":"2022-02-27"},{"lineNumber":395,"author":{"gitId":"AinsleyJ"},"content":"2.  User enters the request to add the tag to the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":396,"author":{"gitId":"AinsleyJ"},"content":"3.  Harmonia adds the tag to the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":397,"author":{"gitId":"AinsleyJ"},"content":"4.  Harmonia informs the user that the tag has been successfully added to the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":398,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":399,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":400,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":401,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":402,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":403,"author":{"gitId":"AinsleyJ"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-27"},{"lineNumber":404,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":405,"author":{"gitId":"AinsleyJ"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2022-02-27"},{"lineNumber":406,"author":{"gitId":"AinsleyJ"},"content":"  ","lastModifiedDate":"2022-02-27"},{"lineNumber":407,"author":{"gitId":"AinsleyJ"},"content":"  Steps 2a1-2a2 are repeated until valid data is inputted. ","lastModifiedDate":"2022-02-27"},{"lineNumber":408,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":409,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":410,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":411,"author":{"gitId":"AinsleyJ"},"content":"**Use case: UC06 - Editing a task**","lastModifiedDate":"2022-02-27"},{"lineNumber":412,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":413,"author":{"gitId":"AinsleyJ"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":414,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":415,"author":{"gitId":"AinsleyJ"},"content":"1.  User chooses to edit a task from the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":416,"author":{"gitId":"AinsleyJ"},"content":"2.  User enters the request to edit the task with the updated details.","lastModifiedDate":"2022-02-27"},{"lineNumber":417,"author":{"gitId":"AinsleyJ"},"content":"3.  Harmonia updates the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":418,"author":{"gitId":"AinsleyJ"},"content":"4.  Harmonia informs the user that the task has been successfully updated.","lastModifiedDate":"2022-02-27"},{"lineNumber":419,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":420,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":421,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":422,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":423,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":424,"author":{"gitId":"AinsleyJ"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-27"},{"lineNumber":425,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":426,"author":{"gitId":"AinsleyJ"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2022-02-27"},{"lineNumber":427,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":428,"author":{"gitId":"AinsleyJ"},"content":"  Steps 2a1-2a2 are repeated until valid data is inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":429,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":430,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":431,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":432,"author":{"gitId":"AinsleyJ"},"content":"**Use case: UC07 - List out all the tasks**","lastModifiedDate":"2022-02-27"},{"lineNumber":433,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":434,"author":{"gitId":"AinsleyJ"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":435,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":436,"author":{"gitId":"AinsleyJ"},"content":"1.  User chooses lists out all the tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":437,"author":{"gitId":"AinsleyJ"},"content":"2.  User enters the request to list tasks.","lastModifiedDate":"2022-02-27"},{"lineNumber":438,"author":{"gitId":"AinsleyJ"},"content":"3.  Harmonia lists out the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":439,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":440,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":441,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":442,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":443,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":444,"author":{"gitId":"AinsleyJ"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-27"},{"lineNumber":445,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":446,"author":{"gitId":"AinsleyJ"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2022-02-27"},{"lineNumber":447,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":448,"author":{"gitId":"AinsleyJ"},"content":"  Steps 2a1-2a2 are repeated until valid data is inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":449,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":450,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":451,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":452,"author":{"gitId":"AinsleyJ"},"content":"**Use case: UC08 - Searching for a task by keyword/tag**","lastModifiedDate":"2022-02-27"},{"lineNumber":453,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":454,"author":{"gitId":"AinsleyJ"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":455,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":456,"author":{"gitId":"AinsleyJ"},"content":"1.  User enters the request to search for task(s) by keyword/tag.","lastModifiedDate":"2022-02-27"},{"lineNumber":457,"author":{"gitId":"AinsleyJ"},"content":"2.  Harmonia shows a list of tasks that match the specified keyword/tag.","lastModifiedDate":"2022-02-27"},{"lineNumber":458,"author":{"gitId":"AinsleyJ"},"content":"3.  Harmonia informs the user that the search result has been displayed successfully.","lastModifiedDate":"2022-02-27"},{"lineNumber":459,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":460,"author":{"gitId":"AinsleyJ"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":461,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":462,"author":{"gitId":"AinsleyJ"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":463,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":464,"author":{"gitId":"AinsleyJ"},"content":"* 2a. Harmonia detects an error in the entered request.","lastModifiedDate":"2022-02-27"},{"lineNumber":465,"author":{"gitId":"AinsleyJ"},"content":"    * 2a1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":466,"author":{"gitId":"AinsleyJ"},"content":"    * 2a2. User enters a new command.","lastModifiedDate":"2022-02-27"},{"lineNumber":467,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":468,"author":{"gitId":"AinsleyJ"},"content":"  Steps 2a1-2a2 are repeated until valid data is inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":469,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":470,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":471,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":472,"author":{"gitId":"AinsleyJ"},"content":"* 2b. Harmonia detects that the tag does not exist.","lastModifiedDate":"2022-02-27"},{"lineNumber":473,"author":{"gitId":"AinsleyJ"},"content":"    * 2b1. Harmonia outputs an error message.","lastModifiedDate":"2022-02-27"},{"lineNumber":474,"author":{"gitId":"AinsleyJ"},"content":"    * 2b2. User enters a new command.","lastModifiedDate":"2022-02-27"},{"lineNumber":475,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":476,"author":{"gitId":"AinsleyJ"},"content":"  Steps 2a1-2a2 are repeated until valid data is inputted.","lastModifiedDate":"2022-02-27"},{"lineNumber":477,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":478,"author":{"gitId":"AinsleyJ"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-02-27"},{"lineNumber":479,"author":{"gitId":"AinsleyJ"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"sbhbenjamin"},"content":"1. Should work on most *Mainstream* OS as long as it has Java `11` or above installed.","lastModifiedDate":"2022-02-24"},{"lineNumber":483,"author":{"gitId":"sbhbenjamin"},"content":"2. Should be able to accomplish most of the tasks faster using commands than using the mouse by users with above average typing speed for regular English text (i.e. not code, not system admin commands)","lastModifiedDate":"2022-02-24"},{"lineNumber":484,"author":{"gitId":"sbhbenjamin"},"content":"3. Should respond within two seconds.","lastModifiedDate":"2022-02-24"},{"lineNumber":485,"author":{"gitId":"sbhbenjamin"},"content":"4. Should be usable by a novice who has never used Harmonia before.","lastModifiedDate":"2022-02-24"},{"lineNumber":486,"author":{"gitId":"sbhbenjamin"},"content":"5. Is not required to remind users about upcoming deadlines or events.","lastModifiedDate":"2022-02-24"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"sbhbenjamin"},"content":"* **Task**: A piece of work that the user needs to complete","lastModifiedDate":"2022-02-24"},{"lineNumber":492,"author":{"gitId":"sbhbenjamin"},"content":"* **Tag**: A label or category attached to a task to give additional information to it","lastModifiedDate":"2022-02-24"},{"lineNumber":493,"author":{"gitId":"sbhbenjamin"},"content":"* **Keyword**: A word that the user queries to search for a task","lastModifiedDate":"2022-02-24"},{"lineNumber":494,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nicollegann":59,"AinsleyJ":90,"-":358,"sbhbenjamin":40}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"Harmonia is a **desktop app for managing tasks related to your academic life, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Harmonia can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------   ","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"## Table of Contents","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"joeietao"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"joeietao"},"content":"- [Features](#features)","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"joeietao"},"content":"  - [Adding a task: add](#adding-a-task-add) ","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"  - [Listing all tasks: list](#listing-all-tasks-list)","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"joeietao"},"content":"  - [Deleting a task: delete](#deleting-a-task-delete)","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"  - [Locating a task: find](#locating-a-task-find)","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"joeietao"},"content":"  - [Marking as complete: mark](#marking-as-complete--mark)","lastModifiedDate":"2022-02-28"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"  - [Marking as complete: unmark](#marking-as-incomplete--unmark)","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"joeietao"},"content":"  - [Editing a task: edit](#editing-a-task--edit)","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"  - [Exiting the program: exit](#exiting-the-program--exit)","lastModifiedDate":"2022-02-28"},{"lineNumber":20,"author":{"gitId":"joeietao"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"joeietao"},"content":"1. Ensure that you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"joeietao"},"content":"2. Download the latest `Harmonia.jar` from [here](https://github.com/AY2122S2-CS2103T-T09-1/tp.git)","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"joeietao"},"content":"3. Copy the file to the folder you want to use as the home folder for your Harmonia.","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"joeietao"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"joeietao"},"content":"5. Type the command in the command box and press Enter to execute it. (E.g type `list` to list down all the tasks)","lastModifiedDate":"2022-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"joeietao"},"content":"--------------------------------------------------------------------------------------------------------------------   ","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"joeietao"},"content":"### Adding a task: `add`","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":38,"author":{"gitId":"joeietao"},"content":"Adds a task into the Harmonia.","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"joeietao"},"content":"Format:  `add d/DESCRIPTION`  ","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"joeietao"},"content":"Example: `add d/CS2103T tp meeting`","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"joeietao"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":45,"author":{"gitId":"joeietao"},"content":"Shows a list of all the existing tasks in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"joeietao"},"content":"Format: `list`","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"joeietao"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":51,"author":{"gitId":"joeietao"},"content":"Deletes a specified task from Harmonia.","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"joeietao"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"joeietao"},"content":"- Deletes the task at the specified `INDEX` from the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"joeietao"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"joeietao"},"content":"- The index **must be a positive integer** 1, 2, 3","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"joeietao"},"content":"Example: `delete 3` deletes the 3rd task in the task list","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"joeietao"},"content":"### Locating a task: `find`","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":62,"author":{"gitId":"joeietao"},"content":"Finds a task which description or tag contains the given keywords.","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"joeietao"},"content":"Format:","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"joeietao"},"content":"- `find KEYWORD [MORE KEYWORDS]`","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"joeietao"},"content":"- `find t/TAG`","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"joeietao"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"joeietao"},"content":"- `find book`","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"joeietao"},"content":"- `find book read`","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"joeietao"},"content":"- `find t/CS2103T`","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"thikhinab"},"content":"### Marking as complete : `mark`","lastModifiedDate":"2022-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"thikhinab"},"content":"Marks specified task from the existing task list from as complete.","lastModifiedDate":"2022-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"thikhinab"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":79,"author":{"gitId":"thikhinab"},"content":"- Marks the task at the specified `INDEX` as complete.","lastModifiedDate":"2022-02-26"},{"lineNumber":80,"author":{"gitId":"thikhinab"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-26"},{"lineNumber":81,"author":{"gitId":"thikhinab"},"content":"- The index **must be a positive integer** 1, 2, 3,","lastModifiedDate":"2022-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"thikhinab"},"content":"Example: `list` followed by `mark 2` marks the 2nd task in the task list as complete.","lastModifiedDate":"2022-02-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"thikhinab"},"content":"### Marking as incomplete : `unmark`","lastModifiedDate":"2022-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"thikhinab"},"content":"Marks specified task from the existing task list from as incomplete.","lastModifiedDate":"2022-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"thikhinab"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-02-26"},{"lineNumber":91,"author":{"gitId":"thikhinab"},"content":"- Marks the task at the specified `INDEX` as incomplete.","lastModifiedDate":"2022-02-26"},{"lineNumber":92,"author":{"gitId":"thikhinab"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-02-26"},{"lineNumber":93,"author":{"gitId":"thikhinab"},"content":"- The index **must be a positive integer** 1, 2, 3,","lastModifiedDate":"2022-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"thikhinab"},"content":"Example: `list` followed by `unmark 3` marks the 3rd task in the task list as incomplete.","lastModifiedDate":"2022-02-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"thikhinab"},"content":"### Editing a task : `edit`","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"thikhinab"},"content":"Edits the specified task in the task list.","lastModifiedDate":"2022-02-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"thikhinab"},"content":"Format: `edit INDEX [d/DESCRIPTION] [t/TAG]`","lastModifiedDate":"2022-02-26"},{"lineNumber":103,"author":{"gitId":"thikhinab"},"content":"- Edits the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-02-26"},{"lineNumber":104,"author":{"gitId":"thikhinab"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2022-02-26"},{"lineNumber":105,"author":{"gitId":"thikhinab"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2022-02-26"},{"lineNumber":106,"author":{"gitId":"thikhinab"},"content":"- When editing tags, the existing tags of the task will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"thikhinab"},"content":"- You can remove all the task’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-02-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"thikhinab"},"content":"Example: `edit 2 d/Prepare for CS2103T Tutorial` Edits the description of the 2nd task to be `Prepare for CS2103T Tutorial`","lastModifiedDate":"2022-02-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"thikhinab"},"content":"Harmonia\u0027s data is saved in the hard disk automatically after any command changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------   ","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"--------|------------------ ","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"thikhinab"},"content":"**Add** | `add d/DESCRIPTION` \u003cbr\u003e e.g., `add d/read book`","lastModifiedDate":"2022-02-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"thikhinab"},"content":"**Edit** | `edit INDEX [d/DESCRIPTION] [t/TAG]`\u003cbr\u003e e.g.,`edit 2 n/CS2101 meeting t/CS2101`","lastModifiedDate":"2022-02-26"},{"lineNumber":129,"author":{"gitId":"thikhinab"},"content":"**Mark**| `mark INDEX` \u003cbr\u003e e.g., `mark 3`","lastModifiedDate":"2022-02-26"},{"lineNumber":130,"author":{"gitId":"thikhinab"},"content":"**Unmark**| `unmark INDEX` \u003cbr\u003e e.g., `unmark 3`","lastModifiedDate":"2022-02-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**List**| `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"thikhinab"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e `find t/[TAG]` \u003cbr\u003e e.g., `find book` \u003cbr\u003e e.g., `find book read` \u003cbr\u003e e.g., `find t/CS2103T`","lastModifiedDate":"2022-02-26"},{"lineNumber":133,"author":{"gitId":"thikhinab"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"thikhinab":30,"joeietao":43,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"title: Harmonia","lastModifiedDate":"2022-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T09-1/tp/actions)","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp/branch/master/graph/badge.svg?token\u003dF2HBLHWFOZ)](https://codecov.io/gh/AY2122S2-CS2103T-T09-1/tp)","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"Harmonia is a CLI-centric application for students to manage their academic and non-academic tasks and events.","lastModifiedDate":"2022-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"* If you are interested in using Harmonia, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"* If you are interested about developing Harmonia, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"sbhbenjamin":6}},{"path":"docs/team/ainsleyj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"    * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"sbhbenjamin":46}},{"path":"docs/team/joeietao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"joeietao"},"content":"title: Joeie\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"joeietao"},"content":"### Project: Harmonia","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"joeietao"},"content":"**Overview**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"joeietao"},"content":"Harmonia is a **desktop app for managing tasks related to your academic life, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Harmonia can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"joeietao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003djoeietao\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"joeietao"},"content":"* **Enhancements to implemented**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"joeietao"},"content":"* **Contributions to the UG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"joeietao"},"content":"* **Contributions to the DG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"joeietao"},"content":"* **Contributions to team-based tasks**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"joeietao"},"content":"* **Review contributions**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"joeietao"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"joeietao":11,"sbhbenjamin":16}},{"path":"docs/team/nicollegann.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"nicollegann"},"content":"title: Nicolle\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"nicollegann"},"content":"### Project: Harmonia","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"nicollegann"},"content":"**Overview**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"nicollegann"},"content":"Harmonia is a desktop app for students to manage their academic and non-academic tasks and events.","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"nicollegann"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dnicollegann\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"nicollegann"},"content":"* **Enhancements to implemented**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"nicollegann"},"content":"* **Contributions to the UG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"nicollegann"},"content":"* **Contributions to the DG**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"nicollegann"},"content":"* **Contributions to team-based tasks**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"nicollegann"},"content":"* **Review contributions**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"nicollegann"},"content":"* **Contributions beyond the project team**: To be added","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"nicollegann":11,"sbhbenjamin":16}},{"path":"docs/team/sbhbenjamin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"**Overview**","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"Harmonia is a command-line-based personal task manager, which helps university students to manage their academic tasks. It is written in Java and has a GUI implemented with JavaFX.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"* **Code Contributed**: [link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dainsleyj\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"* **Enhancements implemented**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions to the UG**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions to the DG**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions to team-based tasks**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"* **Review/mentoring contributions**: To be added.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"* **Contributions beyond the project team**: To be added.","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"sbhbenjamin":26}},{"path":"docs/team/thikhinab.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"sbhbenjamin"},"content":"layout: page","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"sbhbenjamin"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"sbhbenjamin"},"content":"---","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"sbhbenjamin"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":8,"author":{"gitId":"sbhbenjamin"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"sbhbenjamin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"sbhbenjamin"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"sbhbenjamin"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"sbhbenjamin"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"sbhbenjamin"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-22"},{"lineNumber":16,"author":{"gitId":"sbhbenjamin"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-22"},{"lineNumber":17,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":18,"author":{"gitId":"sbhbenjamin"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-22"},{"lineNumber":19,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":20,"author":{"gitId":"sbhbenjamin"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-22"},{"lineNumber":21,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":22,"author":{"gitId":"sbhbenjamin"},"content":"* **Project management**:","lastModifiedDate":"2022-02-22"},{"lineNumber":23,"author":{"gitId":"sbhbenjamin"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-22"},{"lineNumber":24,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":25,"author":{"gitId":"sbhbenjamin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-22"},{"lineNumber":26,"author":{"gitId":"sbhbenjamin"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-22"},{"lineNumber":27,"author":{"gitId":"sbhbenjamin"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-22"},{"lineNumber":28,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":29,"author":{"gitId":"sbhbenjamin"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-22"},{"lineNumber":30,"author":{"gitId":"sbhbenjamin"},"content":"  * User Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":31,"author":{"gitId":"sbhbenjamin"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-22"},{"lineNumber":32,"author":{"gitId":"sbhbenjamin"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-22"},{"lineNumber":33,"author":{"gitId":"sbhbenjamin"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-22"},{"lineNumber":34,"author":{"gitId":"sbhbenjamin"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-22"},{"lineNumber":35,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":36,"author":{"gitId":"sbhbenjamin"},"content":"* **Community**:","lastModifiedDate":"2022-02-22"},{"lineNumber":37,"author":{"gitId":"sbhbenjamin"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-22"},{"lineNumber":38,"author":{"gitId":"sbhbenjamin"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-22"},{"lineNumber":39,"author":{"gitId":"sbhbenjamin"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-22"},{"lineNumber":40,"author":{"gitId":"sbhbenjamin"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-22"},{"lineNumber":41,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":42,"author":{"gitId":"sbhbenjamin"},"content":"* **Tools**:","lastModifiedDate":"2022-02-22"},{"lineNumber":43,"author":{"gitId":"sbhbenjamin"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-22"},{"lineNumber":44,"author":{"gitId":"sbhbenjamin"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-22"},{"lineNumber":45,"author":{"gitId":"sbhbenjamin"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":46,"author":{"gitId":"sbhbenjamin"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"sbhbenjamin":46}}]
