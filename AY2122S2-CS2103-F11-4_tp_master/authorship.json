[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F11-4/tp/actions)","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-4/tp/branch/master/graph/badge.svg?token\u003dG5ITTT4UTJ)](https://codecov.io/gh/AY2122S2-CS2103-F11-4/tp)","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"# NUScheduler","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"***","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"## Uses:","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"  * keep track of all school contacts, modules and tasks","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"  * organise academic life in a neat manner","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"## Features:","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"  * Add a task/contact","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"  * Delete a task/contact","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"  * Update a task/contact","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"  * Add a label to task","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"  * View all tasks and their deadlines","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"  * View all contacts","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"  * Remind upcoming tasks","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"## Acknowledgements","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative.](https://se-education.org)","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"putaojuice":1,"yumengtan":27,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"run {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"putaojuice":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"You can reach us at the email `e0544443@u.nus.edu`","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"### Chen Yu An","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/putaojuice.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"[[github](https://github.com/putaojuice)]","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/putaojuice.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"### Low Weimin, Ian","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/castryl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"[[github](http://github.com/castryl]","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/castryl.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"* Role: Documentation","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"### Ivor Chua","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/ivorcmx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"[[github](http://github.com/ivorcmx)]","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/ivorcmx.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"* Role: Testing","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"### Tan Yu Meng","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/yumengtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"[[github](http://github.com/yumengtan)]","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/yumengtan.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"* Role: Code Quality","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"ivorcmx":20,"-":25}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"putaojuice"},"content":"### \\[Proposed\\] Add Task Feature (Yu An)","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"putaojuice"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"putaojuice"},"content":"The proposed add task feature is facilitated by `AddTaskCommand`. It extends `Command` and make use of a new model `TaskList` and `Task`.","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"putaojuice"},"content":"The `TaskList` model consists of an `ArrayList\u003cTask\u003e` to store the `Task`. The `AddTaskCommand` also has a `AddTaskCommandParser`","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"putaojuice"},"content":"to do the logical parsing of user\u0027s input. Additionally, this feature implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"putaojuice"},"content":"* `AddTaskCommand#execute()` — Executes the command.","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"putaojuice"},"content":"* `AddTaskCommandParser#parse()` — Make sense of the user\u0027s input and returns an `AddTaskCommand` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"putaojuice"},"content":"* `TaskList#addTask()` — Add a new task to the task list if user\u0027s input is valid.","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"putaojuice"},"content":"The `TaskList#addTask()` is exposed in the `Model` interface as `Model#addTask()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"putaojuice"},"content":"Given below is an example usage scenario and how the add task feature works.","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"putaojuice"},"content":"The following activity diagram shows the workflow of add task operation:","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"putaojuice"},"content":"The user will type in the command `addt d/DESCRIPTION [t/DEADLINE (dd/mm/yyyy)]` with the deadline being optional field.","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"putaojuice"},"content":"If a valid format is detected, the system will create a new task, add it to the task list and prompt the user that a","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"putaojuice"},"content":"task has been successfully added.","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"putaojuice"},"content":"![AddTaskCommandActivityDiagram](images/AddTaskCommandActivityDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"putaojuice"},"content":"The following sequence diagram shows how the add task operation work assuming no exception is thrown:","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"putaojuice"},"content":"![AddTaskCommandSequenceDiagram](images/AddTaskCommandSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"yumengtan"},"content":"### \\[Proposed\\] Find Task Feature (Yu Meng)","lastModifiedDate":"2022-03-24"},{"lineNumber":270,"author":{"gitId":"yumengtan"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":271,"author":{"gitId":"yumengtan"},"content":"The proposed find task feature is facilitated by `FindTaskCommand`. It extends `Command` and makes use of the `TaskList` model","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"yumengtan"},"content":"and `Task`. The `TaskList` Model is used to retrieve the `Tasks` that have been stored. The `FindTaskCommand` also has a","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"yumengtan"},"content":"`FindTaskCommandParser` to do the logical parsing of the user\u0027s input. It uses regex to ignore case sensitivity of user\u0027s input.","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"yumengtan"},"content":"These are the operations that the feature implements:","lastModifiedDate":"2022-03-24"},{"lineNumber":275,"author":{"gitId":"yumengtan"},"content":"* `FindTaskCommand#execute()` : Executes the command.","lastModifiedDate":"2022-03-24"},{"lineNumber":276,"author":{"gitId":"yumengtan"},"content":"* `FindTaskCommandParser#parse()` :  Parses the user input and returns a `FindTaskCommand` Object.","lastModifiedDate":"2022-03-24"},{"lineNumber":277,"author":{"gitId":"yumengtan"},"content":"* `TaskList#findTask()` : Finds and returns tasks matching keyword from user input (ignores case sensitivity)","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":279,"author":{"gitId":"yumengtan"},"content":"Given Below is an example usage scenario and how the find task feature works.","lastModifiedDate":"2022-03-24"},{"lineNumber":280,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"yumengtan"},"content":"The following activity diagram shows the workflow of add task operation:","lastModifiedDate":"2022-03-24"},{"lineNumber":282,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":283,"author":{"gitId":"yumengtan"},"content":"The user will type in the command `findt KEYWORD`. If the user inputs a valid format, the system will retrieve matching","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"yumengtan"},"content":"tasks from the TaskList. If there is one or more matching Tasks, the system will prompt the user with the matching Tasks.","lastModifiedDate":"2022-03-24"},{"lineNumber":285,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":286,"author":{"gitId":"yumengtan"},"content":"![FindTaskCommandActivityDiagram](images/FindTaskActivityDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"yumengtan"},"content":"The following sequence diagram shows how the add task operation work assuming no exception is thrown:","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"yumengtan"},"content":"![FindTaskCommandSequenceDiagram](images/FindTaskSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"ivorcmx"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"ivorcmx"},"content":"### \\[Proposed\\] Add Delete Task Feature (Ivor)","lastModifiedDate":"2022-03-24"},{"lineNumber":295,"author":{"gitId":"ivorcmx"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":296,"author":{"gitId":"ivorcmx"},"content":"The proposed delete task feature is facilitated by `DeleteTaskCommand`. It extends `Command` and make use of a new model `TaskList` and `Task`.","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"ivorcmx"},"content":"The `TaskList` model consists of an `ArrayList\u003cTask\u003e` to store the `Task`. The `DeketeTaskCommand` also has a `DeleteTaskCommandParser`","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"ivorcmx"},"content":"to do the logical parsing of user\u0027s input. Additionally, this feature implements the following operations:","lastModifiedDate":"2022-03-24"},{"lineNumber":299,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"ivorcmx"},"content":"* `DeleteTaskCommand#execute()` — Executes the command.","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"ivorcmx"},"content":"* `DeleteTaskCommandParser#parse()` — Make sense of the user\u0027s input and returns an `DeleteTaskCommand` object.","lastModifiedDate":"2022-03-24"},{"lineNumber":302,"author":{"gitId":"ivorcmx"},"content":"* `TaskList#DeleteTask()` — Delete an existing task in the task list if user\u0027s input is valid.","lastModifiedDate":"2022-03-24"},{"lineNumber":303,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"ivorcmx"},"content":"The `TaskList#deleteTask()` is exposed in the `Model` interface as `Model#deleteTask()`.","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":306,"author":{"gitId":"ivorcmx"},"content":"Given below is an example usage scenario and how the delete task feature works.","lastModifiedDate":"2022-03-24"},{"lineNumber":307,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"ivorcmx"},"content":"The following activity diagram shows the workflow of delete task operation:","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":310,"author":{"gitId":"ivorcmx"},"content":"The user will type in the command `delt \u003cinteger\u003e`.","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"ivorcmx"},"content":"If a valid format is detected, the system will remove the corresponding task with the integer ID,  and prompt the user that a","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"ivorcmx"},"content":"task has been successfully deleted.","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"ivorcmx"},"content":"![DeleteTaskCommandActivityDiagram](images/DeleteTaskActivityDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"ivorcmx"},"content":"The following sequence diagram shows how the delete task operation work assuming no exception is thrown:","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"ivorcmx"},"content":"![DeleteTaskCommandSequenceDiagram](images/DeleteTaskSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"putaojuice"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"castryl"},"content":"NUScheduler is for Year 1 NUS Computing students who prefer CLI over GUI and has a lot of academic tasks to keep track of.","lastModifiedDate":"2022-03-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"castryl"},"content":"**Value proposition**: This app has simple CLI and a sleek GUI that allows the user to manage the tasks easily and efficiently. It will be mainly used to keep track NUS assignments and projects across multiple modules.","lastModifiedDate":"2022-03-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"| Priority | As a …​                  | I want to …​                         | So that I can…​                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"yumengtan"},"content":"|----------|--------------------------|--------------------------------------|--------------------------------------|","lastModifiedDate":"2022-03-16"},{"lineNumber":350,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | add a task                           | keep track of the task               |","lastModifiedDate":"2022-03-08"},{"lineNumber":351,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | delete a task                        | remove a task I have completed       |","lastModifiedDate":"2022-03-08"},{"lineNumber":352,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | edit a task                          | change details of a task             |","lastModifiedDate":"2022-03-08"},{"lineNumber":353,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | view all tasks                       | keep track of all my current tasks   |","lastModifiedDate":"2022-03-08"},{"lineNumber":354,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | add a contact                        | keep track of all my contacts        |","lastModifiedDate":"2022-03-08"},{"lineNumber":355,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | delete a contact                     | delete an incorrect/unneeded contact |","lastModifiedDate":"2022-03-08"},{"lineNumber":356,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | edit a contact                       | correct/update a a contact           |","lastModifiedDate":"2022-03-08"},{"lineNumber":357,"author":{"gitId":"yumengtan"},"content":"| `* * *`  | beginner user            | find tasks based on keyword          | search for relevant tasks quickly    |","lastModifiedDate":"2022-03-16"},{"lineNumber":358,"author":{"gitId":"yumengtan"},"content":"| `* * *`  | beginner user            | find contacts based on keyword       | search for relevant contacts quickly |","lastModifiedDate":"2022-03-16"},{"lineNumber":359,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | view all contacts                    | view all my current contacts         |","lastModifiedDate":"2022-03-08"},{"lineNumber":360,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user            | add a label                          | know which task is for which module  |","lastModifiedDate":"2022-03-08"},{"lineNumber":361,"author":{"gitId":"castryl"},"content":"| `* * *`  | potential user           | use simple commands                  | learn the commands easily            |","lastModifiedDate":"2022-03-08"},{"lineNumber":362,"author":{"gitId":"castryl"},"content":"| `* * *`  | year 1 computing student | keep track of assignment deadlines   | complete the tasks on time           |","lastModifiedDate":"2022-03-08"},{"lineNumber":363,"author":{"gitId":"castryl"},"content":"| `*`      | beginner user            | see a reminder of tasks from the app | know what are my upcoming deadlines  |","lastModifiedDate":"2022-03-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"castryl"},"content":"(For all use cases below, the **System** is the `NUScheduler` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"castryl"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2022-03-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"castryl"},"content":"1.  User requests to list contacts","lastModifiedDate":"2022-03-08"},{"lineNumber":376,"author":{"gitId":"castryl"},"content":"2.  NUScheduler shows a list of contacts","lastModifiedDate":"2022-03-08"},{"lineNumber":377,"author":{"gitId":"castryl"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2022-03-08"},{"lineNumber":378,"author":{"gitId":"castryl"},"content":"4.  NUScheduler deletes the contact","lastModifiedDate":"2022-03-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"castryl"},"content":"    * 3a1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"castryl"},"content":"**Use case: Add a task**","lastModifiedDate":"2022-03-08"},{"lineNumber":395,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":396,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":397,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":398,"author":{"gitId":"putaojuice"},"content":"1. User add a task with add task command","lastModifiedDate":"2022-03-15"},{"lineNumber":399,"author":{"gitId":"putaojuice"},"content":"2. NUScheduler provide feedback based on the user input.","lastModifiedDate":"2022-03-15"},{"lineNumber":400,"author":{"gitId":"putaojuice"},"content":"3. NUScheduler adds the user\u0027s defined task to the task list","lastModifiedDate":"2022-03-15"},{"lineNumber":401,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":402,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":403,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":404,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":405,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":406,"author":{"gitId":"castryl"},"content":"* 2a. The task description is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":407,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler prompts the user to fill up the description.","lastModifiedDate":"2022-03-08"},{"lineNumber":408,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":409,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":410,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":411,"author":{"gitId":"castryl"},"content":"* 2b. The task deadline has a wrong time format.","lastModifiedDate":"2022-03-08"},{"lineNumber":412,"author":{"gitId":"castryl"},"content":"    * 2b1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":413,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":414,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":415,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":416,"author":{"gitId":"putaojuice"},"content":"* 2c. The task has multiple description prefix (`d/`) or deadline prefix (`t/`).","lastModifiedDate":"2022-03-15"},{"lineNumber":417,"author":{"gitId":"putaojuice"},"content":"    * 2c1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-15"},{"lineNumber":418,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":419,"author":{"gitId":"putaojuice"},"content":"      Use case ends.","lastModifiedDate":"2022-03-15"},{"lineNumber":420,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":421,"author":{"gitId":"castryl"},"content":"**Use case: Delete a task**","lastModifiedDate":"2022-03-08"},{"lineNumber":422,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":423,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":424,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":425,"author":{"gitId":"castryl"},"content":"1. User requests to delete a task with delete task command","lastModifiedDate":"2022-03-08"},{"lineNumber":426,"author":{"gitId":"castryl"},"content":"2. NUScheduler deletes task specified from task list","lastModifiedDate":"2022-03-08"},{"lineNumber":427,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":428,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":429,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":430,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":431,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":432,"author":{"gitId":"castryl"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":433,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":434,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":435,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":436,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":437,"author":{"gitId":"castryl"},"content":"* 2b. The task number to delete is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":438,"author":{"gitId":"castryl"},"content":"    * 2b1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":439,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":440,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":441,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":442,"author":{"gitId":"castryl"},"content":"**Use case: View all tasks**","lastModifiedDate":"2022-03-08"},{"lineNumber":443,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":444,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":445,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":446,"author":{"gitId":"castryl"},"content":"1. User requests to view all the tasks with view command","lastModifiedDate":"2022-03-08"},{"lineNumber":447,"author":{"gitId":"castryl"},"content":"2. NUScheduler shows all the tasks from task list","lastModifiedDate":"2022-03-08"},{"lineNumber":448,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":449,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":450,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":451,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":452,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":453,"author":{"gitId":"castryl"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":454,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler shows a message that the task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":455,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":456,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":457,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":458,"author":{"gitId":"yumengtan"},"content":"**Use case: Find tasks**","lastModifiedDate":"2022-03-16"},{"lineNumber":459,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":460,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":461,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":462,"author":{"gitId":"castryl"},"content":"1. User requests to find tasks with find command","lastModifiedDate":"2022-03-08"},{"lineNumber":463,"author":{"gitId":"yumengtan"},"content":"2. NUScheduler provides a list of matching tasks from the task list.","lastModifiedDate":"2022-03-16"},{"lineNumber":464,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":465,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":466,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":467,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":468,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":469,"author":{"gitId":"castryl"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":470,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler shows a message that the task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":471,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":472,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":473,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":474,"author":{"gitId":"castryl"},"content":"* 2b. No task matches.","lastModifiedDate":"2022-03-08"},{"lineNumber":475,"author":{"gitId":"castryl"},"content":"    * 2b1. NUScheduler shows a message that there are no tasks that matches the description.","lastModifiedDate":"2022-03-08"},{"lineNumber":476,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":477,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":478,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":479,"author":{"gitId":"castryl"},"content":"* 2c. Tasks found.","lastModifiedDate":"2022-03-08"},{"lineNumber":480,"author":{"gitId":"castryl"},"content":"    * 2c1. NUScheduler shows all the tasks that matches with the keyword.","lastModifiedDate":"2022-03-08"},{"lineNumber":481,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":482,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"castryl"},"content":"4. The command used should be simple to learn.","lastModifiedDate":"2022-03-08"},{"lineNumber":490,"author":{"gitId":"castryl"},"content":"5. The system should be usable by a novice who has never used the system before.","lastModifiedDate":"2022-03-08"},{"lineNumber":491,"author":{"gitId":"castryl"},"content":"6. The system should be backward compatible with data produced by earlier versions of the system.","lastModifiedDate":"2022-03-08"},{"lineNumber":492,"author":{"gitId":"castryl"},"content":"7. Each command should not take more than 2 second to complete and display the result.","lastModifiedDate":"2022-03-08"},{"lineNumber":493,"author":{"gitId":"castryl"},"content":"8. Texts in the UI should wrap around.","lastModifiedDate":"2022-03-08"},{"lineNumber":494,"author":{"gitId":"castryl"},"content":"9. The project is expected to adhere to a schedule that delivers a feature set every milestone.","lastModifiedDate":"2022-03-08"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"castryl"},"content":"* **Task**: A task with descriptions and/or deadline","lastModifiedDate":"2022-03-08"},{"lineNumber":503,"author":{"gitId":"castryl"},"content":"* **Task list**: A task list of all the tasks","lastModifiedDate":"2022-03-08"},{"lineNumber":504,"author":{"gitId":"ivorcmx"},"content":"* **Task list ID**: ID assigned to corresponding task in the list","lastModifiedDate":"2022-03-21"},{"lineNumber":505,"author":{"gitId":"putaojuice"},"content":"* **Prefix**: A header (eg `d/`, `t/`) that is used to identify different clauses in user inputs.","lastModifiedDate":"2022-03-15"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"putaojuice":36,"yumengtan":29,"ivorcmx":29,"castryl":108,"-":356}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"#User Guide - NUScheduler","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"- Quick Start","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"- Features","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"    - Task Management","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"        - Add task","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"        - Delete task","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"        - Update task","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"        - Find task","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"        - View all tasks and their deadlines","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    - Contact Management","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"        - Add contact","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"        - Delete contact","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"        - Edit contact","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"        - List all contacts","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"        - Clear all contacts","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    - Exit the app","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"- FAQ","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"- CLI Summary","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"2. Download the latest `NUScheduler.jar` from [here](https://github.com/AY2122S2-CS2103-F11-4/tp/releases/tag/v1.3).","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"   1. `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named John Doe to the Address Book.","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"   2. `addt d/Buy groceries t/01/01/2022` : Adds an `assignment/task` to NUScheduler.","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"   3. `delele 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"   4. `delt 3` : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"   5. `findt assignment 1` : Finds any tasks in the current task list that contains the keyword(s).","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"   6. `updt 3 d/Buy groceries` : Updates the specified task in the current list.","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"   7. `viewt` : Lists all tasks.","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"   8. `list` : Lists all contacts.","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"   9. `clear` : Deletes all contacts.","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"   10. `exit` : Exits the app.","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"## Features","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"**Notes about the command format:**","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"- Words in **UPPER_CASE** are the parameters to be supplied by the user.e.g. in `add n/NAME`, **NAME** is a parameter.","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"- which can be used as `add n/John Doe`.","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"- Items in **square brackets** are optional.e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"- Parameters cannot be in any order and must follow the order given in the command format.e.g. if the command format.","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"- specifies `addt d/DESCRIPTION [t/DEADLINE]`, the details must be entered as `d/DESCRIPTION [t/DEADLINE]`.","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"- All `\u003cinteger\u003e` fields must be \u003e 0.","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"### Feature - Add a task: `addt`","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"Adds a task to the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"yumengtan"},"content":"Format: `addt d/DESCRIPTION t/DEADLINE (dd/mm/yyyy)`","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"yumengtan"},"content":"Example: `addt d/Buy groceries t/01/01/2022`","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"### Feature - Delete a task: `delt \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"Deletes a task from the task list, where `\u003cinteger\u003e` is the ID of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"Format: `delt \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"Example: `delt 3`","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"### Feature - Update a task description and/or deadline: `updt`","lastModifiedDate":"2022-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"Updates a task in the task list, where `\u003cinteger\u003e` is the ID of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"putaojuice"},"content":"Format: `updt \u003cinteger\u003e [d/DESCRIPTION] [t/DEADLINE]`","lastModifiedDate":"2022-04-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"Example: `updt 3 d/Buy groceries t/01/02/2022`","lastModifiedDate":"2022-04-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"Example: `updt 3 d/Buy groceries`","lastModifiedDate":"2022-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"Example: `updt 3 t/01/02/2022`","lastModifiedDate":"2022-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"### Feature - Find tasks: `findt`","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"yumengtan"},"content":"Locating tasks which match any of given keywords.","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"putaojuice"},"content":"Format: `findt KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"yumengtan"},"content":"- The search is case-insensitive. e.g. `lessons` will match `Lessons`.","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"yumengtan"},"content":"- The order of the keywords matters. e.g. `drink water` will not match `water drink`","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"yumengtan"},"content":"- Only full keyword(s) will be accepted. e.g. `drink` will match `drink`; `ink` will not match `drink`","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"yumengtan"},"content":"- All keyword(s) have to be matched for task to be returned.","lastModifiedDate":"2022-04-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"yumengtan"},"content":"Example: `findt lessons` returns `Swimming lessons 03/05/2022`.","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"castryl"},"content":"### Feature - List all tasks: `viewt`","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"putaojuice"},"content":"View all the tasks currently in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"putaojuice"},"content":"Format: `viewt`","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"yumengtan"},"content":"### Feature - Adding a contact: `add`","lastModifiedDate":"2022-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2022-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-04-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2022-04-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2022-04-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2022-04-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"yumengtan"},"content":"### Feature - Deleting a contact : `delete`","lastModifiedDate":"2022-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"yumengtan"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2022-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"putaojuice"},"content":"Format: `delete \u003cInteger\u003e`","lastModifiedDate":"2022-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"putaojuice"},"content":"* Deletes the person at the specified `\u003cInteger\u003e`.","lastModifiedDate":"2022-04-01"},{"lineNumber":143,"author":{"gitId":"yumengtan"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2022-04-01"},{"lineNumber":144,"author":{"gitId":"yumengtan"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"yumengtan"},"content":"Examples:","lastModifiedDate":"2022-04-01"},{"lineNumber":147,"author":{"gitId":"yumengtan"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the address book.","lastModifiedDate":"2022-04-01"},{"lineNumber":148,"author":{"gitId":"yumengtan"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2022-04-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"yumengtan"},"content":"### Feature: Editing a contact : `edit`","lastModifiedDate":"2022-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"yumengtan"},"content":"Edits an existing contact in the address book.","lastModifiedDate":"2022-04-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2022-04-01"},{"lineNumber":161,"author":{"gitId":"yumengtan"},"content":"  specifying any tags after it.","lastModifiedDate":"2022-04-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-27"},{"lineNumber":164,"author":{"gitId":"yumengtan"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-04-01"},{"lineNumber":165,"author":{"gitId":"yumengtan"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-04-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"yumengtan"},"content":"### Listing all contacts : `list`","lastModifiedDate":"2022-04-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"yumengtan"},"content":"Shows a list of all contacts in the address book.","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":171,"author":{"gitId":"yumengtan"},"content":"Format: `list`","lastModifiedDate":"2022-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"yumengtan"},"content":"### Clearing all contact entries : `clear`","lastModifiedDate":"2022-04-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2022-04-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-04-01"},{"lineNumber":178,"author":{"gitId":"putaojuice"},"content":"### Feature - Exit the app: `exit`","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":180,"author":{"gitId":"putaojuice"},"content":"Exits the app.","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"putaojuice"},"content":"Format: exit","lastModifiedDate":"2022-02-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":184,"author":{"gitId":"putaojuice"},"content":"### Feature - Saving the data","lastModifiedDate":"2022-02-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":186,"author":{"gitId":"yumengtan"},"content":"NUScheduler data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-04-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":188,"author":{"gitId":"yumengtan"},"content":"### Feature - Editing the data file","lastModifiedDate":"2022-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":190,"author":{"gitId":"yumengtan"},"content":"NUScheduler data are saved as a JSON file `[JAR file location]/data/addressbook.json` for address book and `[JAR file location]/data/tasklist.json`. ","lastModifiedDate":"2022-04-01"},{"lineNumber":191,"author":{"gitId":"yumengtan"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-04-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-04-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"putaojuice"},"content":"**Q**: How do I transfer my data to another Computer?","lastModifiedDate":"2022-02-27"},{"lineNumber":202,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":203,"author":{"gitId":"putaojuice"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the","lastModifiedDate":"2022-02-27"},{"lineNumber":204,"author":{"gitId":"putaojuice"},"content":"data of your previous NUScheduler home folder.","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"yumengtan"},"content":"| Action                   | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"yumengtan"},"content":"|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-01"},{"lineNumber":212,"author":{"gitId":"yumengtan"},"content":"| **addt**                 | `addt d/DESCRIPTION [t/DEADLINE]` \u003cbr\u003e e.g., `addt d/Buy groceries [t/2022 02 22 5pm]`                                                                                |","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"yumengtan"},"content":"| **delt \u003cinteger\u003e**       | `delt \u003cinteger\u003e` \u003cbr\u003e e.g., `del t 3`                                                                                                                                 |","lastModifiedDate":"2022-03-16"},{"lineNumber":214,"author":{"gitId":"putaojuice"},"content":"| **updt \u003cinteger\u003e [d/DESCRIPTION] [t/DEADLINE]**     | `updt \u003cinteger\u003e [d/DESCRIPTION] [t/DEADLINE]`\u003cbr\u003e e.g., `updt 3 d/Buy groceries t/01/01/2022`                                              |","lastModifiedDate":"2022-04-01"},{"lineNumber":215,"author":{"gitId":"yumengtan"},"content":"| **findt \u003cKEYWORD(s)\u003e**   | `findt \u003cKEYWORD\u003e` \u003cbr\u003e e.g., `findt lessons`, `findt swimming lessons`                                                                                                |","lastModifiedDate":"2022-04-01"},{"lineNumber":216,"author":{"gitId":"yumengtan"},"content":"| **viewt**                | `viewt`                                                                                                                                                               |","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"yumengtan"},"content":"| **add**                  | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2022-04-01"},{"lineNumber":218,"author":{"gitId":"putaojuice"},"content":"| **del \u003cinteger\u003e**        | `del \u003cinteger\u003e` \u003cbr\u003e e.g., `del 3`                                                                                                                                    |","lastModifiedDate":"2022-04-01"},{"lineNumber":219,"author":{"gitId":"putaojuice"},"content":"| **edit \u003cinteger\u003e**       | `edit \u003cinteger\u003e [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e  e.g., `edit 1 p/91234567 e/johndoe@example.com`                                    |","lastModifiedDate":"2022-04-01"},{"lineNumber":220,"author":{"gitId":"yumengtan"},"content":"| **exit**                 | `exit`                                                                                                                                                                |","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"putaojuice":69,"yumengtan":48,"castryl":1,"-":102}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"yumengtan"},"content":"    content: \"NUScheduler\";","lastModifiedDate":"2022-03-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"yumengtan":1,"-":294}},{"path":"docs/diagrams/DeleteTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":":User types in the","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"delete task command;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"if () then ([Valid format and/or input])","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"    :Corresponding task is","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"    removed from Tasklist;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"    :Prompt user that the task","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"    has been successfully deleted;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"else ([Invalid Format Used])","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"    -Prompt user with the command\u0027s format","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ivorcmx":18}},{"path":"docs/diagrams/DeleteTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"participant \":DeleteTaskCommandParser\" as DeleteTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"participant \"d:DeleteTaskCommand\" as DeleteTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"box Tasklist MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"participant \"taskList:Tasklist\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"[-\u003e LogicManager : execute(\"delt 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delt 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"create DeleteTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"AddressBookParser -\u003e DeleteTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"create DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"DeleteTaskCommandParser -\u003e DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"DeleteTaskCommand --\u003e DeleteTaskCommandParser : d","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"DeleteTaskCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"DeleteTaskCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"destroy DeleteTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"LogicManager -\u003e DeleteTaskCommand : execute(model)","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"DeleteTaskCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"Model --\u003e DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"DeleteTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"CommandResult --\u003e DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"DeleteTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"ivorcmx":63}},{"path":"docs/diagrams/FindTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"skinparam backgroundColor #F6E3D4","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"skinparam classFontSize 12","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"skinparam maxMessageSize 20","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"skinparam wrapWidth 160","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"skinparam activity {","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"    StartColor Chocolate","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"    BackGroundColor OldLace","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"    BorderColor Black","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"    ArrowColor Sienna","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"    EndColor Chocolate","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"    start","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    :User type in the find task command;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"    \u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"    \u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"    if () then ([Valid format and/or input])","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"        -Retrieve matching tasks from TaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"        if () then ([Contain one or more matching tasks])","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"            -Prompt user with matching tasks in Tasklist","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"        else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"            -Prompt user no matching tasks found","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"        endif","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"        -\"Prompt user with the command\u0027s format\"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"    endif","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"    stop","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"yumengtan":33}},{"path":"docs/diagrams/FindTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"participant \":FindTaskCommandParser\" as FindTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"participant \"f:FindTaskCommand\" as FindTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"box TaskList MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"participant \"taskList:TaskList\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"[-\u003e LogicManager : execute(\"findt demo\")","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findt demo\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"create FindTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"AddressBookParser -\u003e FindTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"activate FindTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"create FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"FindTaskCommandParser -\u003e FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"FindTaskCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"deactivate FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"FindTaskCommand --\u003e FindTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"FindTaskCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"destroy FindTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"LogicManager -\u003e FindTaskCommand: execute(model)","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"FindTaskCommand -\u003e Model : findTask(demo)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"Model --\u003e FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"FindTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"CommandResult --\u003e FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"FindTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"deactivate FindTaskCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"yumengtan":63}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"title: NUScheduler","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103-F11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F11-4/tp/actions)","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-4/tp/branch/master/graph/badge.svg?token\u003dG5ITTT4UTJ)](https://codecov.io/gh/AY2122S2-CS2103-F11-4/tp)","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"**NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts**,","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"* If you are interested in using NUScheduler, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"* If you are interested about developing NUScheduler, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"putaojuice":1,"yumengtan":8,"-":13}},{"path":"docs/team/castryl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"castryl"},"content":"---","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"castryl"},"content":"layout: page","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"castryl"},"content":"title: Ian\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"castryl"},"content":"---","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"castryl"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"castryl"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"castryl"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"castryl"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"castryl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"castryl"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"castryl"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"castryl"},"content":"* **Code contributed**: [RepoSense link (to be added soon)]()","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"castryl"},"content":"* **Project management**:","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"castryl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"castryl"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"castryl"},"content":"    * User Guide:","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"castryl"},"content":"        * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"castryl"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"castryl"},"content":"        * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"castryl"},"content":"* **Community**:","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"castryl"},"content":"* **Tools**:","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"castryl":38}},{"path":"docs/team/ivorcmx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"layout: page","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"title: Ivor\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"* **New Feature**: Implemented `DeleteTask` command.","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"    * What it does: Allow the user to delete a particular task based on its ID in the Tasklist","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"    * Justification: Our target audience is year 1 computing students. It helps them to remove tasks that are not relevant anymore.","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"    * **Classes created**:","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"    * `DeleteTaskCommand`","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"    * `DeleteTaskCommandParser`","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"    * **Tests Written**:","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"        * `DeleteTaskCommandTest`","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"    * **Additional info**:","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"        * Updated ParserUtil method of parseNumber to work with DeleteTaskCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"        * Added relevant activity and sequence diagrams into Developer Guide","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    * to be added soon","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"* **Code contributed**: [RepoSense link (to be added soon)]()","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"* **Project management**:","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"    * Managed release `v1.1`, `v1.2`.","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"    * Participated in weekly project meetings and set up weekly milestones with the team.","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"    * Reviewed pull requests.","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"    * to be added soon","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"    * User Guide:","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"        * Added documentation for the feature `DeleteTask`.","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"        * Contribute to glossary in the developer guide.","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"        * Added user story for Delete task feature.","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"        * Added MSS for `DeleteTask`.","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"        * Add sequence diagram for delete task","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"        * Add activity diagram for delete task","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"* **Community**:","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"    * to be added soon","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"* **Tools**:","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"    * to be added soon","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"ivorcmx":51}},{"path":"docs/team/putaojuice.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"title: Chen Yu An\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"* **New Feature**: Implemented `AddTask` command ([#26](https://github.com/AY2122S2-CS2103-F11-4/tp/pull/26)).","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"    * What it does: Allow the user to add a task to the application with description and deadline (optional)","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    * Justification: Our target audience is year 1 computing students. It helps them to keep track of their assignments","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"and any other daily tasks.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"    * **Classes created**:","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"      * `AddTaskCommand`","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"      * `AddTaskCommandParser`","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"      * `TaskList`","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"      * `Task`","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    * **Tests written**:","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"      * `AddTaskCommandTest`","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    * **Additional info**:","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"      * `Task` and `TaskList` classes are created to capture the information of tasks and store them as an `ArrayList` in","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"      `ModelManager`.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"* **New Feature**: Implemented `TaskListStorage` ([#74](https://github.com/AY2122S2-CS2103-F11-4/tp/pull/74)).","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    * What it does: The system will write the task list to user\u0027s local folder in Json format whenever there is a change ","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"in the task list. The system will read from the saved task list from user\u0027s local folder in Json format when starting up","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"to load the stored task list from the last access.","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    * Justification: This feature allows the user to save their task list and continue where it was left from.","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    * **Classes created**:","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"        * `ReadOnlyTaskList`","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"        * `JsonAdaptedTask`","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"        * `JsonSerializableTaskList`","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"        * `JsonTaskListStorage`","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"        * `TaskListStorage`","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    * **Tests written**:","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"        * `JsonAdaptedTaskTest`","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"        * `JsonSerializableTaskListTest`","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"        * `JsonTaskListStorageTest`","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"        * `TypicalTask`","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"    * **Additional info**:","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        * This feature requires a good understand of how the application is designed and involves modification to ","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"`Logic`, `Model` and `Storage`","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dputaojuice\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dputaojuice\u0026tabRepo\u003dAY2122S2-CS2103-F11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"    * Managed release `v1.1`, `v1.2`, `v1.3`.","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"    * Organised weekly project meeting and set up weekly milestone.","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"    * Reviewed pull requests.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"    * Wrap up every milestone.","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"    * Released `Trial v1.3` ([#61](https://github.com/AY2122S2-CS2103-F11-4/tp/pull/61)).","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"    * Complete any administrative matters for the team.","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"    * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"    * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"        * Added documentation for the feature `AddTask`.","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"        * Added various non-functional requirement in the developer guide.","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        * Contribute to glossary in the developer guide.","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"        * Added MSS for `AddTask`.","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"        * Added information about the implementation of the `AddTask` command ([#60](https://github.com/AY2122S2-CS2103-F11-4/tp/pull/60))","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"          * Added 2 UML diagrams to aid the explanations","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"    * Participate in forum ([#240](https://github.com/nus-cs2103-AY2122S2/forum/issues/240))","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"    * Set up the team\u0027s Github group and repo.","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"    * Added CodeCov integration to the repo.","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"    * Enabled assertions for the project ([#61](https://github.com/AY2122S2-CS2103-F11-4/tp/pull/61)).","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"putaojuice":76}},{"path":"docs/team/yumengtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"title: Tan Yu Meng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"* **New Feature**: Implemented `FindTask` command.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"    * What it does: Allow the user to find matching tasks in task list based on keyword/","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"    * Justification: Our target audience is year 1 computing students. It helps them find any tasks easily based on keyword.","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"    * **Classes created**:","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    * `FindTaskCommand`","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"    * `FindTaskCommandParser`","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"    * **Tests Written**:","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"      * `FindTaskCommandTest`","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"    * **Additional info**:","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"      * Used regex to ignore case sensitivity from user input.","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"* **Code contributed**: [RepoSense link (to be added soon)]()","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    * Managed release `v1.1`, `v1.2`, `v1.3`.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"    * Participated in weekly project meetings and set up weekly milestones with the team.","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"    * Reviewed pull requests.","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"    * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"        * Added documentation for the feature `FindTask`.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"        * Contribute to glossary in the developer guide.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"        * Added user story for find task feature.","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        * Added MSS for `FindTask`.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"    * Diagrams","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"      * Added Sequence Diagram for `FindTask`","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"      * Added Activity Diagram for `FindTask`","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"yumengtan":53}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"import seedu.address.storage.TaskListStorage;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing NUScheduler ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"putaojuice"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"        ReadOnlyTaskList initialDataTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"putaojuice"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"putaojuice"},"content":"            if (!taskListOptional.isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"                logger.info(\"Data file not found. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"putaojuice"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"putaojuice"},"content":"            initialDataTaskList \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"putaojuice"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"putaojuice"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"putaojuice"},"content":"            initialDataTaskList \u003d new TaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"putaojuice"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"putaojuice"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskList\");","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"putaojuice"},"content":"            initialDataTaskList \u003d new TaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"putaojuice"},"content":"        return new ModelManager(initialData, userPrefs, initialDataTaskList);","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"yumengtan"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty NUScheduler\");","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"yumengtan"},"content":"        logger.info(\"Starting NUScheduler \" + MainApp.VERSION);","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"yumengtan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping NUScheduler ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"putaojuice":24,"yumengtan":4,"-":176}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"    private static final double DEFAULT_WIDTH \u003d 800;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yumengtan":1,"-":78}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yumengtan":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"            //TODO saveTaskList","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"            storage.saveTaskList(model.getReadOnlyTaskList());","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"yumengtan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"yumengtan"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"putaojuice":2,"yumengtan":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DEADLINE;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":" * Add a task to the system.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    public static final String COMMAND_WORD \u003d \"addt\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"            + \": Add a task with description and/or deadline.\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"            + \"Format: addt d/DESCRIPTION [t/DEADLINE (dd/mm/yyyy)]\\n\"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ADD_TASK_DESCRIPTION","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"            + \"Swimming lesson \" + PREFIX_ADD_TASK_DEADLINE + \"03/05/2022\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Task added.\\n\" + \"Description: %1$s\\n\" + \"Deadline: %2$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    public static final String MESSAGE_NO_DESCRIPTION \u003d \"Task description not found!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    private final String description;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    private final String deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"     * Initializes a AddTaskCommand with the given description. The deadline is not set.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    public AddTaskCommand(String description) {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"        requireAllNonNull(description);","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"        this.deadline \u003d \"No deadline set\";","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"     * Initializes a AddTaskCommand with the given description and deadline.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"    public AddTaskCommand(String description, String deadline) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        requireAllNonNull(description, deadline);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"        if (this.description.equals(\"\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"            // missing description, prompt the user with the format","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"            throw new CommandException(MESSAGE_NO_DESCRIPTION + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"        model.addTask(new Task(description, deadline));","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"        // Printing out the current items in task list to make sure the method work, should be removed later on","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"        System.out.println(model.getTaskList().getTaskList().toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS, description, deadline));","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"        // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"        return description.equals(e.description);","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":83}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":" * Delete a task from the system","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"    public static final String COMMAND_WORD \u003d \"delt\";","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"            + \": Delete a task number from current tasklist using given index. \\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"            + \"Format: delt [tasknumber]. \\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"1\";","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Task %1$s deleted\";","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_NO_INDEX \u003d \"Task number not found!\";","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"Task number does not exist in current task list!\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    private final Integer taskNumber;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"     * Initializes a DeleteTaskCommand with the given taskNumber","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"     * @param taskNumber index to be deleted","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"    public DeleteTaskCommand(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"        requireAllNonNull(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"        if (this.taskNumber \u003c\u003d 0 || this.taskNumber \u003e model.getTaskList().size()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"            throw new CommandException(MESSAGE_INDEX_OUT_OF_BOUNDS + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"        model.deleteTask(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"        // Printing out current items in list to ensure item is deleted","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"        System.out.println(model.getTaskList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS, taskNumber));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"            return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"        if (!(other instanceof DeleteTaskCommand)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"        //state check","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"        DeleteTaskCommand e \u003d (DeleteTaskCommand) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"        return taskNumber.equals(e.taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"ivorcmx":72}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":" * finds a task to the system based on user input.","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"    public static final String COMMAND_WORD \u003d \"findt\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"            + \": finds a task based on keywords. \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"            + \"Format: findt [INPUT] \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"Swimming lessons\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Here are the matching tasks in the list:\\n\" + \"%1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_NO_DESCRIPTION \u003d \"Unable to find any matching tasks due to empty keyword!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_NO_MATCHING_TASK \u003d \"Unable to find any matching tasks based on input!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    private final String input;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"     * Initializes a FindTaskCommand with the given input.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"    public FindTaskCommand(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"        if (this.input.equals(\"\")) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"            throw new CommandException(MESSAGE_NO_DESCRIPTION + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"            String orderedList \u003d model.findTask(input);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"            if (orderedList.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"                throw new CommandException(MESSAGE_NO_MATCHING_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS, orderedList));","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"            throw new CommandException(MESSAGE_NO_MATCHING_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"        if (!(other instanceof FindTaskCommand)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"yumengtan"},"content":"        //state check","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"yumengtan"},"content":"        FindTaskCommand e \u003d (FindTaskCommand) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"yumengtan"},"content":"        return input.equals(e.input);","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yumengtan":73}},{"path":"src/main/java/seedu/address/logic/commands/UpdateTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DEADLINE;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"public class UpdateTaskCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"    public static final String COMMAND_WORD \u003d \"updt\";","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the details of the chosen task\"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"        + \" by the task ID used in the displayed task list. \"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"        + \"At least one field must be updated \"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"        + \"Parameters: Task ID (must be a positive integer) \"","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"        + \"[\" + PREFIX_ADD_TASK_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"        + \"[\" + PREFIX_ADD_TASK_DEADLINE + \"DEADLINE]...\\n\"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"        + PREFIX_ADD_TASK_DESCRIPTION + \"Running Lesson \"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"        + PREFIX_ADD_TASK_DEADLINE + \"04/05/2022\";","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_UPDATE_TASK_SUCCESS \u003d \"Updated Task: %1$s\";","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list.\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_ID \u003d \"The task id provided is invalid\";","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"    private final Integer taskId;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"    private final UpdateTaskDescriptor updateTaskDescriptor;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"     * @param taskId of the person in the filtered person list to edit","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"     * @param updateTaskDescriptor details to edit the person with","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"    public UpdateTaskCommand(Integer taskId, UpdateTaskDescriptor updateTaskDescriptor) {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(taskId);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(updateTaskDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"        this.updateTaskDescriptor \u003d new UpdateTaskDescriptor(updateTaskDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"        TaskList lastShownList \u003d model.getTaskList();","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"        if (taskId \u003e lastShownList.size()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"            throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_ID);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"        Task taskToUpdate \u003d lastShownList.getTask(taskId);","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"        Task updatedTask \u003d createUpdatedTask(taskToUpdate, updateTaskDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"        if (taskToUpdate.equals(updatedTask)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"        model.updateTask(updatedTask, taskId);","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_TASK_SUCCESS, updatedTask));","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"     * edited with {@code updateTaskDescriptor}.","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"    public static Task createUpdatedTask(Task taskToUpdate, UpdateTaskDescriptor updateTaskDescriptor) {","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"ivorcmx"},"content":"        assert taskToUpdate !\u003d null;","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"        String updatedDescription \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"ivorcmx"},"content":"        String updatedDeadline \u003d \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"        if (updateTaskDescriptor.getDescription() \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"            updatedDescription \u003d taskToUpdate.getDescription();","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"ivorcmx"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"ivorcmx"},"content":"            updatedDescription \u003d updateTaskDescriptor.getDescription();","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"ivorcmx"},"content":"        if (updateTaskDescriptor.getDeadline() \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"ivorcmx"},"content":"            updatedDeadline \u003d taskToUpdate.getDeadline();","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"ivorcmx"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"ivorcmx"},"content":"            updatedDeadline \u003d updateTaskDescriptor.getDeadline();","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"        return new Task(updatedDescription, updatedDeadline);","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"ivorcmx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"ivorcmx"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"ivorcmx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"ivorcmx"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"ivorcmx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"ivorcmx"},"content":"        if (!(other instanceof UpdateTaskCommand)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"ivorcmx"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"ivorcmx"},"content":"        // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand e \u003d (UpdateTaskCommand) other;","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"ivorcmx"},"content":"        return taskId.equals(e.taskId)","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"ivorcmx"},"content":"            \u0026\u0026 updateTaskDescriptor.equals(e.updateTaskDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"ivorcmx"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"ivorcmx"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"ivorcmx"},"content":"    public static class UpdateTaskDescriptor {","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"ivorcmx"},"content":"        private String description;","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"ivorcmx"},"content":"        private String deadline;","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"ivorcmx"},"content":"        public UpdateTaskDescriptor() {","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"ivorcmx"},"content":"        /**","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"ivorcmx"},"content":"         * Constructor for updateTaskDescriptor object","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"ivorcmx"},"content":"         *","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"ivorcmx"},"content":"         */","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"ivorcmx"},"content":"        public UpdateTaskDescriptor(UpdateTaskDescriptor updateTaskDescriptor) {","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"ivorcmx"},"content":"            setDeadline(updateTaskDescriptor.deadline);","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"ivorcmx"},"content":"            setDescription(updateTaskDescriptor.description);","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"ivorcmx"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"ivorcmx"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"ivorcmx"},"content":"        public String getDescription() {","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"ivorcmx"},"content":"            return this.description;","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"ivorcmx"},"content":"        public void setDeadline(String deadline) {","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"ivorcmx"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"ivorcmx"},"content":"        public String getDeadline() {","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"ivorcmx"},"content":"            return this.deadline;","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"ivorcmx"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"ivorcmx"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"ivorcmx"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"ivorcmx"},"content":"                return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"ivorcmx"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"ivorcmx"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"ivorcmx"},"content":"            if (!(other instanceof UpdateTaskDescriptor)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"ivorcmx"},"content":"                return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"ivorcmx"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"ivorcmx"},"content":"            // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"ivorcmx"},"content":"            UpdateTaskDescriptor e \u003d (UpdateTaskDescriptor) other;","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"ivorcmx"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"ivorcmx"},"content":"                \u0026\u0026 getDeadline().equals(e.getDeadline());","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":168,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ivorcmx":168}},{"path":"src/main/java/seedu/address/logic/commands/ViewTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"castryl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"castryl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"castryl"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"castryl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"castryl"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"castryl"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"castryl"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"castryl"},"content":"public class ViewTaskCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"castryl"},"content":"    public static final String COMMAND_WORD \u003d \"viewt\";","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"castryl"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"castryl"},"content":"    public static final String MESSAGE_NO_TASK \u003d \"No tasks found!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"castryl"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"castryl"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"castryl"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"castryl"},"content":"        if (model.getTaskList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"castryl"},"content":"            // No tasks","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"castryl"},"content":"            throw new CommandException(MESSAGE_NO_TASK);","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"castryl"},"content":"        String message \u003d model.viewTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"castryl"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"\\n\" + message);","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"castryl"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"castryl":30}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DEADLINE;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":" * Parses input arguments and creates a new {@code AddTaskCommand} object","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddTaskCommand}","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"     * and returns a {@code AddTaskCommand} object for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_TASK_DESCRIPTION,","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"                PREFIX_ADD_TASK_DEADLINE);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"            // Throw exception if more than 1 description or deadline prefix exists","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"            checkMultiplePrefixTokens(argMultimap);","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"            // Throw exception if user input does not contain any description prefix","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"            checkDescriptionPrefixEmpty(argMultimap);","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"            // Throw exception if deadline does not adhere to specified format","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"            checkDeadlineFormat(argMultimap);","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"        String description \u003d argMultimap.getValue(PREFIX_ADD_TASK_DESCRIPTION).orElse(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        String deadline \u003d argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).orElse(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"        if (deadline.equals(\"\")) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"            // task without deadline set","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"            return new AddTaskCommand(description);","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"        } else {","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"            // task with deadline set","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"            return new AddTaskCommand(description, deadline);","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"     * Check if more than 1 description or deadline prefix token exists in user input.","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"     * @param argMultimap Tokenized user input","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"     * @throws ParseException Throw exception if more than 1 of the same prefix exists","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"    private void checkMultiplePrefixTokens(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"        List\u003cString\u003e description \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DESCRIPTION);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"        List\u003cString\u003e deadline \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DEADLINE);","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"        // Throw exception if more than 1 description or deadline token is used","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        if (description.size() \u003e 1 || deadline.size() \u003e 1) {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"            // more than 1 \"d/\" or \"t/\" prefix were used, meaning that it is wrong format","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"     * Check if description prefix token exists in user input.","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"     * @param argMultimap Tokenized user input","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"     * @throws ParseException Throw exception if description prefix token does not exist","lastModifiedDate":"2022-03-20"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"    private void checkDescriptionPrefixEmpty(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"        String description \u003d argMultimap.getValue(PREFIX_ADD_TASK_DESCRIPTION).orElse(\"\");","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"     * Check if user\u0027s deadline input follows dd/MM/yyyy format.","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"     * @param argMultimap Tokenized user input","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"putaojuice"},"content":"     * @throws ParseException Throw exception if deadline does not follow the specified format","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"putaojuice"},"content":"    private void checkDeadlineFormat(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"        String deadline \u003d argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).orElse(\"\");","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"putaojuice"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"putaojuice"},"content":"        // If deadline is empty, return immediately without checking the format","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"putaojuice"},"content":"        if (deadline.equals(\"\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"putaojuice"},"content":"            return;","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"putaojuice"},"content":"            dateTimeFormatter.parse(deadline);","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"putaojuice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":105}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"castryl"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"castryl"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"castryl"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.UpdateTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"castryl"},"content":"import seedu.address.logic.commands.ViewTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"ivorcmx"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"yumengtan"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"yumengtan"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"castryl"},"content":"        case ViewTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"castryl"},"content":"            return new ViewTaskCommand();","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"        case UpdateTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"            return new UpdateTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"putaojuice":3,"ivorcmx":7,"yumengtan":3,"castryl":7,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    public static final Prefix PREFIX_ADD_TASK_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    public static final Prefix PREFIX_ADD_TASK_DEADLINE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"putaojuice":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"            Integer taskNumber \u003d ParserUtil.parseNumber(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"            return new DeleteTaskCommand(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"ivorcmx":31}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"     * Parses the given {@code String} of argument in the context of the FindTaskCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"        return new FindTaskCommand(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yumengtan":26}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not valid.\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_INVALID_FIRSTCHAR \u003d \"Index starts with empty whitespace\";","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"ivorcmx"},"content":"     * Parses {@code oneBasedIndex} into an Integer and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"ivorcmx"},"content":"     * trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"ivorcmx"},"content":"    public static Integer parseNumber(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"ivorcmx"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"ivorcmx"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"ivorcmx"},"content":"        return Integer.parseInt(trimmedIndex);","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ivorcmx":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/UpdateTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DEADLINE;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.UpdateTaskCommand;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"public class UpdateTaskCommandParser implements Parser \u003cUpdateTaskCommand\u003e {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateTaskCommand","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"     * and returns an UpdateTask object for execution.","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"    public UpdateTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_ADD_TASK_DESCRIPTION, PREFIX_ADD_TASK_DEADLINE);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"        Integer taskId;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"            taskId \u003d ParserUtil.parseNumber(argMultimap.getPreamble());","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"            // Throw exception if more than 1 description or deadline prefix exists","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"            checkMultiplePrefixTokens(argMultimap);","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"            // Throw exception if no prefix exist","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"            checkMinimumOnePrefix(argMultimap);","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"            // Throw exception if deadline does not adhere to specified format","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"            checkDeadlineFormat(argMultimap);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"            // Throw exception if empty prefix tokens are found","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"            checkEmptyPrefix(argMultimap);","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"                UpdateTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor updateTaskDescriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"        if (argMultimap.getValue(PREFIX_ADD_TASK_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"            updateTaskDescriptor.setDescription(argMultimap.getValue(PREFIX_ADD_TASK_DESCRIPTION).get());","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"        if (argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"            updateTaskDescriptor.setDeadline(argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).get());","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"        return new UpdateTaskCommand(taskId, updateTaskDescriptor);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"     * Check if more than 1 description or deadline prefix token exists in user input.","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"     * Adapted from AddTaskCommandParser","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"     * @param argMultimap Tokenized user input","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException Throw exception if more than 1 of the same prefix exists","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"    private void checkMultiplePrefixTokens(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"        List\u003cString\u003e description \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DESCRIPTION);","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"        List\u003cString\u003e deadline \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DEADLINE);","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"        // Throw exception if more than 1 description or deadline token is used","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"ivorcmx"},"content":"        if (description.size() \u003e 1 || deadline.size() \u003e 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"            // more than 1 \"d/\" or \"t/\" prefix were used, meaning that it is wrong format","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"ivorcmx"},"content":"     * Check if description prefix token exists in user input.","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"ivorcmx"},"content":"     * Adapted from AddTaskCommandParser","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"ivorcmx"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"ivorcmx"},"content":"     * @param argMultimap Tokenized user input","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException Throw exception if prefix token does not exist","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"ivorcmx"},"content":"    private void checkMinimumOnePrefix(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"ivorcmx"},"content":"        List\u003cString\u003e description \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DESCRIPTION);","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"        List\u003cString\u003e deadline \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DEADLINE);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"        if (description.size() + deadline.size() \u003c 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"ivorcmx"},"content":"            // no prefix","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"ivorcmx"},"content":"                UpdateTaskCommand.MESSAGE_NOT_EDITED));","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"ivorcmx"},"content":"     * Check if prefix token values are empty.","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"ivorcmx"},"content":"     * Adapted from AddTaskCommandParser","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"ivorcmx"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"ivorcmx"},"content":"     * @param argMultimap Tokenized user input","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException Throw exception if either token prefix value is empty","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"ivorcmx"},"content":"    private void checkEmptyPrefix(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"ivorcmx"},"content":"        if (argMultimap.getValue(PREFIX_ADD_TASK_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"ivorcmx"},"content":"            String description \u003d argMultimap.getValue(PREFIX_ADD_TASK_DESCRIPTION).orElse(\"\");","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"ivorcmx"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"ivorcmx"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"ivorcmx"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"ivorcmx"},"content":"        if (argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).isPresent()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"ivorcmx"},"content":"            String deadline \u003d argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).orElse(\"\");","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"ivorcmx"},"content":"            if (deadline.equals(\"\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"ivorcmx"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"ivorcmx"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"ivorcmx"},"content":"     * Check if user\u0027s deadline input follows dd/MM/yyyy format.","lastModifiedDate":"2022-03-26"},{"lineNumber":121,"author":{"gitId":"ivorcmx"},"content":"     * Adapted from AddTaskCommandParser","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"ivorcmx"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"ivorcmx"},"content":"     * @param argMultimap Tokenized user input","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException Throw exception if deadline does not follow the specified format","lastModifiedDate":"2022-03-26"},{"lineNumber":125,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":126,"author":{"gitId":"ivorcmx"},"content":"    private void checkDeadlineFormat(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"ivorcmx"},"content":"        String deadline \u003d argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).orElse(\"\");","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"ivorcmx"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"ivorcmx"},"content":"        // If deadline is empty, return immediately without checking the format","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"ivorcmx"},"content":"        if (deadline.equals(\"\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"ivorcmx"},"content":"            return;","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"ivorcmx"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"ivorcmx"},"content":"            dateTimeFormatter.parse(deadline);","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"ivorcmx"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"ivorcmx":142}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"yumengtan"},"content":"    /** Returns an unmodifiable view of the filtered tasks list */","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"yumengtan"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"yumengtan"},"content":"    void addTask(Task task, Integer taskId) throws CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"    TaskList getTaskList();","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"ivorcmx"},"content":"    void deleteTask(Integer taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"yumengtan"},"content":"     * finds tasks based on keyword.","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"yumengtan"},"content":"     * filters task list based on matching keyword {@code input}.","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"yumengtan"},"content":"    String findTask(String input);","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"castryl"},"content":"    String viewTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"putaojuice"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"putaojuice"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"putaojuice"},"content":"    ReadOnlyTaskList getReadOnlyTaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"yumengtan"},"content":"    void updateTask(Task updatedTask, Integer taskId) throws CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"putaojuice":14,"yumengtan":12,"ivorcmx":3,"castryl":2,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getObservableTaskList());","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        this(new AddressBook(), new UserPrefs(), new TaskList());","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"putaojuice"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"putaojuice"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"yumengtan"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"yumengtan"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"yumengtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"yumengtan"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"yumengtan"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"yumengtan"},"content":"     * @return filteredTasks","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"yumengtan"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"yumengtan"},"content":"        return filteredTasks;","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"putaojuice"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":179,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":180,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":181,"author":{"gitId":"putaojuice"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"putaojuice"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"yumengtan"},"content":"        filteredTasks.setPredicate(unused -\u003e true);","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":185,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":186,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"yumengtan"},"content":"    public void addTask(Task task, Integer taskId) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"ivorcmx"},"content":"        taskList.addTask(task, taskId);","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":192,"author":{"gitId":"putaojuice"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":193,"author":{"gitId":"putaojuice"},"content":"        return this.taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"putaojuice"},"content":"    public ReadOnlyTaskList getReadOnlyTaskList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"putaojuice"},"content":"        return this.taskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"ivorcmx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Delete Task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":202,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"ivorcmx"},"content":"    public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"ivorcmx"},"content":"        taskList.deleteTask(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"yumengtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find Task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":209,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"yumengtan"},"content":"    public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":211,"author":{"gitId":"yumengtan"},"content":"        return taskList.findTask(input);","lastModifiedDate":"2022-03-13"},{"lineNumber":212,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":213,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":214,"author":{"gitId":"castryl"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d View Task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":215,"author":{"gitId":"castryl"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":216,"author":{"gitId":"castryl"},"content":"    public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":217,"author":{"gitId":"castryl"},"content":"        return taskList.viewTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":218,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":219,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"ivorcmx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Update Task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"yumengtan"},"content":"    public void updateTask(Task updatedTask, Integer taskId) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"ivorcmx"},"content":"        taskList.deleteTask(taskId);","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"ivorcmx"},"content":"        taskList.addTask(updatedTask, taskId);","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"putaojuice":31,"yumengtan":25,"ivorcmx":15,"castryl":6,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"yumengtan":1,"-":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":" * Unmodifiable view of a task list","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    ObservableList\u003cTask\u003e getObservableTaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"putaojuice":16}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    private final UniqueTaskList uniqueTaskList;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    /*","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"     *   among constructors.","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    {","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"        uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    public TaskList() {}","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"     * Creates a TaskList using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"        this();","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        setTaskList(newData.getObservableTaskList());","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"    public void setTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"        this.taskList.addAll(tasks);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"        this.uniqueTaskList.addAll(tasks);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"     * Add a task to the taskList.","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"     * @param task the Task to be added which must not be null","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"        this.uniqueTaskList.addTask(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"     *  Add a task to the taskList at a specific index.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"     * @param task the Task to be added which must not be null","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"     * @param taskId the location to be added in which must not be null","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"yumengtan"},"content":"    public void addTask(Task task, Integer taskId) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"yumengtan"},"content":"        uniqueTaskList.addTask(task, taskId); //throws an exception if adding duplicate task","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(taskId);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"ivorcmx"},"content":"        this.taskList.add(taskId - 1, task); // to convert to zero-based indexing","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"     * Returns the taskList.","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"     * @return the taskList with all the tasks contained","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"        return this.taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"    public int size() {","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"yumengtan"},"content":"     * Deletes a task from the tasklist in the specified index.","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"yumengtan"},"content":"     * @param taskNumber the index of the task to be deleted","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"ivorcmx"},"content":"    public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"ivorcmx"},"content":"        taskList.remove(taskNumber - 1); // to convert to zero-based indexing","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"yumengtan"},"content":"        uniqueTaskList.deleteTask(taskNumber);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"yumengtan"},"content":"     * Returns an ArrayList of matching tasks based on keyword.","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"yumengtan"},"content":"     * @param input the keyword input by user","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"yumengtan"},"content":"     * @return the list of ordered tasks that contain the keyword","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"yumengtan"},"content":"    public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"yumengtan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"yumengtan"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"yumengtan"},"content":"            Task curr \u003d this.taskList.get(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"yumengtan"},"content":"            String pattern \u003d \"(?i)(?\u003c!\\\\w)\" + Pattern.quote(input) + \"(?!\\\\w)\"; //bypass case sensitivity with regex","lastModifiedDate":"2022-04-01"},{"lineNumber":113,"author":{"gitId":"yumengtan"},"content":"            if (Pattern.compile(pattern).matcher(curr.toString()).find()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":114,"author":{"gitId":"yumengtan"},"content":"                matchingTasks.add(curr);","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"yumengtan"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"yumengtan"},"content":"        String orderedList \u003d getOutput(matchingTasks);","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"yumengtan"},"content":"        return orderedList;","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"castryl"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"castryl"},"content":"     * Returns a String of all tasks.","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"castryl"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"castryl"},"content":"     * @return the list of ordered tasks","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"castryl"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"castryl"},"content":"    public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"castryl"},"content":"        String orderedList \u003d getOutput(taskList);","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"castryl"},"content":"        return orderedList;","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"yumengtan"},"content":"     * Provides an ordered list of tasks that contains keyword.","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"yumengtan"},"content":"     * @param list - the list of tasks that matches keyword","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"yumengtan"},"content":"     * @return String of ordered list of tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"yumengtan"},"content":"    private String getOutput(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"yumengtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"yumengtan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"yumengtan"},"content":"            int order \u003d i + 1;","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"yumengtan"},"content":"            if (i \u003d\u003d list.size() - 1) {","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"yumengtan"},"content":"                sb.append(order).append(\". \").append(list.get(i).toString());","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"yumengtan"},"content":"            } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"yumengtan"},"content":"                sb.append(order).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"yumengtan"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"yumengtan"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"ivorcmx"},"content":"     * Provides the task in the corresponding index","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"ivorcmx"},"content":"     * @param taskId task id of the task to be retrieved","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"ivorcmx"},"content":"     * @return task with the matching ID in task list","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"ivorcmx"},"content":"    public Task getTask(Integer taskId) {","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"ivorcmx"},"content":"        return taskList.get(taskId - 1); // to convert to zero-based","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"yumengtan"},"content":"     * Retrieves the observable list of tasks","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"yumengtan"},"content":"     * @return observable list of tasks","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"putaojuice"},"content":"    public ObservableList\u003cTask\u003e getObservableTaskList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"yumengtan"},"content":"        return uniqueTaskList.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"putaojuice":72,"yumengtan":61,"ivorcmx":27,"castryl":10}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"tasklist.json\");","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"        return taskListFilePath;","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"putaojuice":10,"-":87}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"public class Task {","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"    private final String description;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"    private final String deadline;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"     * Initializes a Task with a description and deadline.","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"    public Task(String description, String deadline) {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"     * Getter to obtain description of task","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"     * @return Description of task","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"        return this.description;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"     * Getter to obtain deadline of task if any","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"     * @return Deadline of task","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"        return this.deadline;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"     * Returns true if both task have the same description.","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"     * Weaker notion of equality between two tasks","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"     * @param otherTask Task object to be compared to","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"     * @return boolean if the tasks compared have the same description","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"        return otherTask !\u003d null \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"     * Returns true if both task have the same description and deadline.","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"            return true;","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"            return false;","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"        return otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"            \u0026\u0026 otherTask.getDeadline().equals(getDeadline());","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        return \"Task: \" + this.description + \" \" + deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":21,"ivorcmx":51}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":" * A person is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":" * persons uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":" * unique in terms of identity in the UniquePTaskList. However, the removal of a person uses Task#equals(Object) so","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":" *","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":" *","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"public class UniqueTaskList {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"     * Add a task to the taskList.","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"     * @param task the Task to be added which must not be null","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        this.internalList.add(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"     * Adds a task to the list at a specific index.","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"     * @param toAdd the Task to be added which must not be null","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"     * @param taskId index of the list the task is to be added","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"    public void addTask(Task toAdd, Integer taskId) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(taskId);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"            throw new CommandException(\"Duplicate Task received\");","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"        internalList.add(taskId - 1, toAdd); // to convert to zero-based indexing","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"     * Sets the observable list of tasks from storage.","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"yumengtan"},"content":"    public void addAll(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"yumengtan"},"content":"        this.internalList.setAll(tasks);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"yumengtan"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"yumengtan"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"yumengtan"},"content":"    public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(taskNumber);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"yumengtan"},"content":"        internalList.remove(taskNumber - 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"yumengtan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"yumengtan"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"yumengtan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"yumengtan":87}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"    public static Task[] getSampleTask() {","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"        return new Task[] {","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"            new Task(\"dummy\", \"01/01/2022\")","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"        };","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        TaskList sampleTaskList \u003d new TaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"        for (Task sampleTask : getSampleTask()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"            sampleTaskList.addTask(sampleTask);","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        return sampleTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"putaojuice":16,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"    private final String description;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    private final String deadline;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"    public JsonAdaptedTask(@JsonProperty(\"description\") String description, @JsonProperty(\"deadline\") String deadline) {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"        deadline \u003d source.getDeadline();","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"        final String modelDescription \u003d description;","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"deadline\"));","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"        final String modelDeadline \u003d deadline;","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"        return new Task(modelDescription, modelDeadline);","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"putaojuice":52}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import java.util.List;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"public class JsonSerializableTaskList {","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"        tasks.addAll(source.getObservableTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"     * Converts this task list into the model\u0027s {@code TaskList} object.","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    public TaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        return taskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"putaojuice":46}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"        return filePath;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"     * Similar to {@link #readTaskList()}.","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"        if (!jsonTaskList.isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"        try {","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"putaojuice":76}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, TaskListStorage {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"putaojuice":10,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"                          TaskListStorage taskListStorage) {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"putaojuice"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"putaojuice"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"putaojuice"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"putaojuice"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"putaojuice"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-24"},{"lineNumber":102,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"putaojuice"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"putaojuice"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"putaojuice"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"putaojuice":32,"-":77}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"public interface TaskListStorage {","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"putaojuice":24}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103-f11-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yumengtan":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"yumengtan"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"yumengtan"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yumengtan":6,"-":196}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"    private static final String FXML \u003d \"TaskCard.fxml\";","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"    public final Task task;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"    private Label taskDescription;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    private Label taskDeadline;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    private Label taskId;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"        super(FXML);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"        taskId.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"        //taskTitle.setText(\"Tasks:\");","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"        taskDescription.setText(task.getDescription());","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"        taskDeadline.setText(task.getDeadline());","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"        return taskId.getText().equals(card.taskId.getText())","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"yumengtan":61}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"        super(FXML);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListPanel.TaskListViewCell());","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"                setText(null);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"            } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"yumengtan":45}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/NUScheduler_32.png\";","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"yumengtan"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/ThemePresets.css\");","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yumengtan":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"\u003cStackPane style\u003d\"-fx-border-radius: 15;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" style\u003d\"-fx-border-radius: 15; -fx-border-color: #000000;\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"yumengtan":2,"-":6}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#1d1d1d, -10%);","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yumengtan":2,"-":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"\u003cfx:root minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"NUScheduler\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"        \u003cURL value\u003d\"@ThemePresets.css\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"      \u003cVBox style\u003d\"-fx-background-color: #fffff0;\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #c9f1fd;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: #fffff0;\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"        \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"200\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yumengtan":22,"-":46}},{"path":"src/main/resources/view/TaskCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"                \u003cLabel fx:id\u003d\"taskId\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"                \u003cLabel fx:id\u003d\"taskDescription\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"            \u003cLabel fx:id\u003d\"taskDeadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"yumengtan":31}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"yumengtan":8}},{"path":"src/main/resources/view/ThemePresets.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#fffff0, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"    -fx-base: #f0ffff;","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"    -fx-control-inner-background: #f0ffff;","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #f0ffff;","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#f0ffff, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"yumengtan"},"content":"    -fx-border-color: derive(#f0ffff, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#f0ffff, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#f0ffff, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"yumengtan"},"content":"    -fx-background-insets: 3px;","lastModifiedDate":"2022-04-01"},{"lineNumber":99,"author":{"gitId":"yumengtan"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2022-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #e8eaf6;","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #dadef1;","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #d2d4e0;","lastModifiedDate":"2022-04-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"yumengtan"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-04-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"yumengtan"},"content":"    -fx-background-insets: 3px;","lastModifiedDate":"2022-04-01"},{"lineNumber":119,"author":{"gitId":"yumengtan"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2022-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"yumengtan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":139,"author":{"gitId":"yumengtan"},"content":"     -fx-background-color: derive(#f0ffff, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":140,"author":{"gitId":"yumengtan"},"content":"     -fx-border-color: derive(#1d1d1d, 40%);","lastModifiedDate":"2022-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"yumengtan"},"content":"     -fx-background-color: derive(#fffff0, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":145,"author":{"gitId":"yumengtan"},"content":"     -fx-border-color: derive(#1d1d1d, -10%);","lastModifiedDate":"2022-04-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #c9f1fd;","lastModifiedDate":"2022-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#fffff0, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"yumengtan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":166,"author":{"gitId":"yumengtan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":188,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#fffff0, 30%);","lastModifiedDate":"2022-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#fffff0, 30%);","lastModifiedDate":"2022-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":206,"author":{"gitId":"yumengtan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #c9f1fd;","lastModifiedDate":"2022-04-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":214,"author":{"gitId":"yumengtan"},"content":".menu-item .label{","lastModifiedDate":"2022-04-01"},{"lineNumber":215,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #c9f1fd;","lastModifiedDate":"2022-04-01"},{"lineNumber":216,"author":{"gitId":"yumengtan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"yumengtan"},"content":".context-menu {","lastModifiedDate":"2022-04-01"},{"lineNumber":220,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #c9f1fd;","lastModifiedDate":"2022-04-01"},{"lineNumber":221,"author":{"gitId":"yumengtan"},"content":"    -fx-border-color: #1d1d1d;","lastModifiedDate":"2022-04-01"},{"lineNumber":222,"author":{"gitId":"yumengtan"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-04-01"},{"lineNumber":223,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":224,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"yumengtan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#f0ffff, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#e6e6e7, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: #e6e6e7;","lastModifiedDate":"2022-04-01"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"yumengtan"},"content":"    -fx-border-color: #2d4b5a;","lastModifiedDate":"2022-04-01"},{"lineNumber":306,"author":{"gitId":"yumengtan"},"content":"    -fx-background-radius : 1em;","lastModifiedDate":"2022-04-01"},{"lineNumber":307,"author":{"gitId":"yumengtan"},"content":"    -fx-border-radius: 1em;","lastModifiedDate":"2022-04-01"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"yumengtan"},"content":"    -fx-prompt-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"yumengtan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-04-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"yumengtan"},"content":"    -fx-background-color: derive(#f0ffff, 20%);","lastModifiedDate":"2022-04-01"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"yumengtan":47,"-":323}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"tasklist.json\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"tasklist.json\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"yumengtan"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"yumengtan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"putaojuice":6,"yumengtan":6,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"putaojuice":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"yumengtan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"putaojuice"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"ivorcmx"},"content":"        public void addTask(Task task, Integer taskId) {","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":169,"author":{"gitId":"putaojuice"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":171,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":172,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"ivorcmx"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"castryl"},"content":"        public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"putaojuice"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"putaojuice"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyTaskList getReadOnlyTaskList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":204,"author":{"gitId":"ivorcmx"},"content":"        public void updateTask(Task updatedTask, Integer taskId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"putaojuice":31,"yumengtan":7,"ivorcmx":12,"castryl":7,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    public void constructor_nullDescriptionAndDeadline_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, null));","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"    public void execute_addTaskNoDeadline_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"        ModelStubAcceptTask modelStubAcceptTask \u003d new ModelStubAcceptTask();","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(\"description\").execute(modelStubAcceptTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_ARGUMENTS, \"description\", \"No deadline set\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"    public void execute_addTaskWithDeadline_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"        ModelStubAcceptTask modelStubAcceptTask \u003d new ModelStubAcceptTask();","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(\"description\", \"2022\")","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"                .execute(modelStubAcceptTask);","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_ARGUMENTS, \"description\", \"2022\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"putaojuice"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"putaojuice"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"putaojuice"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"putaojuice"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":122,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"putaojuice"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":127,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"yumengtan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"putaojuice"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"ivorcmx"},"content":"        public void addTask(Task task, Integer taskId) {","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"putaojuice"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"ivorcmx"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"castryl"},"content":"        public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"putaojuice"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"putaojuice"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyTaskList getReadOnlyTaskList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"ivorcmx"},"content":"        public void updateTask(Task updatedTask, Integer taskId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":182,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"putaojuice"},"content":"    private class ModelStubAcceptTask extends ModelStub {","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"putaojuice"},"content":"        private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-18"},{"lineNumber":185,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":186,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":187,"author":{"gitId":"putaojuice"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":188,"author":{"gitId":"putaojuice"},"content":"            return taskList;","lastModifiedDate":"2022-03-18"},{"lineNumber":189,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":190,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":191,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":192,"author":{"gitId":"putaojuice"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-18"},{"lineNumber":193,"author":{"gitId":"putaojuice"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-03-18"},{"lineNumber":194,"author":{"gitId":"putaojuice"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-03-18"},{"lineNumber":195,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":196,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":197,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":169,"yumengtan":9,"ivorcmx":12,"castryl":7}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"putaojuice":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DEADLINE;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"    public static final String VALID_DESCRIPTION_SWIMMING \u003d \"Swimming Lesson\";","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"    public static final String VALID_DEADLINE_MARCH \u003d \"03/03/2022\";","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"    public static final String DESC_SWIMMING \u003d \" \" + PREFIX_ADD_TASK_DESCRIPTION + VALID_DESCRIPTION_SWIMMING;","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"    public static final String DEADLINE_SWIMMING \u003d \" \" + PREFIX_ADD_TASK_DEADLINE + VALID_DEADLINE_MARCH;","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"    public static final String INVALID_DEADLINE_YEAR \u003d \" \" + PREFIX_ADD_TASK_DEADLINE + \"2022\"; // Wrong format","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"    public static final String INVALID_DEADLINE_MONTH \u003d \" \" + PREFIX_ADD_TASK_DEADLINE + \"03/2022\"; // Wrong format","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ivorcmx":11,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"putaojuice":4,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    private ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"    public void constructor_validInputSuccess() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"        Integer taskNumberToBeDeleted \u003d 1;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(taskNumberToBeDeleted);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"        model.addTask(new Task(\"test\", \"2022\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"        CommandResult commandResult \u003d new DeleteTaskCommand(taskNumberToBeDeleted)","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"            .execute(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"        assertEquals(String.format(DeleteTaskCommand.MESSAGE_ARGUMENTS, taskNumberToBeDeleted),","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"    public void execute_outOfBoundsIndex_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"        Integer outOfBoundIndex \u003d model.getTaskList().size() + 1;","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"        String expectedMessage \u003d DeleteTaskCommand.MESSAGE_INDEX_OUT_OF_BOUNDS","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"            + \"\\n\" + DeleteTaskCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"        assertCommandFailure(deleteTaskCommand, model, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"        DeleteTaskCommand deleteFirstTaskCommand \u003d new DeleteTaskCommand(1);","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"        DeleteTaskCommand deleteSecondTaskCommand \u003d new DeleteTaskCommand(2);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"        DeleteTaskCommand deleteFirstTaskCommandCopy \u003d new DeleteTaskCommand(1);","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(deleteFirstTaskCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(deleteFirstTaskCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"ivorcmx"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(deleteFirstTaskCommand.equals(deleteSecondTaskCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"ivorcmx"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"ivorcmx"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"ivorcmx"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"ivorcmx"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"ivorcmx"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"ivorcmx"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"ivorcmx"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"ivorcmx"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"ivorcmx"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"ivorcmx"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"ivorcmx"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"ivorcmx"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"ivorcmx"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"ivorcmx"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"yumengtan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"ivorcmx"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"ivorcmx"},"content":"        public void addTask(Task task, Integer taskId) {","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"ivorcmx"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"ivorcmx"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":191,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":192,"author":{"gitId":"castryl"},"content":"        public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":195,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"putaojuice"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"putaojuice"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyTaskList getReadOnlyTaskList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":212,"author":{"gitId":"ivorcmx"},"content":"        public void updateTask(Task updatedTask, Integer taskId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"putaojuice":21,"ivorcmx":180,"yumengtan":8,"castryl":7}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"                model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"                model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"                model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"putaojuice"},"content":"                model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"putaojuice":10,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"putaojuice":3,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    private final ModelManager model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"    public void constructor_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FindTaskCommand(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"    public void execute_validInputSuccess() throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        String testInputSuccess \u003d \"test\";","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"        FindTaskCommand findTaskCommand \u003d new FindTaskCommand(testInputSuccess);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"        model.addTask(new Task(\"test\", \"2022\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"        CommandResult commandResult \u003d findTaskCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"                .execute(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"        String taskSuccess \u003d model.findTask(testInputSuccess);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"        assertEquals(String.format(FindTaskCommand.MESSAGE_ARGUMENTS, taskSuccess),","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"    public void execute_validInput_noTaskFound() {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"        String testInputUnsuccessful \u003d \"fail\";","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"        FindTaskCommand findTaskCommand \u003d new FindTaskCommand(testInputUnsuccessful);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"        model.addTask(new Task(\"test\", \"2022\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"        String expectedMessage \u003d FindTaskCommand.MESSAGE_NO_MATCHING_TASK;","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e findTaskCommand.execute(model));","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"        String firstTest \u003d \"test1\";","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"yumengtan"},"content":"        String secondTest \u003d \"test2\";","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"yumengtan"},"content":"        FindTaskCommand findFirstTaskCommand \u003d new FindTaskCommand(firstTest);","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"yumengtan"},"content":"        FindTaskCommand findSecondTaskCommand \u003d new FindTaskCommand(secondTest);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"yumengtan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"yumengtan"},"content":"        assertTrue(findFirstTaskCommand.equals(findFirstTaskCommand));","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"yumengtan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"yumengtan"},"content":"        FindTaskCommand findFirstTaskCommandCopy \u003d new FindTaskCommand(firstTest);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"yumengtan"},"content":"        assertTrue(findFirstTaskCommand.equals(findFirstTaskCommandCopy));","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"yumengtan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"yumengtan"},"content":"        assertFalse(findFirstTaskCommand.equals(firstTest));","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"yumengtan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"yumengtan"},"content":"        assertFalse(findFirstTaskCommand.equals(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"yumengtan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"yumengtan"},"content":"        assertFalse(findFirstTaskCommand.equals(findSecondTaskCommand));","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"yumengtan"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"yumengtan"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"yumengtan"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"yumengtan"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"yumengtan"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"yumengtan"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"yumengtan"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"yumengtan"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"yumengtan"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"yumengtan"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"yumengtan"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"yumengtan"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"yumengtan"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"yumengtan"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"yumengtan"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"yumengtan"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":159,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"yumengtan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"yumengtan"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"ivorcmx"},"content":"        public void addTask(Task task, Integer taskId) {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"yumengtan"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"yumengtan"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":188,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":191,"author":{"gitId":"castryl"},"content":"        public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":192,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"putaojuice"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"putaojuice"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyTaskList getReadOnlyTaskList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":211,"author":{"gitId":"ivorcmx"},"content":"        public void updateTask(Task updatedTask, Integer taskId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":215,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"putaojuice":21,"yumengtan":181,"ivorcmx":7,"castryl":7}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"putaojuice":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/UpdateTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"public class UpdateTaskCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"        Task updatedTask \u003d new Task(\"test\", \"03/03/2022\");","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(updatedTask.getDescription());","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDeadline(updatedTask.getDeadline());","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand updateTaskCommand \u003d new UpdateTaskCommand(1, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"        String expectedMessage \u003d String.format(UpdateTaskCommand.MESSAGE_UPDATE_TASK_SUCCESS, updatedTask);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"            model.getTaskList());","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"        expectedModel.updateTask(updatedTask, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"        assertCommandSuccess(updateTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"    public void createTask_descriptorWithoutDeadline() {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"        Task updatedTask \u003d new Task(\"test\", \"03/03/2022\");","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(updatedTask.getDescription());","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"        Task newTaskCreated \u003d UpdateTaskCommand.createUpdatedTask(updatedTask, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(newTaskCreated.getDeadline().equals(updatedTask.getDeadline()));","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"    public void createTask_descriptorWithoutDescription() {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"        Task updatedTask \u003d new Task(\"test\", \"03/03/2022\");","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDeadline(updatedTask.getDeadline());","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"        Task newTaskCreated \u003d UpdateTaskCommand.createUpdatedTask(updatedTask, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(newTaskCreated.getDescription().equals(updatedTask.getDescription()));","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"    public void createTaskWithoutDeadline_descriptorWithoutDeadline() {","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"        Task updatedTask \u003d new Task(\"test\", \"No deadline set\");","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(updatedTask.getDescription());","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"        Task newTaskCreated \u003d UpdateTaskCommand.createUpdatedTask(updatedTask, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(newTaskCreated.getDeadline().equals(\"No deadline set\"));","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"yumengtan"},"content":"    public void execute_updateDuplicateTask_failure() throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"        Task updatedTask \u003d new Task(\"test\", \"03/03/2022\");","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(updatedTask.getDescription());","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDeadline(updatedTask.getDeadline());","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand updateTaskCommand \u003d new UpdateTaskCommand(1, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"ivorcmx"},"content":"        model.updateTask(updatedTask, 1);","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"        model.updateTask(updatedTask, 1); // throw duplicate task error","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"ivorcmx"},"content":"        assertCommandFailure(updateTaskCommand, model, \"This task already exists in the task list.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"ivorcmx"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"ivorcmx"},"content":"        Integer outOfBoundIndex \u003d model.getTaskList().size() + 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(\"test\");","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDeadline(\"03/03/2022\");","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand updateTaskCommand \u003d new UpdateTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"ivorcmx"},"content":"        assertCommandFailure(updateTaskCommand, model, \"The task id provided is invalid\");","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"ivorcmx"},"content":"    public void equals() {","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"ivorcmx"},"content":"        Task updatedTask \u003d new Task(\"test\", \"03/03/2022\");","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"ivorcmx"},"content":"        Task differentTask \u003d new Task(\"differentTest\", \"05/05/2022\");","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(updatedTask.getDescription());","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDeadline(updatedTask.getDeadline());","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"ivorcmx"},"content":"        final UpdateTaskCommand standardCommand \u003d new UpdateTaskCommand(1, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"ivorcmx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor copyDescriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"ivorcmx"},"content":"        copyDescriptor.setDescription(updatedTask.getDescription());","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"ivorcmx"},"content":"        copyDescriptor.setDeadline(updatedTask.getDeadline());","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand commandWithSameValues \u003d new UpdateTaskCommand(1, copyDescriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"ivorcmx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"ivorcmx"},"content":"        assertTrue(descriptor.equals(descriptor));","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"ivorcmx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"ivorcmx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(descriptor.equals(new ClearCommand()));","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"ivorcmx"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(standardCommand.equals(new UpdateTaskCommand(2, descriptor)));","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor differentDescriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(differentTask.getDescription());","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDeadline(differentTask.getDeadline());","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"ivorcmx"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"ivorcmx"},"content":"        assertFalse(standardCommand.equals(new UpdateTaskCommand(1, differentDescriptor)));","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"ivorcmx":127,"yumengtan":3}},{"path":"src/test/java/seedu/address/logic/commands/ViewTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"castryl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"castryl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"castryl"},"content":"import static seedu.address.logic.commands.ViewTaskCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"castryl"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"castryl"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"castryl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"castryl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"castryl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"castryl"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"castryl"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"castryl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"castryl"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"castryl"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"castryl"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"castryl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"castryl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"castryl"},"content":"public class ViewTaskCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"castryl"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"castryl"},"content":"    public void execute_taskListIsEmpty_throwsCommandException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"castryl"},"content":"        ModelStubViewTask modelStubViewTask \u003d new ModelStubViewTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"castryl"},"content":"        assertThrows(CommandException.class, () -\u003e new ViewTaskCommand().execute(modelStubViewTask));","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"castryl"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"castryl"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"castryl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ViewTaskCommand().execute(null));","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"castryl"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"castryl"},"content":"    public void execute_taskListIsNotEmpty_viewSuccessful() throws CommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"castryl"},"content":"        ModelStubHasTask modelStubHasTask \u003d new ModelStubHasTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"castryl"},"content":"        modelStubHasTask.addTask(new Task(\"description\", \"01/01/2022\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"castryl"},"content":"        String message \u003d modelStubHasTask.viewTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"castryl"},"content":"        CommandResult commandResult \u003d new ViewTaskCommand().execute(modelStubHasTask);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"castryl"},"content":"        assertEquals(MESSAGE_SUCCESS + \"\\n\" + message, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"castryl"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"castryl"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"castryl"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"castryl"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"castryl"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"castryl"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"castryl"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"castryl"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"castryl"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"castryl"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"castryl"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"castryl"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"castryl"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"castryl"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"castryl"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"castryl"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"castryl"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"castryl"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"yumengtan"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"castryl"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"ivorcmx"},"content":"        public void addTask(Task task, Integer taskId) {","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"castryl"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"castryl"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"castryl"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"castryl"},"content":"        public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"castryl"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"putaojuice"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"putaojuice"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyTaskList getReadOnlyTaskList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"ivorcmx"},"content":"        public void updateTask(Task updatedTask, Integer taskId) {","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"castryl"},"content":"    private class ModelStubViewTask extends ModelStub {","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"castryl"},"content":"        private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"castryl"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"castryl"},"content":"            return this.taskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"castryl"},"content":"        public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"castryl"},"content":"            return taskList.viewTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":188,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"castryl"},"content":"    private class ModelStubHasTask extends ModelStub {","lastModifiedDate":"2022-03-21"},{"lineNumber":191,"author":{"gitId":"castryl"},"content":"        private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":192,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"castryl"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":195,"author":{"gitId":"castryl"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":197,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":199,"author":{"gitId":"castryl"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"castryl"},"content":"            return this.taskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":201,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":202,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":203,"author":{"gitId":"castryl"},"content":"        @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":204,"author":{"gitId":"castryl"},"content":"        public String viewTask() {","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"castryl"},"content":"            return taskList.viewTask();","lastModifiedDate":"2022-03-21"},{"lineNumber":206,"author":{"gitId":"castryl"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"castryl"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"castryl"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"putaojuice":19,"yumengtan":5,"ivorcmx":7,"castryl":177}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    public void parse_allFieldPresent_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"        assertParseSuccess(parser, \"addt d/description t/01/01/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"                new AddTaskCommand(\"description\", \"01/01/2022\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"        assertParseSuccess(parser, \"addt d/description\",","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"                new AddTaskCommand(\"description\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    public void parse_multipleDescriptions_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/abc d/abc\", expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    public void parse_multipleDeadline_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/abc t/01/01/2022 t/01/01/2022\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"        // has description prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/\", expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"        // has description prefix and deadline prefix","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/ t/\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"        // no description prefix","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt\", expectedMessage);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"    public void parse_deadlineFormat_success() {","lastModifiedDate":"2022-03-20"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"        assertParseSuccess(parser, \"addt d/description t/01/01/2022\",","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"                new AddTaskCommand(\"description\", \"01/01/2022\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"    public void parse_deadlineFormat_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"        // no \"/\" between date, month, year","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/description t/01012022\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        // uses \"-\" between date, month, year","lastModifiedDate":"2022-03-20"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/description t/01-01-2022\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"    public void parse_deadlineFormatUseAlphabets_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/description t/monday\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/description t/o1/o1/2o22\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-20"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"    public void parse_deadlineFormatUseSymbols_failure() {","lastModifiedDate":"2022-03-20"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/description t/!@#$%^\u0026*(){}[]|~`\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"        assertParseFailure(parser, \"addt d/description t/*10!2()22\", expectedMessage);","lastModifiedDate":"2022-03-20"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"putaojuice":84}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"    public void parse_invalidSymbols_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"$%^%$^%#$\",","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"ivorcmx":35}},{"path":"src/test/java/seedu/address/logic/parser/FindTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"public class FindTaskCommandParserTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"    private final FindTaskCommandParser parser \u003d new FindTaskCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"        assertParseSuccess(parser, \"test\", new FindTaskCommand(\"test\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"yumengtan":25}},{"path":"src/test/java/seedu/address/logic/parser/UpdateTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_SWIMMING;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SWIMMING;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_MONTH;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_YEAR;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_MARCH;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_SWIMMING;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.UpdateTaskCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"public class UpdateTaskCommandParserTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"    private UpdateTaskCommandParser parser \u003d new UpdateTaskCommandParser();","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"        // no taskId specified","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION_SWIMMING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"        // no field specified","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"        // no taskId and no field specified","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"        // negative index","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"-5\" + DESC_SWIMMING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"        // zero index","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"0\" + DESC_SWIMMING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_YEAR, MESSAGE_INVALID_FORMAT); // invalid deadline","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_MONTH, MESSAGE_INVALID_FORMAT); // invalid deadline","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\" + \" d/\", MESSAGE_INVALID_FORMAT); // empty description","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\" + \" t/\", MESSAGE_INVALID_FORMAT); // empty deadline","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"        // valid description followed by invalid deadline","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\" + DESC_SWIMMING + INVALID_DEADLINE_YEAR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"        // invalid description followed by valid deadline.","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\" + \" d/\" + DEADLINE_SWIMMING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"        // multiple invalid values","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, \"1\" + \" d/\" + INVALID_DEADLINE_YEAR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"        Integer targetTaskId \u003d 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"        String userInput \u003d targetTaskId + DESC_SWIMMING + DEADLINE_SWIMMING;","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand.UpdateTaskDescriptor descriptor \u003d new UpdateTaskCommand.UpdateTaskDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDescription(VALID_DESCRIPTION_SWIMMING);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"        descriptor.setDeadline(VALID_DEADLINE_MARCH);","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"        UpdateTaskCommand expectedCommand \u003d new UpdateTaskCommand(targetTaskId, descriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"ivorcmx"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"ivorcmx"},"content":"        Integer targetTaskId \u003d 1;","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"ivorcmx"},"content":"        String userInput \u003d targetTaskId + DESC_SWIMMING + DESC_SWIMMING;","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"ivorcmx"},"content":"        assertParseFailure(parser, userInput, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"ivorcmx":90}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"    public void setTaskListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskListFilePath(null));","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"    public void setTaskListFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"        Path path \u003d Paths.get(\"task/list/file/path\");","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"        modelManager.setTaskListFilePath(path);","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"        assertEquals(path, modelManager.getTaskListFilePath());","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"yumengtan"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"yumengtan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"putaojuice"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"putaojuice"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, taskList);","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"putaojuice"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, taskList);","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"putaojuice"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, taskList)));","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":140,"author":{"gitId":"putaojuice"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, taskList)));","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":148,"author":{"gitId":"putaojuice"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, taskList)));","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"putaojuice":18,"yumengtan":5,"-":127}},{"path":"src/test/java/seedu/address/model/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"public class TaskListTest {","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"    public void constructor() {","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"        assertEquals(Collections.emptyList(), taskList.getTaskList());","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    public void addTask_success() {","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"        ArrayList\u003cTask\u003e stubTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        stubTaskList.add(new Task(\"description\", \"2022\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"        taskList.addTask(new Task(\"description\", \"2022\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"        assertEquals(stubTaskList.toString(), taskList.getTaskList().toString());","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    public void addTask_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.addTask(null));","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.resetData(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"    public void resetData_withValidReadOnlyTaskList_replacesData() {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        TaskList newData \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        taskList.resetData(newData);","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"        assertEquals(newData.getTaskList(), taskList.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"    public void getObservableTaskList_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"        ObservableList\u003cTask\u003e observableTaskList \u003d taskList.getObservableTaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"        assertEquals(observableTaskList, taskList.getTaskList());","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"putaojuice":53}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"    public void setTaskListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskListFilePath(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"putaojuice":5,"-":21}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"public class TaskTest {","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"    public void constructor_allNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Task(null, null));","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"    public void constructor_descriptionNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Task(null, \"2022\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    public void constructor_deadlineNull_throwsNullPointerException() {","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Task(\"description\", null));","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"    public void getDescription_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"        Task task \u003d new Task(\"dummy\", \"01/01/2022\");","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"        assertEquals(\"dummy\", task.getDescription());","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    public void getDeadline_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"        Task task \u003d new Task(\"dummy\", \"01/01/2022\");","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"        assertEquals(\"01/01/2022\", task.getDeadline());","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    public void toString_success() {","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"        Task task \u003d new Task(\"description\", \"2022\");","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"        assertEquals(task.toString(), \"Task: description 2022\");","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"putaojuice":42}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.testutil.TypicalTask.DUMMY_TASK;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"        assertFalse(uniqueTaskList.contains(DUMMY_TASK));","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    public void contains_taskInList_returnsTrue() throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"        uniqueTaskList.addTask(DUMMY_TASK, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"        assertTrue(uniqueTaskList.contains(DUMMY_TASK));","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.addTask(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"    public void add_duplicateTask_throwsDuplicatePersonException() throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"        uniqueTaskList.addTask(DUMMY_TASK, 1);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        assertThrows(CommandException.class, () -\u003e uniqueTaskList.addTask(DUMMY_TASK, 1));","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.deleteTask(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d uniqueTaskList;","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"        Task test \u003d new Task(\"test\", \"30/03/2022\");","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"        uniqueTaskList.addTask(test);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"        uniqueTaskList.deleteTask(1);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"        assertEquals(uniqueTaskList, expectedUniqueTaskList);","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"yumengtan":64}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.DUMMY_TASK;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"class JsonAdaptedTaskTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    public void toModelType_validTask_returnsTask() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(\"dummy\", \"01/01/2022\");","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"        assertEquals(DUMMY_TASK.toString(), task.toModelType().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, \"01/01/2022\");","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\");","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(\"description\", null);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"deadline\");","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"putaojuice":33}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"import seedu.address.testutil.TypicalTask;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"class JsonSerializableTaskListTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskListTest\");","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    private static final Path TYPICAL_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTaskTaskList.json\");","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskList.json\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"    public void toModelType_typicalTaskFile_success() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASK_FILE,","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"        TaskList taskListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"        TaskList typicalTaskList \u003d TypicalTask.getTypicalTaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"        assertEquals(taskListFromFile.getTaskList().toString(), typicalTaskList.getTaskList().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"putaojuice":36}},{"path":"src/test/java/seedu/address/storage/JsonTaskListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"class JsonTaskListStorageTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskListStorageTest\");","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    @TempDir","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    public void readTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskList(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    private java.util.Optional\u003cReadOnlyTaskList\u003e readTaskList(String filePath) throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"        return new JsonTaskListStorage(Paths.get(filePath)).readTaskList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"                : null;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"    public void readTaskList_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        assertFalse(readTaskList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"    public void readTaskList_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"    public void readTaskList_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"invalidTaskTaskList.json\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"    public void readTaskList_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"invalidAndValidTaskTaskList.json\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"        TaskList original \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        JsonTaskListStorage jsonTaskListStorage \u003d new JsonTaskListStorage(filePath);","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"        ReadOnlyTaskList readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        assertEquals(original.getTaskList().toString(), new TaskList(readBack).getTaskList().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"        original.addTask(new Task(\"dummy\", \"01/01/2022\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        original.deleteTask(1);","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"        assertEquals(original.getTaskList().toString(), new TaskList(readBack).getTaskList().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"        original.addTask(new Task(\"dummy\", \"01/01/2022\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"        jsonTaskListStorage.saveTaskList(original); // file path not specified","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList().get(); // file path not specified","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"        assertEquals(original.getTaskList().toString(), new TaskList(readBack).getTaskList().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"    public void saveTaskList_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"    private void saveTaskList(ReadOnlyTaskList taskList, String filePath) {","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"putaojuice"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"            new JsonTaskListStorage(Paths.get(filePath)).saveTaskList(taskList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"putaojuice"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"putaojuice"},"content":"    public void saveTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(new TaskList(), null));","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"putaojuice":103}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.TypicalTask.getTypicalTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tasklist\"));","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"    public void taskListReadSave() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        TaskList original \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"        storageManager.saveTaskList(original);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"        ReadOnlyTaskList retrieved \u003d storageManager.readTaskList().get();","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"        assertEquals(original.getTaskList().toString(), new TaskList(retrieved).getTaskList().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"    public void getTaskListFilePath() {","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"        assertNotNull(storageManager.getTaskListFilePath());","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"putaojuice":17,"-":67}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ivorcmx":1,"-":76}},{"path":"src/test/java/seedu/address/testutil/TypicalTask.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"public class TypicalTask {","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"    public static final Task DUMMY_TASK \u003d new Task(\"dummy\", \"01/01/2022\");","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"    private TypicalTask() {} // prevent instantiation","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"        for (Task task : getTypicalTask()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"            taskList.addTask(task);","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"        return taskList;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    public static List\u003cTask\u003e getTypicalTask() {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DUMMY_TASK));","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"putaojuice":26}}]
