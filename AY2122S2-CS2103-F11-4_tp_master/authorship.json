[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103-F11-4/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"# NUScheduler","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"*** ","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.\u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"## Uses:","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"  * keep track of all school contacts, modules and tasks","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"  * organise academic life in a neat manner","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"  ","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"## Features:","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"  * Add a task/contact","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"  * Delete a task/contact","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"  * Update a task/contact","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"  * Add a label to task","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"  * View all tasks and their deadlines","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"  * View all contacts","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"  * Remind upcoming tasks","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"## Acknowledgements","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"***","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative.](https://se-education.org)","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"yumengtan":29,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"ABOUT US","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"You can reach us at the email `e0544443@u.nus.edu`","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"### Chen Yu An","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/putaojuice.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"[[github](https://github.com/putaojuice)]","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/putaojuice.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"### Low Weimin, Ian","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/castryl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"[[github](http://github.com/castryl]","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/castryl.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"* Role: Documentation","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"### Ivor Chua","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/ivorcmx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"[[github](http://github.com/ivorcmx)] ","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/ivorcmx.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"* Role: Testing","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"### Tan Yu Meng","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"\u003cimg src\u003d\"images/yumengtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"[[github](http://github.com/yumengtan)]","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"[[portfolio](team/yumengtan.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"* Role: Code Quality","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"ivorcmx":21,"-":24}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"castryl"},"content":"NUScheduler is for Year 1 NUS Computing students who prefer CLI over GUI and has a lot of academic tasks to keep track of.","lastModifiedDate":"2022-03-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"castryl"},"content":"**Value proposition**: This app has simple CLI and a sleek GUI that allows the user to manage the tasks easily and efficiently. It will be mainly used to keep track NUS assignments and projects across multiple modules.","lastModifiedDate":"2022-03-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                         | So that I can…​                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"castryl"},"content":"|----------| ------------------------------------------ | ------------------------------------ | ------------------------------------------------------------------ |","lastModifiedDate":"2022-03-08"},{"lineNumber":271,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | add a task                           | keep track of the task                                             |","lastModifiedDate":"2022-03-08"},{"lineNumber":272,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | delete a task                        | remove a task I have completed                                     |","lastModifiedDate":"2022-03-08"},{"lineNumber":273,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | edit a task                          | change details of a task                                           |","lastModifiedDate":"2022-03-08"},{"lineNumber":274,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | view all tasks                       | keep track of all my current tasks                                 |","lastModifiedDate":"2022-03-08"},{"lineNumber":275,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | add a contact                        | keep track of all my contacts                                      |","lastModifiedDate":"2022-03-08"},{"lineNumber":276,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | delete a contact                     | delete an incorrect/unneeded contact                               |","lastModifiedDate":"2022-03-08"},{"lineNumber":277,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | edit a contact                       | correct/update a a contact                                         |","lastModifiedDate":"2022-03-08"},{"lineNumber":278,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | view all contacts                    | view all my current contacts                                       |","lastModifiedDate":"2022-03-08"},{"lineNumber":279,"author":{"gitId":"castryl"},"content":"| `* * *`  | beginner user                              | add a label                          | know which task is for which module                                |","lastModifiedDate":"2022-03-08"},{"lineNumber":280,"author":{"gitId":"castryl"},"content":"| `* * *`  | potential user                             | use simple commands                  | learn the commands easily                                          |","lastModifiedDate":"2022-03-08"},{"lineNumber":281,"author":{"gitId":"castryl"},"content":"| `* * *`  | year 1 computing student                   | keep track of assignment deadlines   | complete the tasks on time                                         |","lastModifiedDate":"2022-03-08"},{"lineNumber":282,"author":{"gitId":"castryl"},"content":"| `*`      | beginner user                              | see a reminder of tasks from the app | know what are my upcoming deadlines                                |","lastModifiedDate":"2022-03-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"castryl"},"content":"(For all use cases below, the **System** is the `NUScheduler` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"castryl"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2022-03-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"castryl"},"content":"1.  User requests to list contacts","lastModifiedDate":"2022-03-08"},{"lineNumber":295,"author":{"gitId":"castryl"},"content":"2.  NUScheduler shows a list of contacts","lastModifiedDate":"2022-03-08"},{"lineNumber":296,"author":{"gitId":"castryl"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2022-03-08"},{"lineNumber":297,"author":{"gitId":"castryl"},"content":"4.  NUScheduler deletes the contact","lastModifiedDate":"2022-03-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"castryl"},"content":"    * 3a1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"castryl"},"content":"**Use case: Add a task**","lastModifiedDate":"2022-03-08"},{"lineNumber":314,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":315,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":316,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":317,"author":{"gitId":"putaojuice"},"content":"1. User add a task with add task command","lastModifiedDate":"2022-03-15"},{"lineNumber":318,"author":{"gitId":"putaojuice"},"content":"2. NUScheduler provide feedback based on the user input.","lastModifiedDate":"2022-03-15"},{"lineNumber":319,"author":{"gitId":"putaojuice"},"content":"3. NUScheduler adds the user\u0027s defined task to the task list","lastModifiedDate":"2022-03-15"},{"lineNumber":320,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":321,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":322,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":323,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":324,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":325,"author":{"gitId":"castryl"},"content":"* 2a. The task description is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":326,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler prompts the user to fill up the description.","lastModifiedDate":"2022-03-08"},{"lineNumber":327,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":328,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":329,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":330,"author":{"gitId":"castryl"},"content":"* 2b. The task deadline has a wrong time format.","lastModifiedDate":"2022-03-08"},{"lineNumber":331,"author":{"gitId":"castryl"},"content":"    * 2b1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":332,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":333,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":334,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":335,"author":{"gitId":"putaojuice"},"content":"* 2c. The task has multiple description prefix (`d/`) or deadline prefix (`t/`).","lastModifiedDate":"2022-03-15"},{"lineNumber":336,"author":{"gitId":"putaojuice"},"content":"    * 2c1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-15"},{"lineNumber":337,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":338,"author":{"gitId":"putaojuice"},"content":"      Use case ends.","lastModifiedDate":"2022-03-15"},{"lineNumber":339,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":340,"author":{"gitId":"castryl"},"content":"**Use case: Delete a task**","lastModifiedDate":"2022-03-08"},{"lineNumber":341,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":342,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":343,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":344,"author":{"gitId":"castryl"},"content":"1. User requests to delete a task with delete task command","lastModifiedDate":"2022-03-08"},{"lineNumber":345,"author":{"gitId":"castryl"},"content":"2. NUScheduler deletes task specified from task list","lastModifiedDate":"2022-03-08"},{"lineNumber":346,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":347,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":348,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":349,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":350,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":351,"author":{"gitId":"castryl"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":352,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":353,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":354,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":355,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":356,"author":{"gitId":"castryl"},"content":"* 2b. The task number to delete is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":357,"author":{"gitId":"castryl"},"content":"    * 2b1. NUScheduler shows an error message.","lastModifiedDate":"2022-03-08"},{"lineNumber":358,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":359,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":360,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":361,"author":{"gitId":"castryl"},"content":"**Use case: View all tasks**","lastModifiedDate":"2022-03-08"},{"lineNumber":362,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":363,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":364,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":365,"author":{"gitId":"castryl"},"content":"1. User requests to view all the tasks with view command","lastModifiedDate":"2022-03-08"},{"lineNumber":366,"author":{"gitId":"castryl"},"content":"2. NUScheduler shows all the tasks from task list","lastModifiedDate":"2022-03-08"},{"lineNumber":367,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":368,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":369,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":370,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":371,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":372,"author":{"gitId":"castryl"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":373,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler shows a message that the task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":374,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":375,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":376,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":377,"author":{"gitId":"castryl"},"content":"**Use case: Find a task**","lastModifiedDate":"2022-03-08"},{"lineNumber":378,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":379,"author":{"gitId":"castryl"},"content":"**MSS**","lastModifiedDate":"2022-03-08"},{"lineNumber":380,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":381,"author":{"gitId":"castryl"},"content":"1. User requests to find tasks with find command","lastModifiedDate":"2022-03-08"},{"lineNumber":382,"author":{"gitId":"castryl"},"content":"2. NUScheduler shows a list of tasks from task list.","lastModifiedDate":"2022-03-08"},{"lineNumber":383,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":384,"author":{"gitId":"castryl"},"content":"   Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":385,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":386,"author":{"gitId":"castryl"},"content":"**Extensions**","lastModifiedDate":"2022-03-08"},{"lineNumber":387,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":388,"author":{"gitId":"castryl"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":389,"author":{"gitId":"castryl"},"content":"    * 2a1. NUScheduler shows a message that the task list is empty.","lastModifiedDate":"2022-03-08"},{"lineNumber":390,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":391,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":392,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":393,"author":{"gitId":"castryl"},"content":"* 2b. No task matches.","lastModifiedDate":"2022-03-08"},{"lineNumber":394,"author":{"gitId":"castryl"},"content":"    * 2b1. NUScheduler shows a message that there are no tasks that matches the description.","lastModifiedDate":"2022-03-08"},{"lineNumber":395,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":396,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":397,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":398,"author":{"gitId":"castryl"},"content":"* 2c. Tasks found.","lastModifiedDate":"2022-03-08"},{"lineNumber":399,"author":{"gitId":"castryl"},"content":"    * 2c1. NUScheduler shows all the tasks that matches with the keyword.","lastModifiedDate":"2022-03-08"},{"lineNumber":400,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":401,"author":{"gitId":"castryl"},"content":"      Use case ends.","lastModifiedDate":"2022-03-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"castryl"},"content":"4. The command used should be simple to learn.","lastModifiedDate":"2022-03-08"},{"lineNumber":409,"author":{"gitId":"castryl"},"content":"5. The system should be usable by a novice who has never used the system before. ","lastModifiedDate":"2022-03-08"},{"lineNumber":410,"author":{"gitId":"castryl"},"content":"6. The system should be backward compatible with data produced by earlier versions of the system.","lastModifiedDate":"2022-03-08"},{"lineNumber":411,"author":{"gitId":"castryl"},"content":"7. Each command should not take more than 2 second to complete and display the result.","lastModifiedDate":"2022-03-08"},{"lineNumber":412,"author":{"gitId":"castryl"},"content":"8. Texts in the UI should wrap around.","lastModifiedDate":"2022-03-08"},{"lineNumber":413,"author":{"gitId":"castryl"},"content":"9. The project is expected to adhere to a schedule that delivers a feature set every milestone.","lastModifiedDate":"2022-03-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"castryl"},"content":"* **Task**: A task with descriptions and/or deadline","lastModifiedDate":"2022-03-08"},{"lineNumber":422,"author":{"gitId":"castryl"},"content":"* **Task list**: A task list of all the tasks","lastModifiedDate":"2022-03-08"},{"lineNumber":423,"author":{"gitId":"putaojuice"},"content":"* **Prefix**: A header (eg `d/`, `t/`) that is used to identify different clauses in user inputs.","lastModifiedDate":"2022-03-15"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"putaojuice":9,"castryl":111,"-":356}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"#User Guide - NUScheduler","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts, ","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"- Quick Start","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"- Features","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"    - Task Management","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"        - Add task","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"        - Delete task","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"        - Update task","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"        - Add a label to a task","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"        - View all tasks and their deadlines","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    - Contact Management","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"        - Add contact","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"        - Delete contact","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"        - Update contact","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"        - View all contacts","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    - Reminder","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"        - Remind the user of upcoming tasks","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    - Exit the app","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"- FAQ","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"- CLI Summary","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"2. Download the latest `NUScheduler.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"   1. `view c` : Lists all contacts.","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"   2. `add c` /John Doe /[johnd@example.com](mailto:johnd@example.com) /johntele: Adds a contact named John Doe to the Address Book.","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"   3. `add tn/Assignment 1 m/CS1101s` : Adds an `assignment/task` of the specified module to NUScheduler.","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"   4. `del c 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"   5. `delt 3` : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"   6. `upd t 3 n/Assignment 2 m/CS1231s` : Updates the specified task in the current list.","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"   7. `exit` : Exits the app.","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"## Features","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"**Notes about the command format:**","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"- Words in **UPPER_CASE** are the parameters to be supplied by the user.e.g. in `add t n /NAME`, **NAME** is a parameter ","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"- which can be used as `add t n /John Doe`.","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"- Items in **square brackets** are optional.e.g `/NAME [/TAG]` can be used as `/John Doe /friend` or as `/John Doe`.","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"- Parameters cannot be in any order and must follow the order given in the command format.e.g. if the command format ","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"- specifies `add t /DESCRIPTION /DEADLINE [/TAG]`, the details must be entered as `/DESCRIPTION /DEADLINE [/TAG]`.","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"- All `\u003cinteger\u003e` fields must be \u003e 0","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"### Feature - Add a task: `addt`","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"Adds a task to the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"Format: `addt d/DESCRIPTION [t/DEADLINE]`","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"Example: `addt d/Buy groceries [t/2022 02 22 5pm]`","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"### Feature - Delete a task: `delt \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"Deletes a task from the task list, where `\u003cinteger\u003e` is the ID of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"Format: `delt \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"Example: `delt 3`","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"### Feature - Update a task description: `upd t d \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"Updates a task in the task list, where `\u003cinteger\u003e` is the ID of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"Format: `upd t d \u003cinteger\u003e  /DESCRIPTION`","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"putaojuice"},"content":"Example: `upd t d 3 /Buy groceries`","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"### Feature - Update a task deadline: `upd t t \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"Updates a task in the task list, where `\u003cinteger\u003e` is the ID of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"Format: `upd t t \u003cinteger\u003e /DEADLINE`","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"Example: `upd t t \u003cinteger\u003e /2022 03 10 12pm`","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"putaojuice"},"content":"### Feature - Label a task: `lab t \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"putaojuice"},"content":"Label a task based on a specific tag, where `\u003cinteger\u003e` is the ID of the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"putaojuice"},"content":"Format: `label t \u003cinteger\u003e tag`","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"putaojuice"},"content":"Example: `label t 3 important`","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"putaojuice"},"content":"### Feature - View all tasks: `view t`","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"putaojuice"},"content":"View all the tasks currently in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"putaojuice"},"content":"Format: `view t`","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"putaojuice"},"content":"### Feature - Add contact: `add c`","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"putaojuice"},"content":"Adds a person to address book.","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"putaojuice"},"content":"Format: `add c /NAME /EMAIL /TELEGRAM [/TAG]`","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"putaojuice"},"content":"The Telegram handle can be entered with or without an @ symbol in front.","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"putaojuice"},"content":"- `add c /John Doe /johnd@example.com /johndtele /Group Member`","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"putaojuice"},"content":"- `add c /Betsy Crow /betsycrow@example.com /betsyc`","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"putaojuice"},"content":"### Feature - Delete contact: `del c \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"putaojuice"},"content":"Deletes a contact from the contact list.","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"putaojuice"},"content":"Format: `del c \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"putaojuice"},"content":"Example: `del c 3`","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"putaojuice"},"content":"### Feature - Update contact: `upd c \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"putaojuice"},"content":"Updates a contact from the contact list.","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"putaojuice"},"content":"Format:  `upd c /NAME /EMAIL /TELEGRAM [/TAG] \u003cinteger\u003e`","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"putaojuice"},"content":"Update a contact’s information, where `\u003cinteger\u003e` is the contact’s unique identifier.","lastModifiedDate":"2022-02-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"putaojuice"},"content":"Example: `upd c /John Doe  /johndoe@example.com /johntele 23`","lastModifiedDate":"2022-02-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"putaojuice"},"content":"### Feature - View all contacts: `view c`","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"putaojuice"},"content":"View all the contacts currently in the contact list.","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"putaojuice"},"content":"Format: `view c [to] [t] [/TAG]`","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"putaojuice"},"content":"The optional parameter `[to]` will return the contact list in tag order instead of the default alphabetical order.","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"putaojuice"},"content":"The optional parameter `[t]` requires a tag input and will return contacts from that tag only.","lastModifiedDate":"2022-02-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"putaojuice"},"content":"Examples:","lastModifiedDate":"2022-02-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"putaojuice"},"content":"- `view c`","lastModifiedDate":"2022-02-27"},{"lineNumber":163,"author":{"gitId":"putaojuice"},"content":"- `view c to`","lastModifiedDate":"2022-02-27"},{"lineNumber":164,"author":{"gitId":"putaojuice"},"content":"- `view c t /Friends`","lastModifiedDate":"2022-02-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"putaojuice"},"content":"### Feature - Remind the user of upcoming tasks: `remind`","lastModifiedDate":"2022-02-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"putaojuice"},"content":"Reminds the user of all the tasks with upcoming deadlines (within 7 days by default).","lastModifiedDate":"2022-02-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":170,"author":{"gitId":"putaojuice"},"content":"Format: `remind [\u003cinteger\u003e]`","lastModifiedDate":"2022-02-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"putaojuice"},"content":"The optional `[\u003cinteger\u003e]` specifies the number of days to check tasks against and return.","lastModifiedDate":"2022-02-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":174,"author":{"gitId":"putaojuice"},"content":"Tasks are returned in ascending order of time to deadline (closest deadline first).","lastModifiedDate":"2022-02-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"putaojuice"},"content":"Example: `remind 10`","lastModifiedDate":"2022-02-27"},{"lineNumber":177,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":178,"author":{"gitId":"putaojuice"},"content":"### Feature - Exit the app: `exit`","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":180,"author":{"gitId":"putaojuice"},"content":"Exits the app.","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"putaojuice"},"content":"Format: exit","lastModifiedDate":"2022-02-27"},{"lineNumber":183,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":184,"author":{"gitId":"putaojuice"},"content":"### Feature - Saving the data","lastModifiedDate":"2022-02-27"},{"lineNumber":185,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":186,"author":{"gitId":"putaojuice"},"content":"NUScheduler data is saved in the hard disk automatically after any command that changes the data. There is no manual save function.","lastModifiedDate":"2022-02-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"putaojuice"},"content":"**Q**: How do I transfer my data to another Computer?","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"putaojuice"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the ","lastModifiedDate":"2022-02-27"},{"lineNumber":195,"author":{"gitId":"putaojuice"},"content":"data of your previous NUScheduler home folder.","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"putaojuice"},"content":"**addt** | `addt d/DESCRIPTION [t/DEADLINE]` \u003cbr\u003e e.g., `addt d/Buy groceries [t/2022 02 22 5pm]`","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"putaojuice"},"content":"**delt \u003cinteger\u003e** | `del t \u003cinteger\u003e` \u003cbr\u003e e.g., `del t 3`","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"putaojuice"},"content":"**upd t d \u003cinteger\u003e** | `upd t d \u003cinteger\u003e  /DESCRIPTION`\u003cbr\u003e e.g., `upd t d 3 /Buy groceries`","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"putaojuice"},"content":"**upd t t \u003cinteger\u003e** | `upd t t \u003cinteger\u003e /DEADLINE`\u003cbr\u003e e.g.,`upd t t \u003cinteger\u003e /2022 03 10 12pm`","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"putaojuice"},"content":"**lab t \u003cinteger\u003e** | `label t \u003cinteger\u003e tag` \u003cbr\u003e e.g., `label t 3 important`","lastModifiedDate":"2022-02-27"},{"lineNumber":208,"author":{"gitId":"putaojuice"},"content":"**view t** | `view t` ","lastModifiedDate":"2022-02-27"},{"lineNumber":209,"author":{"gitId":"putaojuice"},"content":"**add c** | `add c /NAME /EMAIL /TELEGRAM [/TAG]` \u003cbr\u003e e.g., `add c /Betsy Crow /betsycrow@example.com /betsyc /Group Member`","lastModifiedDate":"2022-02-27"},{"lineNumber":210,"author":{"gitId":"putaojuice"},"content":"**del c \u003cinteger\u003e** | `del c \u003cinteger\u003e` \u003cbr\u003e e.g., `del c 3`","lastModifiedDate":"2022-02-27"},{"lineNumber":211,"author":{"gitId":"putaojuice"},"content":"**upd c \u003cinteger\u003e** | `upd c /NAME /EMAIL /TELEGRAM [/TAG] \u003cinteger\u003e` \u003cbr\u003e e.g., `upd c /John Doe  /johndoe@example.com /johntele 23`","lastModifiedDate":"2022-02-27"},{"lineNumber":212,"author":{"gitId":"putaojuice"},"content":"**view c** | `view c [to] [t] [/TAG]` \u003cbr\u003e e.g., `view c`","lastModifiedDate":"2022-02-27"},{"lineNumber":213,"author":{"gitId":"putaojuice"},"content":"**remind** | `remind [\u003cinteger\u003e]` \u003cbr\u003e e.g., `remind 10`","lastModifiedDate":"2022-02-27"},{"lineNumber":214,"author":{"gitId":"putaojuice"},"content":"**exit** | `exit`","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"putaojuice":128,"-":86}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-4/tp/branch/master/graph/badge.svg?token\u003dG5ITTT4UTJ)](https://codecov.io/gh/AY2122S2-CS2103-F11-4/tp)","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"putaojuice":1,"-":17}},{"path":"docs/team/castryl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"castryl"},"content":"---","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"castryl"},"content":"layout: page","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"castryl"},"content":"title: Ian\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"castryl"},"content":"---","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"castryl"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"castryl"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"castryl"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"castryl"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"castryl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"castryl"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"castryl"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"castryl"},"content":"* **Code contributed**: [RepoSense link (to be added soon)]()","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"castryl"},"content":"* **Project management**:","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"castryl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"castryl"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"castryl"},"content":"    * User Guide:","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"castryl"},"content":"        * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"castryl"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"castryl"},"content":"        * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"castryl"},"content":"* **Community**:","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"castryl"},"content":"* **Tools**:","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"castryl"},"content":"    * to be added soon","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"castryl"},"content":"","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"castryl":38}},{"path":"docs/team/ivorcmx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"Ivor Chua\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"* **New Feature**: TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"* **New Feature**: TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"* **Code contributed**: [RepoSense link]() TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"* **Project management**:","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"    * TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"    * TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"    * User Guide:","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"        * TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"        * TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"* **Community**:","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"    * TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"* **Tools**:","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"    * TBA","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"    ","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"ivorcmx":33}},{"path":"docs/team/putaojuice.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"title: Chen Yu An\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts,","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"* **New Feature**: Implemented `AddTask` command.","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"    * What it does: Allow the user to add a task to the application with description and deadline (optional)","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    * Justification: Our target audience is year 1 computing students. It helps them to keep track of their assignments","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"  and any other daily tasks.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"    * **Classes created**:","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"      * `AddTaskCommand`","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"      * `AddTaskCommandParser`","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"      * `TaskList`","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"      * `Task`","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    * **Tests written**:","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"      * `AddTaskCommandTest`","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    * **Additional info**:","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"      * `Task` and `TaskList` classes are created to capture the information of tasks and store them as an `ArrayList` in","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"      `ModelManager`.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"* **Code contributed**: [RepoSense link (to be added soon)]()","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    * Managed release `v1.1`, `v1.2`.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    * Organised weekly project meeting and set up weekly milestone.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"    * Reviewed pull requests.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"    * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"        * Added documentation for the feature `AddTask`.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"        * Added various non-functional requirement in the developer guide.","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"        * Contribute to glossary in the developer guide.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        * Added MSS for `AddTask`.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"* **Community**:","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"    * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"* **Tools**:","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"    * to be added soon","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"putaojuice":51}},{"path":"docs/team/yumengtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"title: Tan Yu Meng\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"### Project: NUScheduler","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"NUScheduler is a desktop app for Year 1 Computing students to assist with more efficient management of tasks and contacts, ","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"If you can type fast, NUScheduler can schedule your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"* **New Feature**: ","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"* **Code contributed**: [RepoSense link (to be added soon)]()","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"        * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"        * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"    * to be added soon","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"yumengtan":38}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DEADLINE;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":" * Add a task to the system.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    public static final String COMMAND_WORD \u003d \"addt\";","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"            + \": Add a task with description and/or deadline. \\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"            + \"Format: addt d/[DESCRIPTION] t/[DEADLINE]\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_ADD_TASK_DESCRIPTION","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"            + \"Swimming lesson \" + PREFIX_ADD_TASK_DEADLINE + \"03/05/2022\";","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Task added.\\n\" + \"Description: %1$s\\n\" + \"Deadline: %2$s\";","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"    public static final String MESSAGE_NO_DESCRIPTION \u003d \"Task description not found!\";","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    private final String description;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"    private final String deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"     * Initializes a AddTaskCommand with the given description. The deadline is not set.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"    public AddTaskCommand(String description) {","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"        requireAllNonNull(description);","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"        this.deadline \u003d \"No deadline set\";","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"     * Initializes a AddTaskCommand with the given description and deadline.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"    public AddTaskCommand(String description, String deadline) {","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        requireAllNonNull(description, deadline);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"        if (this.description.equals(\"\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"            // missing description, prompt the user with the format","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"            throw new CommandException(MESSAGE_NO_DESCRIPTION + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"        model.addTask(new Task(description, deadline));","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"        // Printing out the current items in task list to make sure the method work, should be removed later on","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"        System.out.println(model.getTaskList().getTaskList().toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS, description, deadline));","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"        if (!(other instanceof AddTaskCommand)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"        // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"        AddTaskCommand e \u003d (AddTaskCommand) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"        return description.equals(e.description);","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":83}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":" * Delete a task from the system","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"    public static final String COMMAND_WORD \u003d \"delt\";","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"            + \": Delete a task number from current tasklist using given index. \\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"            + \"Format: delt [tasknumber]. \\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"1\";","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Task %1$s deleted\";","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_NO_INDEX \u003d \"Task number not found!\";","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"Task number does not exist in current task list!\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    private final Integer taskNumber;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"     * Initializes a DeleteTaskCommand with the given taskNumber","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"     * @param taskNumber index to be deleted","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"    public DeleteTaskCommand(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"        requireAllNonNull(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"        if (this.taskNumber.equals(\"\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"            // missing taskNumber, prompt the user with the format","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"            throw new CommandException(MESSAGE_NO_INDEX + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"        } else if (this.taskNumber \u003c\u003d 0 || this.taskNumber \u003e model.getTaskList().size()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"            throw new CommandException(MESSAGE_INDEX_OUT_OF_BOUNDS + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"        model.deleteTask(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"        // Printing out current items in list to ensure item is deleted","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"        System.out.println(model.getTaskList().size());","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"        return new CommandResult(String.format(MESSAGE_ARGUMENTS, taskNumber));","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"            return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"        if (!(other instanceof DeleteTaskCommand)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"        //state check","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"        DeleteTaskCommand e \u003d (DeleteTaskCommand) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"        return taskNumber.equals(e.taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"ivorcmx":75}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":" * finds a task to the system based on user input.","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"    public static final String COMMAND_WORD \u003d \"findt\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"            + \": finds a task based on keywords. \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"            + \"Format: findt [INPUT] \\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + \"Swimming lessons\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Here are the matching tasks in the list:\\n\" + \"%1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_NO_DESCRIPTION \u003d \"Unable to find any matching tasks due to empty keyword!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"    public static final String MESSAGE_NO_MATCHING_TASK \u003d \"Unable to find any matching tasks based on input!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    private final String input;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"     * Initializes a FindTaskCommand with the given input.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"    public FindTaskCommand(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(input);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"        if (this.input.equals(\"\")) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"            throw new CommandException(MESSAGE_NO_DESCRIPTION + \"\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"            String orderedList \u003d model.findTask(input);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"            if (orderedList.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"                throw new CommandException(MESSAGE_NO_MATCHING_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"            return new CommandResult(String.format(MESSAGE_ARGUMENTS, orderedList));","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"            throw new CommandException(MESSAGE_NO_MATCHING_TASK);","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"        if (!(other instanceof FindTaskCommand)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"yumengtan"},"content":"        //state check","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"yumengtan"},"content":"        FindTaskCommand e \u003d (FindTaskCommand) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"yumengtan"},"content":"        return input.equals(e.input);","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yumengtan":73}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DEADLINE;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TASK_DESCRIPTION;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":" * Parses input arguments and creates a new {@code AddTaskCommand} object","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddTaskCommand}","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"     * and returns a {@code AddTaskCommand} object for execution.","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_TASK_DESCRIPTION,","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"                PREFIX_ADD_TASK_DEADLINE);","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"            List\u003cString\u003e description \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DESCRIPTION);","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"            List\u003cString\u003e deadline \u003d argMultimap.getAllValues(PREFIX_ADD_TASK_DEADLINE);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"            if (description.size() \u003e 1 || deadline.size() \u003e 1) {","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"                // more than 1 \"d/\" or \"t/\" prefix were used, meaning that it is wrong format","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"        //TODO try-catch block for deadline input has to be formatted","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"        String description \u003d argMultimap.getValue(PREFIX_ADD_TASK_DESCRIPTION).orElse(\"\");","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"        String deadline \u003d argMultimap.getValue(PREFIX_ADD_TASK_DEADLINE).orElse(\"\");","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"        if (deadline.equals(\"\")) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"            // task without deadline set","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"            return new AddTaskCommand(description);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"        } else {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"            // task with deadline set","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"            return new AddTaskCommand(description, deadline);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":52}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"yumengtan"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"yumengtan"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"putaojuice":4,"ivorcmx":4,"yumengtan":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    public static final Prefix PREFIX_ADD_TASK_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    public static final Prefix PREFIX_ADD_TASK_DEADLINE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"putaojuice":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"            Integer taskNumber \u003d ParserUtil.parseNumber(args);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"            return new DeleteTaskCommand(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"ivorcmx":31}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"     * Parses the given {@code String} of argument in the context of the FindTaskCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"        return new FindTaskCommand(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yumengtan":20}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not valid.\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    public static final String MESSAGE_INVALID_FIRSTCHAR \u003d \"Index starts with empty whitespace\";","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"ivorcmx"},"content":"     * Parses {@code oneBasedIndex} into an Integer and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"ivorcmx"},"content":"     * trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"ivorcmx"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"ivorcmx"},"content":"    public static Integer parseNumber(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"ivorcmx"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"ivorcmx"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"ivorcmx"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"ivorcmx"},"content":"        return Integer.parseInt(trimmedIndex);","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ivorcmx":16,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"    TaskList getTaskList();","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"ivorcmx"},"content":"    void deleteTask(Integer taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"yumengtan"},"content":"     * finds tasks based on keyword.","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"yumengtan"},"content":"     * filters task list based on matching keyword {@code input}.","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"yumengtan"},"content":"    String findTask(String input);","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"putaojuice":5,"ivorcmx":2,"yumengtan":6,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"putaojuice"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"putaojuice"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"putaojuice"},"content":"        taskList.addTask(task);","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"putaojuice"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":164,"author":{"gitId":"putaojuice"},"content":"        return this.taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"ivorcmx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Delete Task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"ivorcmx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"ivorcmx"},"content":"    public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"ivorcmx"},"content":"        taskList.deleteTask(taskNumber);","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"yumengtan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Find Task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"yumengtan"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"yumengtan"},"content":"    public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"yumengtan"},"content":"        return taskList.findTask(input);","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"putaojuice":16,"ivorcmx":7,"yumengtan":7,"-":150}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"public class TaskList {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"    public TaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"        this.taskList.add(task);","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"        return this.taskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"    public int size() {","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"    public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"        taskList.remove(taskNumber - 1); // to convert to zero-based indexing","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"     * Returns an ArrayList of matching tasks based on keyword.","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"     * @param input the keyword input by user","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"     * @return the list of ordered tasks that contain the keyword","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"    public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"            Task curr \u003d this.taskList.get(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"            if (curr.toString().matches(\"(?i).*\" + input + \".*\")) { //bypass case sensitivity with regex","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"                matchingTasks.add(curr);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"        String orderedList \u003d getOutput(matchingTasks);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"        return orderedList;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"     * Provides an ordered list of tasks that contains keyword.","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"     * @param list - the list of tasks that matches keyword","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"     * @return String of ordered list of tasks.","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"    private String getOutput(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"            int order \u003d i + 1;","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"            if (i \u003d\u003d list.size() - 1) {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"                sb.append(order).append(\". \").append(list.get(i).toString());","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"            } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"                sb.append(order).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"yumengtan"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"putaojuice":21,"ivorcmx":8,"yumengtan":39}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"public class Task {","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"    private final String description;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"    private final String deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"     * Initializes a Task with a description and deadline.","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"    public Task(String description, String deadline) {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"        return \"Task: \" + this.description + \" \" + deadline;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":19}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"putaojuice"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":158,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":159,"author":{"gitId":"putaojuice"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":161,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":162,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"ivorcmx"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\"); }","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"putaojuice":12,"ivorcmx":5,"yumengtan":4,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"putaojuice"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"putaojuice"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"putaojuice"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"putaojuice"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"putaojuice"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"putaojuice"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"putaojuice"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"putaojuice"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"putaojuice"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"putaojuice"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"putaojuice"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"putaojuice"},"content":"    public void constructor_nullDescriptionAndDeadline_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"putaojuice"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, null));","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"putaojuice"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"putaojuice"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"putaojuice"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"putaojuice"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"putaojuice"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"putaojuice"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"putaojuice"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"putaojuice"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"putaojuice"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"putaojuice"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"putaojuice"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"putaojuice"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"putaojuice"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"putaojuice"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"putaojuice"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"putaojuice"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"putaojuice"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"putaojuice"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"putaojuice"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"putaojuice"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"putaojuice"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"putaojuice"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"putaojuice"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"ivorcmx"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\"); }","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"putaojuice"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"putaojuice"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"putaojuice":115,"ivorcmx":5,"yumengtan":5}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ivorcmx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"ivorcmx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"ivorcmx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"ivorcmx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"ivorcmx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"ivorcmx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"ivorcmx"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"ivorcmx"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"ivorcmx"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"ivorcmx"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"ivorcmx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"ivorcmx"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"ivorcmx"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"ivorcmx"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"ivorcmx"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"ivorcmx"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"ivorcmx"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"ivorcmx"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"ivorcmx"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"ivorcmx"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"ivorcmx"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"ivorcmx"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"ivorcmx"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"ivorcmx"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"ivorcmx"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"ivorcmx"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"ivorcmx"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"ivorcmx"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"ivorcmx"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"ivorcmx"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"ivorcmx"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"ivorcmx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"ivorcmx"},"content":"        @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"ivorcmx"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"ivorcmx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"ivorcmx"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\"); }","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"ivorcmx"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"ivorcmx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"ivorcmx":114,"yumengtan":4}},{"path":"src/test/java/seedu/address/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yumengtan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"yumengtan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"yumengtan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"yumengtan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"yumengtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"yumengtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"yumengtan"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"yumengtan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"yumengtan"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"yumengtan"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"yumengtan"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"yumengtan"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"yumengtan"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"yumengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"yumengtan"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"yumengtan"},"content":"    public void constructor_nullDescriptionAndDeadline_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"yumengtan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null, null));","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"yumengtan"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"yumengtan"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"yumengtan"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"yumengtan"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"yumengtan"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"yumengtan"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"yumengtan"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"yumengtan"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"yumengtan"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"yumengtan"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"yumengtan"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"yumengtan"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"yumengtan"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"yumengtan"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"yumengtan"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"yumengtan"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"yumengtan"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"yumengtan"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"yumengtan"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"yumengtan"},"content":"        public void deleteTask(Integer taskNumber) {","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"yumengtan"},"content":"        public TaskList getTaskList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"yumengtan"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"yumengtan"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"yumengtan"},"content":"        public String findTask(String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"yumengtan"},"content":"            throw new AssertionError(\"This method should not be called.\"); }","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"yumengtan"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"yumengtan"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"yumengtan"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"yumengtan":128}}]
