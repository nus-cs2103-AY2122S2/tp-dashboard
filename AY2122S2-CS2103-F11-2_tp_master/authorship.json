[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"## TAlent Assistant™","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"[![pages-build-deployment](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/pages/pages-build-deployment)","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S2-CS2103-F11-2/tp)","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"* This is a brown field **curriculum based project by Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"* The project delivers a desktop application (called _TAlent Assistant™_) used by professors to schedule interviews and","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"  keep track of applications for teaching assistants.","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base.","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"* It is named `TAlent Assistant™`  because it is created with the aim of helping professors streamline their search for","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"  Teaching Assistants for their specific module needs.","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"## Acknowledge of Code Source","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"charmainehly":12,"domlimm":3,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"    archiveName \u003d \u0027talentassistant.jar\u0027","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"domlimm":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"You can reach us at the email `(placeholder for email address)`","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"### Charmaine Ho","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"\u003cimg src\u003d\"images/charmainehly.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"[[github](http://github.com/charmainehly)] ","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"[[portfolio](team/charmainehly.md)]","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"* Role: Developer","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"* Responsibilities: Scheduling \u0026 Tracking, Testing","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"### Dominic Lim","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"\u003cimg src\u003d\"images/domlimm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"[[github](http://github.com/domlimm)]","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"[[portfolio](team/domlimm.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"* Role: Developer","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"* Responsibilities: Integration, Testing","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"### Ho Lanzan","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"\u003cimg src\u003d\"images/lzan98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"[[github](https://github.com/lzan98)]","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"[[portfolio](team/lzan98.md)]","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"### Lee En En","lastModifiedDate":"2022-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"\u003cimg src\u003d\"images/leeenen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"[[github](http://github.com/leeenen)]","lastModifiedDate":"2022-02-26"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"[[portfolio](team/leeenen.md)]","lastModifiedDate":"2022-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"### Tiew Wei Jian","lastModifiedDate":"2022-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"\u003cimg src\u003d\"images/tiewweijian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"[[github](http://github.com/tiewweijian)]","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"tiewweijian"},"content":"[[portfolio](team/tiewweijian.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"* Responsibilities: Code Quality, UI","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"charmainehly":1,"domlimm":16,"tiewweijian":6,"LeeEnEn":5,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `CandidateListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"* depends on some classes in the `Model` component, as it displays `Candidate` object residing in the `Model`.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"domlimm"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a candidate).","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"charmainehly"},"content":"* stores the address book data i.e., all `Candidate` objects (which are contained in a `UniqueCandidateList` object).","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"charmainehly"},"content":"* stores the currently \u0027selected\u0027 `Candidate` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cCandidate\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"charmainehly"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Candidate` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Candidate` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"domlimm"},"content":"### Candidate model","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"domlimm"},"content":"#### Previous Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"domlimm"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"domlimm"},"content":"#### Current Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"charmainehly"},"content":"To suit the direction of where TAlent Assistant™ is headed to, the previous `Candidate` model has been refactored. Some new entities have been introduced to the new `Candidate` model.","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"domlimm"},"content":"List of new entities:","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"domlimm"},"content":"1. `StudentId`","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"domlimm"},"content":"2. `Course`","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"domlimm"},"content":"3. `Seniority`","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"domlimm"},"content":"4. `ApplicationStatus`","lastModifiedDate":"2022-03-24"},{"lineNumber":172,"author":{"gitId":"domlimm"},"content":"5. `InterviewStatus`","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"domlimm"},"content":"6. `Availability`","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":175,"author":{"gitId":"domlimm"},"content":"\u003cimg src\u003d\"images/CandidateModelClassDiagram.png\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":176,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"charmainehly"},"content":"### Find feature","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"charmainehly"},"content":"#### What is the feature about?","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"lzan98"},"content":"The `find` mechanism is facilitated by `AddressBook`. The `find` command in `TAlent Assistant™`","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"charmainehly"},"content":"has been enhanced based on the initial implementation of the `find` command in `AddressBook`.","lastModifiedDate":"2022-03-24"},{"lineNumber":182,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":183,"author":{"gitId":"charmainehly"},"content":"The enhancement works by adding a new prefix in the `CliSyntax` class `k/`, which allows the","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"charmainehly"},"content":"user to separate multiple keywords. and `f/` which allows the user to specify which field the","lastModifiedDate":"2022-03-24"},{"lineNumber":185,"author":{"gitId":"charmainehly"},"content":"`find` command should search for keywords under.","lastModifiedDate":"2022-03-24"},{"lineNumber":186,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":187,"author":{"gitId":"charmainehly"},"content":"#### How is the feature implemented?","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"charmainehly"},"content":"The main logic for `find` command is still implemented within `FindCommand` (which extends from `Command`) and","lastModifiedDate":"2022-03-24"},{"lineNumber":189,"author":{"gitId":"charmainehly"},"content":"`FindCommandParser`.","lastModifiedDate":"2022-03-24"},{"lineNumber":190,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"charmainehly"},"content":"The `FindCommandParser` class has been extended to include a switch-case block to validate","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"charmainehly"},"content":"which field the user is trying to search across:","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"charmainehly"},"content":"1. `studentId`","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"charmainehly"},"content":"2. `course`","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"charmainehly"},"content":"3. `seniority`","lastModifiedDate":"2022-03-24"},{"lineNumber":196,"author":{"gitId":"charmainehly"},"content":"4. `name`","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"charmainehly"},"content":"5. `email`","lastModifiedDate":"2022-03-24"},{"lineNumber":198,"author":{"gitId":"charmainehly"},"content":"6. `phone`","lastModifiedDate":"2022-03-24"},{"lineNumber":199,"author":{"gitId":"charmainehly"},"content":"7. `applicationStatus` (WIP)","lastModifiedDate":"2022-03-24"},{"lineNumber":200,"author":{"gitId":"charmainehly"},"content":"8. `interviewStatus` (WIP)","lastModifiedDate":"2022-03-24"},{"lineNumber":201,"author":{"gitId":"charmainehly"},"content":"9. `availability` (WIP)","lastModifiedDate":"2022-03-24"},{"lineNumber":202,"author":{"gitId":"charmainehly"},"content":"10. `candidate` (i.e. search across all fields)","lastModifiedDate":"2022-03-24"},{"lineNumber":203,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":204,"author":{"gitId":"charmainehly"},"content":"Based on the field validated by the switch-case block, a `new findCommand(new ContainsKeywordsPredicate(keywords))`","lastModifiedDate":"2022-03-24"},{"lineNumber":205,"author":{"gitId":"charmainehly"},"content":"will be created. The implementation of the original `NameContainsKeywordsPredicate` has been enhanced here.","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"charmainehly"},"content":"There is now a `ContainsKeywordsPredicate` parent abstract class extended by each of the above listed fields as subclasses","lastModifiedDate":"2022-03-24"},{"lineNumber":207,"author":{"gitId":"charmainehly"},"content":"(e.g. `StudentIdContainsKeywordsPredicate extends ContainsKeywordsPredicate`).","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":209,"author":{"gitId":"charmainehly"},"content":"#### Why is the feature implemented as such?","lastModifiedDate":"2022-03-24"},{"lineNumber":210,"author":{"gitId":"charmainehly"},"content":"**1. Switch-case block in `FindCommandParser`** \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":211,"author":{"gitId":"charmainehly"},"content":"Other alternatives considered included creating a separate class to execute the logic of checking for which field the","lastModifiedDate":"2022-03-24"},{"lineNumber":212,"author":{"gitId":"charmainehly"},"content":"user had entered and return the new `ContainsKeywordsPredicate` subclass *or* to utilise `if`-`else` statements.","lastModifiedDate":"2022-03-24"},{"lineNumber":213,"author":{"gitId":"charmainehly"},"content":"In the end, the implementation was done using the switch-case block within the `FindCommandParser` class, as the","lastModifiedDate":"2022-03-24"},{"lineNumber":214,"author":{"gitId":"charmainehly"},"content":"class should contain all the necessary logic to parse in the user\u0027s input. The syntax for the switch-case block was","lastModifiedDate":"2022-03-24"},{"lineNumber":215,"author":{"gitId":"charmainehly"},"content":"also more efficient than `if`-`else` statements and was more relevant for this usage.","lastModifiedDate":"2022-03-24"},{"lineNumber":216,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":217,"author":{"gitId":"charmainehly"},"content":"**2. Inheritance of `ContainsKeywordsPredicate` to child classes**","lastModifiedDate":"2022-03-24"},{"lineNumber":218,"author":{"gitId":"charmainehly"},"content":"Other alternatives considered included creating one single `ContainsKeywordsPredicate` class to implement all the","lastModifiedDate":"2022-03-24"},{"lineNumber":219,"author":{"gitId":"charmainehly"},"content":"equality and keyword match checks for each and every field.","lastModifiedDate":"2022-03-24"},{"lineNumber":220,"author":{"gitId":"charmainehly"},"content":"However, this would not meet good design principles - this would make it difficult to isolate and resolve bugs during","lastModifiedDate":"2022-03-24"},{"lineNumber":221,"author":{"gitId":"charmainehly"},"content":"testing and make scalability and maintainability more complicated.","lastModifiedDate":"2022-03-24"},{"lineNumber":222,"author":{"gitId":"charmainehly"},"content":"Further, since all the child classes implement similar logic and methods, it would make sense to create an","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"charmainehly"},"content":"(abstract) parent class. This establishes the SRP principle, such that each subclass is only responsible for","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"charmainehly"},"content":"checks for the specific related entity, and should not have any other reason to change otherwise.","lastModifiedDate":"2022-03-24"},{"lineNumber":225,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"charmainehly"},"content":"#### UML Diagrams","lastModifiedDate":"2022-03-24"},{"lineNumber":227,"author":{"gitId":"charmainehly"},"content":"**Activity Diagram**\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"charmainehly"},"content":"The following activity diagram summarizes what happens when a user executes a `find` command: \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":229,"author":{"gitId":"lzan98"},"content":"\u003cimg src\u003d\"images/FindActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":231,"author":{"gitId":"lzan98"},"content":"### Delete feature","lastModifiedDate":"2022-03-24"},{"lineNumber":232,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":233,"author":{"gitId":"lzan98"},"content":"#### What is the feature about?","lastModifiedDate":"2022-03-24"},{"lineNumber":234,"author":{"gitId":"lzan98"},"content":"The `delete` feature allows the user to delete a Candidate from the system.","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"lzan98"},"content":"This feature has been enhanced based on the initial implementation of the `delete` command in `AddressBook`.","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"lzan98"},"content":"#### How is the feature implemented?","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"lzan98"},"content":"The main logic is implemented within `DeleteCommand` (which extends from `Command`) and `DeleteCommandParser`. ","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"lzan98"},"content":"A minor enhancement was added to `DeleteCommand` such that if the candidate list is empty, a message indicating that ","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"lzan98"},"content":"there are no candidates in the system is shown to the user (instead of invalid index),","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"lzan98"},"content":"improving the accuracy of the feedback.","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":243,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":244,"author":{"gitId":"lzan98"},"content":"#### Why is the feature implemented as such?","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"lzan98"},"content":"**1. Deleting a candidate by `INDEX`** \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"lzan98"},"content":"The team\u0027s original idea was to delete a candidate by its attribute `StudentId` instead of `INDEX`","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"lzan98"},"content":"as every candidate has their own unique `StudentId`. However, upon careful consideration, we realised","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"lzan98"},"content":"that there are two possible problems that could arise from this alternative implementation:","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"lzan98"},"content":"1. App requirements - TAlent Assistant should be faster than GUI","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"lzan98"},"content":"2. Performance - Each time a delete command is executed, the system will be required to iterate through the entire candidate","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"lzan98"},"content":"list to search for the candidate with the matching `StudentId`. ","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"lzan98"},"content":"#### UML Diagrams","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"lzan98"},"content":"**Activity Diagram**\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"lzan98"},"content":"The following activity diagram summarizes what happens when a user executes a `delete` command: \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"lzan98"},"content":"\u003cimg src\u003d\"images/DeleteActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"domlimm"},"content":"### Add feature","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"domlimm"},"content":"#### What is the feature about?","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"domlimm"},"content":"The `add` mechanism is facilitated by `AddressBook`. The implementation of adding a `Candidate` through the `add` command has been enhanced on the existing approach. It extends `Command`. The input parameters of the `add` command has been tweaked slightly, introducing a few more related entities (Refer to [TODO: UPDATE LINK]).","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"domlimm"},"content":"The enhancement works by adding additional prefixes i.e. `id/[StudentId] `c/[Course]`, `yr/[Seniority]`, `avail/[Availability]`. As for the `ApplicationStatus` and `InterviewStatus`, users are not required to enter a value for it as the default value of `PENDING` will be assigned to the entities.","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"domlimm"},"content":"#### How is the feature implemented?","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"domlimm"},"content":"Given below is an example usage scenario and how the `add` mechanism behaves at each step.","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":269,"author":{"gitId":"domlimm"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":271,"author":{"gitId":"domlimm"},"content":":bulb: **Tip:** TAlent Assistant™ comes with preloaded data, user can execute the `clear` command for a fresh state.","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":273,"author":{"gitId":"domlimm"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":274,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":275,"author":{"gitId":"domlimm"},"content":"Step 1. The user launches the application for the first time. The program will be initialised with the preloaded data.","lastModifiedDate":"2022-03-23"},{"lineNumber":276,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":277,"author":{"gitId":"domlimm"},"content":"Step 2. The user proceeds to add a candidate by running the `add` command with its necessary arguments. The image provides an example of this step.","lastModifiedDate":"2022-03-23"},{"lineNumber":278,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":279,"author":{"gitId":"domlimm"},"content":"![AddStep2](images/AddStep2.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":280,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":281,"author":{"gitId":"domlimm"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":282,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":283,"author":{"gitId":"domlimm"},"content":"**:information_source: Tip:** Todo: Update image","lastModifiedDate":"2022-03-23"},{"lineNumber":284,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":285,"author":{"gitId":"domlimm"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":286,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":287,"author":{"gitId":"domlimm"},"content":"#### Why is the feature implemented as such?","lastModifiedDate":"2022-03-24"},{"lineNumber":288,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":289,"author":{"gitId":"domlimm"},"content":"The `add` command is done up with the goals of being as convenient and efficient for users. It is kept simple with easy to interpret and understand prefixes that convey to the user on what is expected from their input. ","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":291,"author":{"gitId":"domlimm"},"content":"#### UML Diagrams","lastModifiedDate":"2022-03-24"},{"lineNumber":292,"author":{"gitId":"domlimm"},"content":"**Activity Diagram**","lastModifiedDate":"2022-03-24"},{"lineNumber":293,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":294,"author":{"gitId":"domlimm"},"content":"The following activity diagram summarizes what happens when a user executes an `add` command:","lastModifiedDate":"2022-03-23"},{"lineNumber":295,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":296,"author":{"gitId":"domlimm"},"content":"\u003cimg src\u003d\"images/AddActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":297,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"domlimm"},"content":"Step 2. The user executes `delete 5` command to delete the 5th candidate in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"domlimm"},"content":"Step 3. The user executes `add n/David …​` to add a new candidate. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-03-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"domlimm"},"content":"Step 4. The user now decides that adding the candidate was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"domlimm"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the candidate being deleted).","lastModifiedDate":"2022-03-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"LeeEnEn"},"content":"### List Feature","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"LeeEnEn"},"content":"### What is this feature about?","lastModifiedDate":"2022-03-24"},{"lineNumber":385,"author":{"gitId":"LeeEnEn"},"content":"The `list` feature allows the user to view all available Candidates in the system through the CLI.","lastModifiedDate":"2022-03-24"},{"lineNumber":386,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":387,"author":{"gitId":"LeeEnEn"},"content":"This feature in TAlent Assistant™ has been enhanced based on the initial implementation of the `list` command in `AddressBook`.","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":389,"author":{"gitId":"LeeEnEn"},"content":"### How is this feature implemented?","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"LeeEnEn"},"content":"The proposed `list` feature is implemented within `ListCommand` (which extends from `Command`) in `AddressBook`.","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"LeeEnEn"},"content":"A minor enhancement was added to this `list` feature to produce another message to indicate that there are no Candidates","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"LeeEnEn"},"content":"in the system.","lastModifiedDate":"2022-03-24"},{"lineNumber":394,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":395,"author":{"gitId":"LeeEnEn"},"content":"### Why is the feature implemented as such?","lastModifiedDate":"2022-03-24"},{"lineNumber":396,"author":{"gitId":"LeeEnEn"},"content":"Instead of the same message being produced in both scenarios, when there are Candidates in the system, or when there are","lastModifiedDate":"2022-03-24"},{"lineNumber":397,"author":{"gitId":"LeeEnEn"},"content":"no Candidates in the system, a new message would allow the user to differentiate between the two. The user would not be","lastModifiedDate":"2022-03-24"},{"lineNumber":398,"author":{"gitId":"LeeEnEn"},"content":"confused in possibly thinking that the TAlent Assistant™ program is unresponsive.","lastModifiedDate":"2022-03-24"},{"lineNumber":399,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":400,"author":{"gitId":"LeeEnEn"},"content":"### UML Diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":401,"author":{"gitId":"LeeEnEn"},"content":"The following activity diagram summarizes what happens when a user executes a `list` command: \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":402,"author":{"gitId":"LeeEnEn"},"content":"\u003cimg src\u003d\"images/ListActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"tiewweijian"},"content":"### Edit Feature","lastModifiedDate":"2022-03-24"},{"lineNumber":405,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":406,"author":{"gitId":"tiewweijian"},"content":"#### What is this feature about? ","lastModifiedDate":"2022-03-24"},{"lineNumber":407,"author":{"gitId":"tiewweijian"},"content":"The `edit` feature allows the user to change the attributes of the Candidate in the system though the CLI.","lastModifiedDate":"2022-03-24"},{"lineNumber":408,"author":{"gitId":"tiewweijian"},"content":"This feature has been enhanced based on the initial implementation of the `edit` command in `AddressBook`.","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"tiewweijian"},"content":"#### How is this feature implemented?","lastModifiedDate":"2022-03-24"},{"lineNumber":411,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"tiewweijian"},"content":"The proposed edit mechanism is facilitated by `EditCommand`. It is supported by `EditCommandParser` where it will retrieve the attributes that can be edited. ","lastModifiedDate":"2022-03-24"},{"lineNumber":413,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"tiewweijian"},"content":"The user is able to edit key attributes of the Candidate, such as ","lastModifiedDate":"2022-03-24"},{"lineNumber":415,"author":{"gitId":"tiewweijian"},"content":"* Phone Number","lastModifiedDate":"2022-03-24"},{"lineNumber":416,"author":{"gitId":"tiewweijian"},"content":"* ApplicationStatus ","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"tiewweijian"},"content":"* InterviewStatus","lastModifiedDate":"2022-03-24"},{"lineNumber":418,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"tiewweijian"},"content":"Based on the fields that are edited by the user, the EditCommandParser will retreive the information, and update the attributes accordingly.","lastModifiedDate":"2022-03-24"},{"lineNumber":420,"author":{"gitId":"tiewweijian"},"content":"There are also some attributes that are dependent on another attribute, and we will introduce `Triggers` to update the attributes automatically.","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"tiewweijian"},"content":"One of such is the `InterviewStatus`. It makes sense that if the application is accepted or rejected, it also means that the interview has been completed.","lastModifiedDate":"2022-03-24"},{"lineNumber":422,"author":{"gitId":"tiewweijian"},"content":"Hence the `ApplicationStatus` will trigger `InterviewStatus` if the user is changing the `ApplicationStatus` from `Pending` to `Accepted` or `Rejected`.","lastModifiedDate":"2022-03-24"},{"lineNumber":423,"author":{"gitId":"tiewweijian"},"content":"The `trigger mechanism` (WIP) is currently handled by `EditCommand#triggerInterviewStatus()`. ","lastModifiedDate":"2022-03-24"},{"lineNumber":424,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":425,"author":{"gitId":"tiewweijian"},"content":"#### Why is the feature implemented as such?","lastModifiedDate":"2022-03-24"},{"lineNumber":426,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":427,"author":{"gitId":"tiewweijian"},"content":"**1. Triggers for `ApplicationStatus` and `InterviewStatus` \u003cbr\u003e ","lastModifiedDate":"2022-03-24"},{"lineNumber":428,"author":{"gitId":"tiewweijian"},"content":"For the `ApplicationStatus` and `InterviewStatus`, we initially thought of allowing the user to manually update individual statuses.","lastModifiedDate":"2022-03-24"},{"lineNumber":429,"author":{"gitId":"tiewweijian"},"content":"(Eg. Updating `ApplicationStatus` to `Accepted` will not trigger `InterviewStatus`).","lastModifiedDate":"2022-03-24"},{"lineNumber":430,"author":{"gitId":"tiewweijian"},"content":"We initially thought that this would be a cleaner way, and to also make sure there is no wrong information in the system. ","lastModifiedDate":"2022-03-24"},{"lineNumber":431,"author":{"gitId":"tiewweijian"},"content":"In the end, we went ahead with the triggers as it would make sense for the user to have all the statuses updated automatically, ","lastModifiedDate":"2022-03-24"},{"lineNumber":432,"author":{"gitId":"tiewweijian"},"content":"and we just need to make more checks in our code. ","lastModifiedDate":"2022-03-24"},{"lineNumber":433,"author":{"gitId":"tiewweijian"},"content":"The downside to this implementation is that the user will not be able to individually allocate the `InterviewStatus`, but we believe this ","lastModifiedDate":"2022-03-24"},{"lineNumber":434,"author":{"gitId":"tiewweijian"},"content":"will not be an use case for any user. ","lastModifiedDate":"2022-03-24"},{"lineNumber":435,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":436,"author":{"gitId":"tiewweijian"},"content":"#### UML Diagram ","lastModifiedDate":"2022-03-24"},{"lineNumber":437,"author":{"gitId":"tiewweijian"},"content":"The following activity diagram summarizes what happens when a user executes a `edit` command for `ApplicationStatus` and `InterviewStatus` \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":438,"author":{"gitId":"tiewweijian"},"content":"\u003cimg src\u003d\"images/StatusActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":439,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":440,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":441,"author":{"gitId":"tiewweijian"},"content":"### Help Window Feature ","lastModifiedDate":"2022-03-24"},{"lineNumber":442,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":443,"author":{"gitId":"tiewweijian"},"content":"#### What is this feature about?","lastModifiedDate":"2022-03-24"},{"lineNumber":444,"author":{"gitId":"tiewweijian"},"content":"The `help` feature allows the user see the available commands on the system. ","lastModifiedDate":"2022-03-24"},{"lineNumber":445,"author":{"gitId":"tiewweijian"},"content":"This feature has been enhanced based on the initial implementation of the `help` command in `AddressBook3`.","lastModifiedDate":"2022-03-24"},{"lineNumber":446,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":447,"author":{"gitId":"tiewweijian"},"content":"#### How is this feature implemented?","lastModifiedDate":"2022-03-24"},{"lineNumber":448,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":449,"author":{"gitId":"tiewweijian"},"content":"The proposed `help` mechanism is facilitated by `HelpWindow`. It is supported by `HelpWindowUtil` where it will help the user open the User Guide on their desktop. ","lastModifiedDate":"2022-03-24"},{"lineNumber":450,"author":{"gitId":"charmainehly"},"content":"We used the existing implementation, and we modified it that the user can view the full user guide on their personal desktop with the click of a button. ","lastModifiedDate":"2022-03-25"},{"lineNumber":451,"author":{"gitId":"tiewweijian"},"content":"For this feature, we used the [Desktop API](https://docs.oracle.com/javase/9/docs/api/java/awt/Desktop.html) from Java 9. ","lastModifiedDate":"2022-03-24"},{"lineNumber":452,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":453,"author":{"gitId":"tiewweijian"},"content":"#### Why is the feature implemented as such?","lastModifiedDate":"2022-03-24"},{"lineNumber":454,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":455,"author":{"gitId":"tiewweijian"},"content":"**1. Why allow user to visit full user guide? \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":456,"author":{"gitId":"tiewweijian"},"content":"We initially proposed to put the full list of commands and tips on the Help Window. However, we think that this does not improve user experience as ","lastModifiedDate":"2022-03-24"},{"lineNumber":457,"author":{"gitId":"tiewweijian"},"content":"there will be too many commands available in the window. Hence we decided that we should streamline the important commands on the `HelpWindow`, and the ","lastModifiedDate":"2022-03-24"},{"lineNumber":458,"author":{"gitId":"tiewweijian"},"content":"other information will be available on the User Guide. ","lastModifiedDate":"2022-03-24"},{"lineNumber":459,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":460,"author":{"gitId":"tiewweijian"},"content":"As the user will not be able to remember the link to our User Guide, we hyperlinked it using the Desktop API that was available from Java.","lastModifiedDate":"2022-03-24"},{"lineNumber":461,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":462,"author":{"gitId":"tiewweijian"},"content":"#### UML Diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":463,"author":{"gitId":"tiewweijian"},"content":"The following activity diagram summarizes what happens when a user executes a `edit` command for `ApplicationStatus` and `InterviewStatus` \u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":464,"author":{"gitId":"tiewweijian"},"content":"\u003cimg src\u003d\"images/HelpWindowActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":466,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"domlimm"},"content":"* Professor from NUS School of Computing","lastModifiedDate":"2022-03-08"},{"lineNumber":485,"author":{"gitId":"lzan98"},"content":"* Needs to manage a significant number of TA applications","lastModifiedDate":"2022-03-03"},{"lineNumber":486,"author":{"gitId":"domlimm"},"content":"* Prefers desktop apps to other platform apps","lastModifiedDate":"2022-03-08"},{"lineNumber":487,"author":{"gitId":"domlimm"},"content":"* Possesses fast typing speed","lastModifiedDate":"2022-03-08"},{"lineNumber":488,"author":{"gitId":"domlimm"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2022-03-08"},{"lineNumber":489,"author":{"gitId":"domlimm"},"content":"* Reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-08"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"domlimm"},"content":"**Value proposition**: TAlent Assistant™ creates a centralized management system for professors to manage TA","lastModifiedDate":"2022-03-08"},{"lineNumber":492,"author":{"gitId":"lzan98"},"content":"applications by providing access to various application data such as qualifications, experience and","lastModifiedDate":"2022-03-03"},{"lineNumber":493,"author":{"gitId":"lzan98"},"content":"interview availability dates.","lastModifiedDate":"2022-03-03"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"| Priority | As a …​  | I want to …​                          | So that I can…​                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"lzan98"},"content":"|----------|----------|---------------------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-17"},{"lineNumber":502,"author":{"gitId":"charmainehly"},"content":"| `* * *`  | user     | add a candidate to the system         | keep track of their application details for consideration.                    |","lastModifiedDate":"2022-03-16"},{"lineNumber":503,"author":{"gitId":"charmainehly"},"content":"| `* * *`  | user     | delete a candidate from the system    | remove entries that I no longer need.                                         |","lastModifiedDate":"2022-03-16"},{"lineNumber":504,"author":{"gitId":"charmainehly"},"content":"| `* * *`  | user     | find a candidate in the system        | access details of the candidate without having to go through the entire list. |","lastModifiedDate":"2022-03-16"},{"lineNumber":505,"author":{"gitId":"charmainehly"},"content":"| `* * *`  | user     | list all candidates in the system     | monitor the application pool.                                                 |","lastModifiedDate":"2022-03-16"},{"lineNumber":506,"author":{"gitId":"lzan98"},"content":"| `*`      | user     | sort candidates                       | reorder candidates based on a specific attribute field.                       |","lastModifiedDate":"2022-03-17"},{"lineNumber":507,"author":{"gitId":"lzan98"},"content":"| `* * *`  | user     | schedule TA candidates for interviews | keep track of the interview schedule.                                         |","lastModifiedDate":"2022-03-17"},{"lineNumber":508,"author":{"gitId":"tiewweijian"},"content":"| `* * *`  | new user | view all available commands           | get familiarised with the system.                                             |","lastModifiedDate":"2022-03-09"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"charmainehly"},"content":"(For all use cases below, the **System** is `TAlent Assistant™ Program` and the **Actor** is the `professor`, unless specified otherwise)","lastModifiedDate":"2022-03-03"},{"lineNumber":515,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":516,"author":{"gitId":"charmainehly"},"content":"\u003e Note: TA - Teaching Assistant","lastModifiedDate":"2022-03-03"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":518,"author":{"gitId":"domlimm"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"charmainehly"},"content":"**Use case: List all TA candidates in the system**","lastModifiedDate":"2022-03-16"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"charmainehly"},"content":"1.  User requests to list TAs","lastModifiedDate":"2022-03-03"},{"lineNumber":525,"author":{"gitId":"charmainehly"},"content":"2.  TAlent Assistant™ shows all TAs","lastModifiedDate":"2022-03-03"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"charmainehly"},"content":"* 2a. The list is empty","lastModifiedDate":"2022-03-03"},{"lineNumber":532,"author":{"gitId":"charmainehly"},"content":"    * 2a1. TAlent Assistant™ feedbacks no TAs in system","lastModifiedDate":"2022-03-03"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"charmainehly"},"content":"\u003chr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":537,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":538,"author":{"gitId":"domlimm"},"content":"**Use case: Add a TA into the system**","lastModifiedDate":"2022-03-08"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"charmainehly"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":541,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":542,"author":{"gitId":"charmainehly"},"content":"1.  User requests to add a TA","lastModifiedDate":"2022-03-03"},{"lineNumber":543,"author":{"gitId":"charmainehly"},"content":"2.  TAlent Assistant™ requests for TA\u0027s details","lastModifiedDate":"2022-03-03"},{"lineNumber":544,"author":{"gitId":"charmainehly"},"content":"3.  User inputs details","lastModifiedDate":"2022-03-03"},{"lineNumber":545,"author":{"gitId":"charmainehly"},"content":"4.  TAlent Assistant™ adds the new TA","lastModifiedDate":"2022-03-03"},{"lineNumber":546,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":547,"author":{"gitId":"charmainehly"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":548,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":549,"author":{"gitId":"charmainehly"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":550,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":551,"author":{"gitId":"charmainehly"},"content":"* 3a. The given format is invalid","lastModifiedDate":"2022-03-10"},{"lineNumber":552,"author":{"gitId":"charmainehly"},"content":"    * 3a1. TAlent Assistant™ shows an error message","lastModifiedDate":"2022-03-10"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"charmainehly"},"content":"\u003chr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":557,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":558,"author":{"gitId":"lzan98"},"content":"**Use case: Delete a TA from the system**","lastModifiedDate":"2022-03-09"},{"lineNumber":559,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":560,"author":{"gitId":"charmainehly"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":561,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":562,"author":{"gitId":"charmainehly"},"content":"1.  User requests to list TA candidates","lastModifiedDate":"2022-03-16"},{"lineNumber":563,"author":{"gitId":"charmainehly"},"content":"2.  TAlent Assistant™ displays the list of TA candidates","lastModifiedDate":"2022-03-16"},{"lineNumber":564,"author":{"gitId":"lzan98"},"content":"3.  User requests to delete a specific TA in the list","lastModifiedDate":"2022-03-09"},{"lineNumber":565,"author":{"gitId":"charmainehly"},"content":"4.  TAlent Assistant™ deletes the TA from the list and displays the deleted entry","lastModifiedDate":"2022-03-03"},{"lineNumber":566,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":567,"author":{"gitId":"charmainehly"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":568,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":569,"author":{"gitId":"charmainehly"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":570,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":571,"author":{"gitId":"charmainehly"},"content":"* 3a. The list is empty","lastModifiedDate":"2022-03-10"},{"lineNumber":572,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":573,"author":{"gitId":"charmainehly"},"content":"    Use case ends.","lastModifiedDate":"2022-03-10"},{"lineNumber":574,"author":{"gitId":"lzan98"},"content":"* 3b. The given index is invalid.","lastModifiedDate":"2022-03-18"},{"lineNumber":575,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":576,"author":{"gitId":"charmainehly"},"content":"    * 3b1. TAlent Assistant™ displays an error message","lastModifiedDate":"2022-03-10"},{"lineNumber":577,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":578,"author":{"gitId":"charmainehly"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-03-03"},{"lineNumber":579,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":580,"author":{"gitId":"charmainehly"},"content":"\u003chr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":581,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":582,"author":{"gitId":"lzan98"},"content":"**Use case: Schedule a candidate from the system for an interview**","lastModifiedDate":"2022-03-17"},{"lineNumber":583,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":584,"author":{"gitId":"lzan98"},"content":"**MSS**","lastModifiedDate":"2022-03-17"},{"lineNumber":585,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":586,"author":{"gitId":"lzan98"},"content":"1.  User requests to list TA candidates","lastModifiedDate":"2022-03-17"},{"lineNumber":587,"author":{"gitId":"lzan98"},"content":"2.  TAlent Assistant™ displays the list of TA candidates","lastModifiedDate":"2022-03-17"},{"lineNumber":588,"author":{"gitId":"lzan98"},"content":"3.  User requests to schedule a specific candidate in the list for an interview on a particular date and time ","lastModifiedDate":"2022-03-17"},{"lineNumber":589,"author":{"gitId":"lzan98"},"content":"4.  TAlent Assistant™ schedules the interview","lastModifiedDate":"2022-03-17"},{"lineNumber":590,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":591,"author":{"gitId":"lzan98"},"content":"    Use case ends.","lastModifiedDate":"2022-03-17"},{"lineNumber":592,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":593,"author":{"gitId":"lzan98"},"content":"**Extensions**","lastModifiedDate":"2022-03-17"},{"lineNumber":594,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":595,"author":{"gitId":"lzan98"},"content":"* 2a. The list is empty","lastModifiedDate":"2022-03-17"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":597,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-03-17"},{"lineNumber":598,"author":{"gitId":"lzan98"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2022-03-17"},{"lineNumber":599,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":600,"author":{"gitId":"lzan98"},"content":"    * 3a1. TAlent Assistant™ displays an error message","lastModifiedDate":"2022-03-17"},{"lineNumber":601,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":602,"author":{"gitId":"lzan98"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-03-17"},{"lineNumber":603,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":604,"author":{"gitId":"lzan98"},"content":"* 3b. The given date and/or time format is invalid","lastModifiedDate":"2022-03-17"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":606,"author":{"gitId":"lzan98"},"content":"    * 3b1. TAlent Assistant™ displays an error message","lastModifiedDate":"2022-03-17"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":608,"author":{"gitId":"lzan98"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-03-17"},{"lineNumber":609,"author":{"gitId":"lzan98"},"content":"\u003chr\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":610,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":611,"author":{"gitId":"charmainehly"},"content":"**Use case: Find TAs**","lastModifiedDate":"2022-03-03"},{"lineNumber":612,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":613,"author":{"gitId":"charmainehly"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":614,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":615,"author":{"gitId":"charmainehly"},"content":"1. User requests to find TAs containing specific keyword(s)","lastModifiedDate":"2022-03-16"},{"lineNumber":616,"author":{"gitId":"charmainehly"},"content":"2. TAlent Assistant™ returns a list of TAs that contain one or more of the given keyword(s) ","lastModifiedDate":"2022-03-16"},{"lineNumber":617,"author":{"gitId":"charmainehly"},"content":"in the specified attribute field","lastModifiedDate":"2022-03-16"},{"lineNumber":618,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":619,"author":{"gitId":"charmainehly"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":620,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":621,"author":{"gitId":"charmainehly"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":622,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":623,"author":{"gitId":"charmainehly"},"content":"* 2a. No TA candidate entries contain the given keyword in the specified attribute field","lastModifiedDate":"2022-03-17"},{"lineNumber":624,"author":{"gitId":"charmainehly"},"content":"    * 2a1. TAlent Assistant™ returns an empty list with zero search results","lastModifiedDate":"2022-03-03"},{"lineNumber":625,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":626,"author":{"gitId":"charmainehly"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":627,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":628,"author":{"gitId":"charmainehly"},"content":"* 2b. The specified attribute field is invalid","lastModifiedDate":"2022-03-03"},{"lineNumber":629,"author":{"gitId":"charmainehly"},"content":"    * 2b1. TAlent Assistant™ returns an error message","lastModifiedDate":"2022-03-03"},{"lineNumber":630,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":631,"author":{"gitId":"charmainehly"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2022-03-03"},{"lineNumber":632,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":633,"author":{"gitId":"charmainehly"},"content":"\u003chr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":634,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":635,"author":{"gitId":"charmainehly"},"content":"**Sort TAs**","lastModifiedDate":"2022-03-16"},{"lineNumber":636,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":637,"author":{"gitId":"charmainehly"},"content":"**MSS**","lastModifiedDate":"2022-03-16"},{"lineNumber":638,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":639,"author":{"gitId":"charmainehly"},"content":"1. User requests to sort TAs by a specific field","lastModifiedDate":"2022-03-16"},{"lineNumber":640,"author":{"gitId":"charmainehly"},"content":"2. TAlent Assistant™ returns a list of TAs sorted in order with regard to the specified attribute field","lastModifiedDate":"2022-03-16"},{"lineNumber":641,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":642,"author":{"gitId":"charmainehly"},"content":"    Use case ends.","lastModifiedDate":"2022-03-16"},{"lineNumber":643,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":644,"author":{"gitId":"charmainehly"},"content":"* 2b. The specified attribute field is invalid","lastModifiedDate":"2022-03-16"},{"lineNumber":645,"author":{"gitId":"charmainehly"},"content":"    * 2b1. TAlent Assistant™ returns an error message","lastModifiedDate":"2022-03-16"},{"lineNumber":646,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":647,"author":{"gitId":"charmainehly"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2022-03-16"},{"lineNumber":648,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":649,"author":{"gitId":"charmainehly"},"content":"\u003chr\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":650,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":651,"author":{"gitId":"charmainehly"},"content":"**Use case: List available commands**","lastModifiedDate":"2022-03-03"},{"lineNumber":652,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":653,"author":{"gitId":"charmainehly"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":654,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":655,"author":{"gitId":"charmainehly"},"content":"1.  User requests to list available commands","lastModifiedDate":"2022-03-03"},{"lineNumber":656,"author":{"gitId":"tiewweijian"},"content":"2.  TAlent Assistant™ returns list of available commands and example usages","lastModifiedDate":"2022-03-09"},{"lineNumber":657,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":658,"author":{"gitId":"charmainehly"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":661,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"LeeEnEn"},"content":"2. Should be able to hold up to 1000 entries in the local database with at most 5 seconds delay in performance for typical usage.","lastModifiedDate":"2022-03-09"},{"lineNumber":667,"author":{"gitId":"LeeEnEn"},"content":"3. Should work even without Internet connection.","lastModifiedDate":"2022-03-09"},{"lineNumber":668,"author":{"gitId":"LeeEnEn"},"content":"4. Should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-03-03"},{"lineNumber":669,"author":{"gitId":"LeeEnEn"},"content":"5. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-03"},{"lineNumber":670,"author":{"gitId":"LeeEnEn"},"content":"6. The response to any user action should become visible within 3 seconds.","lastModifiedDate":"2022-03-09"},{"lineNumber":671,"author":{"gitId":"LeeEnEn"},"content":"7. Colors used for the user interface should be pleasant and not straining on the eyes.","lastModifiedDate":"2022-03-09"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"LeeEnEn"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2022-03-09"},{"lineNumber":678,"author":{"gitId":"charmainehly"},"content":"* **TA**: Teaching Assistant","lastModifiedDate":"2022-03-03"},{"lineNumber":679,"author":{"gitId":"LeeEnEn"},"content":"* **32/64-bit environment**: A system that uses a 32/64-bit processor","lastModifiedDate":"2022-03-03"},{"lineNumber":680,"author":{"gitId":"LeeEnEn"},"content":"* **System admin commands**: Commands that are used on the terminal interface","lastModifiedDate":"2022-03-03"},{"lineNumber":681,"author":{"gitId":"LeeEnEn"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2022-03-03"},{"lineNumber":682,"author":{"gitId":"LeeEnEn"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2022-03-03"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"domlimm"},"content":"### Deleting a candidate","lastModifiedDate":"2022-03-15"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"domlimm"},"content":"1. Deleting a candidate while all candidates are being shown","lastModifiedDate":"2022-03-15"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"domlimm"},"content":"   1. Prerequisites: List all candidates using the `list` command. Multiple candidates in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"domlimm"},"content":"      Expected: No candidate is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-15"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"charmainehly":156,"domlimm":77,"tiewweijian":62,"LeeEnEn":32,"lzan98":63,"-":345}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"TAlent Assistant™ is a **desktop, lightweight and centralized management system** catered to professors for managing","lastModifiedDate":"2022-02-28"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"the process of hiring undergraduate/graduate Teaching Assistants (TA). They will be able to access the TAs’ application","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"data easily and review qualifications or availability for scheduling interviews. It is **optimized for use via a","lastModifiedDate":"2022-02-28"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, this application will be able to help you manage all things under the hood of the TA initiative faster than traditional GUI applications.","lastModifiedDate":"2022-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"1. Download the latest `TAlentAssistant.jar` from [here](https://github.com/AY2122S2-CS2103-F11-2/tp/releases).","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TAlent Assistant™.","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"   * **`list`** : Lists all TAs.","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"   * **`add id/E0123456 n/John Doe p/87654321 c/Computer Science`** Adds a new TA into the system.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"   * **`delete A0123456H`** : Deletes the TA with ID A0213456H from the system.","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"   * **`find k/Jane f/name`** : Searches for all TAs with name containing “Jane/jane”.","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"   * **`sort s/name`** : Sorts all TAs by name in descending alphabetical order.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"   * **`help`** : List all commands in the system.","lastModifiedDate":"2022-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"tiewweijian"},"content":"Lists the application commands that are available in the system.","lastModifiedDate":"2022-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"### Adding a Teaching Assistant: `add`","lastModifiedDate":"2022-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"Adds a TA into the system.","lastModifiedDate":"2022-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"Format: `add id/STUDENT_ID n/NAME p/PHONE c/COURSE`","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"* `STUDENT_ID` is sensitive, will be validated.","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"domlimm"},"content":"* `add id/E0123456 n/John Doe p/87654321 c/Computer Science` adds a new TA with Student ID, E0123456, named John Doe.","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"LeeEnEn"},"content":"### Listing all Teaching Assistants : `list`","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"LeeEnEn"},"content":"Displays all TAs found in the system.","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"\u003c!-- For Edit TA in the future","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"### Editing a candidate : `edit`","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"charmainehly"},"content":"Edits an existing candidate in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"charmainehly"},"content":"* Edits the candidate at the specified `INDEX`. The index refers to the index number shown in the displayed candidate list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"charmainehly"},"content":"* When editing tags, the existing tags of the candidate will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"charmainehly"},"content":"* You can remove all the candidate’s tags by typing `t/` without","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"charmainehly"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st candidate to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"charmainehly"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd candidate to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"tiewweijian"},"content":"*  `edit 3 as/Accepted is/Interviewing` Edits the Application Status and Interview Status of the Candidate.","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"domlimm"},"content":"--\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"### Finding candidates by keyword(s) search: `find`","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"charmainehly"},"content":"Finds and lists TAs whose attribute field(s) contain(s) any of the given keyword(s).","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"charmainehly"},"content":"Format: `find k/KEYWORD [k/MORE_KEYWORDS]... f/ATTRIBUTE_FIELD`","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"charmainehly"},"content":"Note: `ATTRIBUTE_FIELD` can take on the following values","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"charmainehly"},"content":"`course`, `email`, `name`, `phone`, `candidate`, `studentid`","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"charmainehly"},"content":"* The keyword search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"charmainehly"},"content":"* The attribute field is case-insensitive. e.g. `NAME` is equivalent to `name`","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"charmainehly"},"content":"* The search will return a list of all TAs containing any of the specified keyword(s) in the specified attribute field.","lastModifiedDate":"2022-03-02"},{"lineNumber":128,"author":{"gitId":"charmainehly"},"content":"* For `f/candidate`, the search will find keywords across all attribute fields of the TA records.","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"charmainehly"},"content":"* Only full keywords will be matched","lastModifiedDate":"2022-03-02"},{"lineNumber":130,"author":{"gitId":"charmainehly"},"content":"  e.g. `k/jane doe f/name` will not match TAs with name `jane koe` or just `jane`","lastModifiedDate":"2022-03-02"},{"lineNumber":131,"author":{"gitId":"charmainehly"},"content":"* TAs matching at least one full keyword (in the specified attribute field) will be returned i.e. OR search,","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"charmainehly"},"content":"  e.g. `k/Jane k/Doe f/name` will return TAs with name e.g. `Jane Koe`, `John Doe`","lastModifiedDate":"2022-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"charmainehly"},"content":"* `find k/Jane f/name` returns TAs with name e.g. `jane` and `jane doe`","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"charmainehly"},"content":"* `find k/Computer Science f/course` returns TAs with the course field i.e. `computer science`","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"* `find k/Jane k/Tan f/name` returns TAs with name e.g. `Jane`, `tan` and `John Tan`","lastModifiedDate":"2022-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"charmainehly"},"content":"### Sorting candidates by attribute field: `sort`","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"charmainehly"},"content":"Returns a list of TAs sorted by the specified attribute field. ","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"charmainehly"},"content":"Format: `sort s/ATTRIBUTE_FIELD`","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"charmainehly"},"content":"Note: `ATTRIBUTE_FIELD` can take on the following values","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"charmainehly"},"content":"`course`, `email`, `name`, `phone`, `candidate`, `studentid`","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"charmainehly"},"content":"* The attribute field is case-insensitive. e.g. `NAME` is equivalent to `name`","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"charmainehly"},"content":"* The search will return a list of all TAs sorted in ascending order ","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"charmainehly"},"content":"(i.e. A-Z, 0-9) with regard to the specified attribute field.","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"charmainehly"},"content":"Examples:","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"charmainehly"},"content":"Let\u0027s reference a default sample list of unique TA candidates with attribute fields stated as (`name`, `studentid`).","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"charmainehly"},"content":"1. (`Ben`, `E23456789`)","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"charmainehly"},"content":"2. (`Alice`, `E0234567`)","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"charmainehly"},"content":"3. (`Charlie`, `E0123456`)","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"charmainehly"},"content":"* `sort s/name` returns TAs sorted by name in the following order:","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"charmainehly"},"content":"1. (`Alice`, `E0234567`)","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"charmainehly"},"content":"2. (`Ben`, `E23456789`)","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"charmainehly"},"content":"3. (`Charlie`, `E0123456`)","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"charmainehly"},"content":"* `sort s/studentid` returns TAs sorted by name in the following order:","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"charmainehly"},"content":"1. (`Charlie`, `E0123456`)","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"charmainehly"},"content":"2. (`Alice`, `E0234567`)","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"charmainehly"},"content":"3. (`Ben`, `E23456789`)","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"lzan98"},"content":"### Deleting a TA : `delete`","lastModifiedDate":"2022-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"lzan98"},"content":"Deletes the specified candidate from the system.","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"lzan98"},"content":"* Deletes the candidate at specified `INDEX`.","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"lzan98"},"content":"* The index refers to the index number shown in the displayed candidate list","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"lzan98"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"lzan98"},"content":"* `list` followed by delete 2 deletes the 2nd candidate in the candidate list.","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"charmainehly"},"content":"* `find k/bernice k/alex f/name` followed by delete 1 deletes the 1st candidate in the results of the find command.","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"lzan98"},"content":"### Scheduling a candidate for an interview : `schedule` [Work-In-Progress]","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"lzan98"},"content":"Schedules the specified candidate for an interview.","lastModifiedDate":"2022-03-17"},{"lineNumber":185,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":186,"author":{"gitId":"lzan98"},"content":"Format: `schedule INDEX /at DATE TIME`","lastModifiedDate":"2022-03-17"},{"lineNumber":187,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":188,"author":{"gitId":"lzan98"},"content":"* Schedules the candidate at the specified `INDEX` for an interview on given `DATE` and `TIME`.","lastModifiedDate":"2022-03-17"},{"lineNumber":189,"author":{"gitId":"lzan98"},"content":"* The index refers to the index number shown in the displayed candidate list.","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"lzan98"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"lzan98"},"content":"* `DATE` and `TIME` must be specified in the format `dd/MM/yyyy` and `HH:mm` respectively.","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"lzan98"},"content":"* `DATE` and `TIME` must not be earlier than the current date and time.","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"lzan98"},"content":"* `list` followed by `schedule 2 /at 20/09/2022 15:00` schedules the second candidate in TAlent Assistant™","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"lzan98"},"content":"for an interview on 20 September 2022, 3PM.","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"charmainehly"},"content":"TAlent Assistant™ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"charmainehly"},"content":"TAlent Assistant™ data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"charmainehly"},"content":"If your changes to the data file makes its format invalid, TAlent Assistant™ will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-16"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"charmainehly"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TAlent Assistant™ home folder.","lastModifiedDate":"2022-03-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"domlimm"},"content":"| Action       | Format, Examples                                                                                                            |","lastModifiedDate":"2022-03-02"},{"lineNumber":238,"author":{"gitId":"lzan98"},"content":"|--------------|-----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-17"},{"lineNumber":239,"author":{"gitId":"domlimm"},"content":"| **Add**      | `add id/STUDENT_ID n/NAME p/PHONE c/COURSE`\u003cbr\u003e e.g., `add id/E0123456 n/John Doe p/87654321 c/Computer Science`            |","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"domlimm"},"content":"| **Clear**    | `clear`                                                                                                                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":241,"author":{"gitId":"domlimm"},"content":"| **Delete**   | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                         |","lastModifiedDate":"2022-03-02"},{"lineNumber":242,"author":{"gitId":"domlimm"},"content":"| **Edit**     | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com` |","lastModifiedDate":"2022-03-02"},{"lineNumber":243,"author":{"gitId":"charmainehly"},"content":"| **Find**     | `find k/KEYWORD [k/MORE_KEYWORDS]... f/ATTRIBUTE_FIELD`\u003cbr\u003e e.g., `find k/Jane k/Doe f/name`                                |","lastModifiedDate":"2022-03-16"},{"lineNumber":244,"author":{"gitId":"charmainehly"},"content":"| **Sort**     | `sort s/ATTRIBUTE_FIELD`\u003cbr\u003e e.g., `sort s/name`                                                                            |","lastModifiedDate":"2022-03-16"},{"lineNumber":245,"author":{"gitId":"lzan98"},"content":"| **Schedule** | `schedule INDEX /at DATE TIME` \u003cbr\u003e e.g., `schedule 2 /at 20/09/2022 15:00`                                                 |","lastModifiedDate":"2022-03-17"},{"lineNumber":246,"author":{"gitId":"domlimm"},"content":"| **List**     | `list`                                                                                                                      |","lastModifiedDate":"2022-03-02"},{"lineNumber":247,"author":{"gitId":"domlimm"},"content":"| **Help**     | `help`                                                                                                                      |","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"charmainehly":61,"domlimm":16,"tiewweijian":2,"LeeEnEn":2,"lzan98":31,"-":135}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"domlimm"},"content":"    content: \"TAlent Assistant™\";","lastModifiedDate":"2022-03-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"domlimm":1,"-":294}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"@startuml","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"start","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":":User executes add command;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"if () then ([candidate does not exist in system])","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"    :Save candidate to system;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"else ([else])","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"endif","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"stop","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"@enduml","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"domlimm":13}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteCandidate(p)","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"charmainehly":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"AddressBook *-right-\u003e \"1\" UniqueCandidateList","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"UniqueTagList -[hidden]down- UniqueCandidateList","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"UniqueTagList -[hidden]down- UniqueCandidateList","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"UniqueCandidateList -right-\u003e Candidate","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"Candidate -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Name","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Phone","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Email","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Address","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"charmainehly":9,"-":12}},{"path":"docs/diagrams/CandidateModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"skinparam arrowThickness 0.5","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"AddressBook *-right-\u003e \"1\" UniqueCandidateList","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"AddressBook *-right-\u003e \"1\" UniqueInterviewList","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"UniqueInterviewList -[hidden]down- UniqueInterviewList","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"UniqueInterviewList *-right-\u003e \"*\" Interview","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"UniqueCandidateList -right-\u003e Candidate","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"Candidate -up-\u003e \"1\" Interview","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e StudentId","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e Name","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e Phone","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e Email","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e Course","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e Seniority","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e ApplicationStatus","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e InterviewStatus","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"Candidate *--\u003e Availability","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"charmainehly":2,"domlimm":23}},{"path":"docs/diagrams/DeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":":User executes list command;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":":User executes delete command;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"if () then ([valid command])","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"if () then ([candidate list is empty])","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":":System returns empty candidate list message;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"else ([false])","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":":Candidate is deleted from system;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":":System returns updated list of candidates;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"else ([invalid command])","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":":System returns invalid command error message;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"lzan98":20}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"DeleteCommand -\u003e Model : deleteCandidate(1)","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"charmainehly":1,"-":68}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":":User executes find command;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":":System parses in the user command;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"if () then ([Valid command format parsed in])","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"  :System checks through the full list of candidates containing the keyword;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"  :System returns list of candidates found;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"else ([Invalid command format parsed in])","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"  :System returns invalid command error;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"charmainehly":16}},{"path":"docs/diagrams/ListActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":":User executes list command;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"if () then ([list is empty])","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":":Retrieves empty list;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":":Show empty list and \\nempty message;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"else ([list is not empty])","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":":Retrieves list of Candidates;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":":Show list of Candidates and\\n success message ;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"endif","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"LeeEnEn":14}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"Class UniqueCandidateList","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"Class Candidate","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"AddressBook *--\u003e \"1\" UniqueCandidateList","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"UniqueCandidateList --\u003e \"~* all\" Candidate","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Name","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Phone","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Email","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e Address","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"Candidate *--\u003e \"*\" Tag","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"ModelManager --\u003e\"~* filtered\" Candidate","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"charmainehly":10,"-":40}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"Class JsonAdaptedCandidate","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedCandidate","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"JsonAdaptedCandidate --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"charmainehly":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"Class CandidateListPanel","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"Class CandidateCard","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"MainWindow *-down-\u003e \"1\" CandidateListPanel","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"CandidateListPanel -down-\u003e \"*\" CandidateCard","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"CandidateListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"CandidateCard --|\u003e UiPart","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"CandidateCard ..\u003e Model","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"CandidateListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"charmainehly":8,"-":52}},{"path":"docs/diagrams/plantuml/HelpWindowActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tiewweijian"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":" \u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":" start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":" :User keys in the help command;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":" if () then ([Valid command])","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"    :show Help Window;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"    switch ( )","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"    case ([User press Open User Guide])","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"    :open User Guide in Browser;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"    case()","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"    endswitch","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":" else ([Invalid prefix or status entered])","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"   :System returns invalid command error;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":" endif","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":" stop","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":" @enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tiewweijian":18}},{"path":"docs/diagrams/plantuml/StatusActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tiewweijian"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":" \u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":" start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":" :User executes edit command for ApplicationStatus;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":" :System parses in the user command;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":" if () then ([Valid prefix and status entered])","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"    switch(Status entered)","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"    case ([Accepted[])","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"        : Change ApplicationStatus to Accepted;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"        : Trigger InterviewStatus to Completed;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"    case ([Rejected])","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"        : Change ApplicationStatus to Rejected;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"        : Trigger InterviewStatus to Completed;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"    case ([Pending])","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"        : Change ApplicationStatus to Pending;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"    endswitch","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":" else ([Invalid prefix or status entered])","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"   :System returns invalid command error;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":" endif","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":" stop","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":" @enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tiewweijian":23}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"ecp -\u003e ec ++: index, editCandidateDescriptor","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"charmainehly":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"title: TAlent Assistant™","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"[![pages-build-deployment](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/AY2122S2-CS2103-F11-2/tp/actions/workflows/pages/pages-build-deployment)","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-F11-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S2-CS2103-F11-2/tp)","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"**TAlent Assistant™ is a desktop application used by professors to schedule interviews and","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"keep track of applications for teaching assistants.**","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"* If you are interested in using TAlent Assistant™, head over to the (placeholder for link to _Quick Start_ section of the **User Guide**).","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"* If you are interested about developing TAlent Assistant™, the (placeholder for link to **Developer Guide**) is a good place to start.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"charmainehly":4,"domlimm":4,"-":12}},{"path":"docs/team/charmainehly.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"layout: page","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"title: Charmaine Ho\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"### Project: TAlent Assistant™","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"#### Overview ####","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"TAlent Assistant™ is a desktop lightweight and centralized management system catered to professors for managing the","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"process of hiring undergraduate/graduate Teaching Assistants (TA). They will be able to access the TAs’ application","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"data easily and review qualifications or availability for scheduling interviews. It is optimized for use via a Command","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, this","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"application will be able to help you manage all things under the hood of the TA initiative faster than traditional","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"GUI applications.","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"#### Summary of Contributions ####","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"_to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"#### Code contributed: ####","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"_to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"#### Enhancements implemented: ####","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"_to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"#### Contributions to the UG: ####","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"_to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"#### Contributions to the DG: ####","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"_to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"#### Review/mentoring contributions: ####","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"_to be added soon_","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"#### Contributions beyond the project team: ####","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"_to be added soon_","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"charmainehly":37}},{"path":"docs/team/domlimm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"title: Dominic Lim\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"### Project: TAlent Assistant™","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"#### Overview ####","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"TAlent Assistant™ is a desktop lightweight and centralized management system catered to professors for managing the","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"process of hiring undergraduate/graduate Teaching Assistants (TA). They will be able to access the TAs’ application","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"data easily and review qualifications or availability for scheduling interviews. It is optimized for use via a Command","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, this","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"application will be able to help you manage all things under the hood of the TA initiative faster than traditional","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"GUI applications.","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"#### Summary of Contributions ####","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"_to be added soon_","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"#### Code contributed: ####","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"_to be added soon_","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"#### Enhancements implemented: ####","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"_to be added soon_","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"#### Contributions to the UG: ####","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"_to be added soon_","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"#### Contributions to the DG: ####","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"_to be added soon_","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"#### Review/mentoring contributions: ####","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"_to be added soon_","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"#### Contributions beyond the project team: ####","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"_to be added soon_","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"domlimm":37}},{"path":"docs/team/leeenen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeeEnEn"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"layout: page","lastModifiedDate":"2022-02-26"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"title: Lee En En\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"---","lastModifiedDate":"2022-02-26"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"### Project: TAlent Assistant™","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"TAlent Assistant™ is a desktop lightweight and centralized management system catered to professors for managing the","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"process of hiring undergraduate/graduate Teaching Assistants (TA). They will be able to access the TAs’ application","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"data easily and review qualifications or availability for scheduling interviews. It is optimized for use via a Command","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, this","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"application will be able to help you manage all things under the hood of the TA initiative faster than traditional","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"GUI applications.","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"* **Project management**:","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"* **Community**:","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"* **Tools**:","lastModifiedDate":"2022-02-28"}],"authorContributionMap":{"LeeEnEn":35}},{"path":"docs/team/lzan98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"layout: page","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"title: Ho Lanzan\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"### Project: TAlent Assistant™","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"TAlent Assistant™ is a desktop lightweight and centralized management system catered to professors for managing the","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"process of hiring undergraduate/graduate Teaching Assistants (TA). They will be able to access the TAs’ application","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"data easily and review qualifications or availability for scheduling interviews. It is optimized for use via a Command","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, this","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"application will be able to help you manage all things under the hood of the TA initiative faster than traditional","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"GUI applications.","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"* **New Feature**: To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"* **Project management**: To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"* **Enhancements to existing features**: To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"  * User Guide:","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    * Added documentation for Motivation and Quick Start [\\#18]()","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    * Added documentation for the feature `delete` [\\#33]()","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-02"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    * To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"* **Community**:","lastModifiedDate":"2022-03-02"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"    * PRs reviewed (with non-trivial review comments): (To be added)","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    * Contributed to forum discussions (To be added)","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"* **Tools**: To be added","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"lzan98":42}},{"path":"docs/team/tiewweijian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tiewweijian"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"title: Tiew Wei Jian\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"### Project: TAlent Assistant™","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"TAlent Assistant™ is a desktop lightweight and centralized management system catered to professors for managing the","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"process of hiring undergraduate/graduate Teaching Assistants (TA). They will be able to access the TAs’ application","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"data easily and review qualifications or availability for scheduling interviews. It is optimized for use via a Command","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, this","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"application will be able to help you manage all things under the hood of the TA initiative faster than traditional","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"GUI applications.","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"tiewweijian"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"tiewweijian":35}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":" * Changes the remark of an existing candidate in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"            + \": Edits the remark of the candidate identified \"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"            + \"by the index number used in the last candidate listing. \"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"     * @param index of the candidate in the filtered candidate list to edit the remark","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"charmainehly"},"content":"     * @param remark of the candidate to be updated to","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"charmainehly"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of candidate data. We achieve that by working with the `Candidate` model. Each field in a Candidate is implemented as a separate class (e.g. a `Name` object represents the candidate’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"charmainehly"},"content":"Create a new `Remark` in `seedu.address.model.candidate`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"charmainehly"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"charmainehly"},"content":"Simply add the following to [`seedu.address.ui.CandidateCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"charmainehly"},"content":"**`CandidateCard.java`:**","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"charmainehly"},"content":"Then insert the following into [`main/resources/view/CandidateListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"charmainehly"},"content":"**`CandidateListCard.fxml`:**","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"charmainehly"},"content":"## Modify `Candidate` to support a `Remark` field","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"charmainehly"},"content":"Since `CandidateCard` displays data from a `Candidate`, we need to update `Candidate` to get our `Remark` displayed!","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"charmainehly"},"content":"### Modify `Candidate`","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"charmainehly"},"content":"We change the constructor of `Candidate` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"charmainehly"},"content":"### Update other usages of `Candidate`","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"charmainehly"},"content":"Unfortunately, a change to `Candidate` will cause other commands to break, you will have to modify these commands to use the updated `Candidate`!","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"charmainehly"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Candidate` class to find these commands.","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"charmainehly"},"content":"AddressBook stores data by serializing `JsonAdaptedCandidate` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedCandidate` to work with our new `Candidate`!","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"charmainehly"},"content":"Now that we have finalized the `Candidate` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"charmainehly"},"content":"**`CandidateCard.java`:**","lastModifiedDate":"2022-03-25"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"charmainehly"},"content":"public CandidateCard(Candidate candidate, int displayedIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"charmainehly"},"content":"    remark.setText(candidate.getRemark().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"charmainehly"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Candidate`. Since all fields in a `Candidate` are immutable, we create a new instance of a `Candidate` with the values that we want and","lastModifiedDate":"2022-03-25"},{"lineNumber":329,"author":{"gitId":"charmainehly"},"content":"save it with `Model#setCandidate()`.","lastModifiedDate":"2022-03-25"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Candidate: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Candidate: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"charmainehly"},"content":"        List\u003cCandidate\u003e lastShownList \u003d model.getFilteredCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"charmainehly"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"charmainehly"},"content":"        Candidate editedCandidate \u003d new Candidate(","lastModifiedDate":"2022-03-25"},{"lineNumber":348,"author":{"gitId":"charmainehly"},"content":"                candidateToEdit.getName(), candidateToEdit.getPhone(), candidateToEdit.getEmail(),","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"charmainehly"},"content":"                candidateToEdit.getAddress(), remark, candidateToEdit.getTags());","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"charmainehly"},"content":"        model.setCandidate(candidateToEdit, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":352,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(PREDICATE_SHOW_ALL_CANDIDATES);","lastModifiedDate":"2022-03-25"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"charmainehly"},"content":"        return new CommandResult(generateSuccessMessage(editedCandidate));","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"charmainehly"},"content":"     * {@code candidateToEdit}.","lastModifiedDate":"2022-03-25"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"charmainehly"},"content":"    private String generateSuccessMessage(Candidate candidateToEdit) {","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"charmainehly"},"content":"        return String.format(message, candidateToEdit);","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"charmainehly":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Candidate` class.","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"The `address` field in `Candidate` is actually an instance of the `seedu.address.model.candidate.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditCandidateDescriptor` may require more careful inspection.","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"Let’s try removing references to `Address` in `EditCandidateDescriptor`.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"1. Safe delete the field `address` in `EditCandidateDescriptor`.","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Candidate` class will require you to modify its constructor.","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `CandidateCard` that has not been removed nor identified.","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"A quick look at the `CandidateCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"**`CandidateCard.java`**","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"**`CandidateCard.fxml`**","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"**`invalidCandidateAddressBook.json`:**","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"charmainehly"},"content":"  \"candidates\": [ {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"    \"name\": \"Candidate with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"charmainehly":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"charmainehly"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditCandidateDescriptor`. Recall that we can verify the contents of `editCandidateDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"charmainehly"},"content":"       Candidate candidateToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"charmainehly"},"content":"       Candidate editedCandidate \u003d createEditedCandidate(candidateToEdit, editCandidateDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"charmainehly"},"content":"       if (!candidateToEdit.isSameCandidate(editedCandidate) \u0026\u0026 model.hasCandidate(editedCandidate)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"charmainehly"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"charmainehly"},"content":"       model.setCandidate(candidateToEdit, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"charmainehly"},"content":"       model.updateFilteredCandidateList(PREDICATE_SHOW_ALL_CANDIDATES);","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"charmainehly"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_CANDIDATE_SUCCESS, editedCandidate));","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"charmainehly"},"content":"   * it uses the `setCandidate()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the candidate data.","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"charmainehly"},"content":"   * it uses the `updateFilteredCandidateList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ candidates.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"charmainehly"},"content":"     FYI, The \u0027filtered list\u0027 is the list of candidates resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the candidates so that the user can see the edited candidate along with all other candidates. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"charmainehly"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of candidates is being tracked.","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"charmainehly"},"content":"        candidates.addAll(","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"charmainehly"},"content":"            source.getCandidateList()","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"charmainehly"},"content":"                  .map(JsonAdaptedCandidate::new)","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"charmainehly"},"content":"1. It appears that a `JsonAdaptedCandidate` is created for each `Candidate` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"charmainehly"},"content":"    5.  Add a new field to `Candidate`","lastModifiedDate":"2022-03-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"charmainehly":17,"-":284}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"import seedu.address.storage.InterviewScheduleStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"import seedu.address.storage.JsonInterviewScheduleStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"        InterviewScheduleStorage interviewScheduleStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"                new JsonInterviewScheduleStorage(userPrefs.getInterviewListFilePath());","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, interviewScheduleStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"        Optional\u003cReadOnlyInterviewSchedule\u003e interviewListOptional;","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"        ReadOnlyInterviewSchedule initialInterviewList;","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"            interviewListOptional \u003d storage.readInterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"            //Does not make sense for sample interview list. Change to empty list","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"            if (!interviewListOptional.isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"                logger.info(\"Data file for interviews not found. Will be starting with a sample InterviewSchedule\");","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"            initialInterviewList \u003d interviewListOptional.orElseGet(SampleDataUtil::getEmptyInterviewList);","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"            initialInterviewList \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"            initialInterviewList \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"        return new ModelManager(initialData, initialInterviewList, userPrefs);","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lzan98":19,"-":179}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX \u003d \"The candidate index provided is invalid\";","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_NO_CANDIDATES_IN_SYSTEM \u003d \"There are no candidates in the system!\";","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_CANDIDATES_LISTED_OVERVIEW \u003d \"%1$d candidates listed!\";","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charmainehly":2,"lzan98":1,"-":11}},{"path":"src/main/java/seedu/address/commons/util/HelpWindowUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tiewweijian"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"import java.net.URI;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"public class HelpWindowUtil {","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"    private String url;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"    public HelpWindowUtil(String url) {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"        this.url \u003d url;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"     * Converts string into URI, and opens in User\u0027s default web browser.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"     * @throws IOException when there is an error opening the website.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"    public void goToUrl() throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"        Desktop desktop \u003d isDesktopUsable() ? getDesktop() : null;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"        desktop.browse(convertToUrl());","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"     * Converts string into URI.","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"tiewweijian"},"content":"     * @return the URI given.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"     * @throws IllegalArgumentException if wrong input given.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"    public URI convertToUrl() throws IllegalArgumentException {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"tiewweijian"},"content":"        return URI.create(this.url);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"    public String getUrl() {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"tiewweijian"},"content":"        return url;","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"     * Check if the desktop system the user is using is supported.","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"     * @return status of Desktop.","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"tiewweijian"},"content":"    public boolean isDesktopUsable() {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"tiewweijian"},"content":"        return Desktop.isDesktopSupported();","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"tiewweijian"},"content":"     * Returns the desktop of the user.","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"tiewweijian"},"content":"     * @return returns the desktop of the user.","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"tiewweijian"},"content":"    public Desktop getDesktop() {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"        return Desktop.getDesktop();","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tiewweijian":56}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     * Returns true if the {@code sentence} contains the {@code string}.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"     *   Ignores case, and {@code sentence} needs to contain the full {@code string}.","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"DE\") \u003d\u003d true","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //full word match not required","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"     *       containsStringIgnoreCase(\"ABc def\", \"ABc De\") \u003d\u003d true","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"     * @param string cannot be null, cannot be empty, can have white spaces","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"    public static boolean containsStringIgnoreCase(String sentence, String string) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(string);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        String preppedString \u003d string.trim().toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        checkArgument(!preppedString.isEmpty(), \"String parameter cannot be empty\");","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        return preppedSentence.contains(preppedString);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":25,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     * Returns the InterviewSchedule.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    ReadOnlyInterviewSchedule getInterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"    /** Returns an unmodifiable view of the filtered list of candidates */","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"    ObservableList\u003cCandidate\u003e getFilteredCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"     * Returns the user prefs\u0027 interview list file path.","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"    Path getInterviewScheduleFilePath();","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"charmainehly":2,"domlimm":1,"lzan98":13,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"            storage.saveInterviewSchedule(model.getInterviewSchedule());","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    public ReadOnlyInterviewSchedule getInterviewSchedule() {","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"        return model.getInterviewSchedule();","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"    public ObservableList\u003cCandidate\u003e getFilteredCandidateList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"        return model.getFilteredCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"    public Path getInterviewScheduleFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"        return model.getInterviewScheduleFilePath();","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"charmainehly":2,"domlimm":1,"lzan98":11,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SENIORITY;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":" * Adds a candidate to the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a candidate to the address book. \"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"            + PREFIX_COURSE + \"COURSE \"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"            + PREFIX_SENIORITY + \"SENIORITY \"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"            + PREFIX_AVAILABILITY + \"AVAILABILITY \\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"            + PREFIX_ID + \"E0123456 \"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"            + PREFIX_COURSE + \"Computer Science \"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"            + PREFIX_SENIORITY + \"2 \"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"            + PREFIX_AVAILABILITY + \"1,2,3,4,5,6,7\";","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New candidate added: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_DUPLICATE_CANDIDATE \u003d \"This candidate already exists in the system\";","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"    private final Candidate toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"     * Creates an AddCommand to add the specified {@code Candidate}","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"    public AddCommand(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"        requireNonNull(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        toAdd \u003d candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        if (model.hasCandidate(toAdd)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        model.addCandidate(toAdd);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charmainehly":5,"domlimm":17,"LeeEnEn":3,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"        model.setInterviewSchedule(new InterviewSchedule());","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lzan98":2,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":" * Deletes a candidate identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"            + \": Deletes the candidate identified by the index number used in the displayed candidates list.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_DELETE_CANDIDATE_SUCCESS \u003d \"Deleted candidate: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        List\u003cCandidate\u003e lastShownList \u003d model.getFilteredCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_CANDIDATES_IN_SYSTEM));","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        Candidate candidateToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        model.deleteCandidate(candidateToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CANDIDATE_SUCCESS, candidateToDelete));","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charmainehly":5,"domlimm":2,"lzan98":5,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SENIORITY;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CANDIDATES;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.model.candidate.ApplicationStatus.ACCEPTED_STATUS;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.model.candidate.ApplicationStatus.REJECTED_STATUS;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.model.candidate.InterviewStatus.COMPLETED;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":" * Edits the details of an existing candidate in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the candidate identified \"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"            + \"by the index number used in the displayed candidate list. \"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"            + \"[\" + PREFIX_COURSE + \"COURSE] \"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"            + \"[\" + PREFIX_SENIORITY + \"SENIORITY] \"","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"tiewweijian"},"content":"            + \"[\" + PREFIX_APPLICATION_STATUS + \"APPLICATION STATUS] \"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"            + \"[\" + PREFIX_INTERVIEW_STATUS + \"INTERVIEW STATUS] \"","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"            + \"[\" + PREFIX_AVAILABILITY + \"AVAILABILITY]...\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"            + PREFIX_EMAIL + \"E0123456@u.nus.edu\";","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"    public static final String MESSAGE_EDIT_CANDIDATE_SUCCESS \u003d \"Edited Candidate: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"    public static final String MESSAGE_DUPLICATE_CANDIDATE \u003d \"This candidate already exists in the system\";","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"    private final EditCandidateDescriptor editCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"     * @param index of the candidate in the filtered candidate list to edit","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"     * @param editCandidateDescriptor details to edit the candidate with","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"    public EditCommand(Index index, EditCandidateDescriptor editCandidateDescriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(editCandidateDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"        this.editCandidateDescriptor \u003d new EditCandidateDescriptor(editCandidateDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"        List\u003cCandidate\u003e lastShownList \u003d model.getFilteredCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"charmainehly"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"domlimm"},"content":"        Candidate candidateToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"        Candidate editedCandidate \u003d createEditedCandidate(candidateToEdit, editCandidateDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"        if (!candidateToEdit.isSameCandidate(editedCandidate) \u0026\u0026 model.hasCandidate(editedCandidate)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"domlimm"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CANDIDATE);","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"charmainehly"},"content":"        model.setCandidate(candidateToEdit, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(PREDICATE_SHOW_ALL_CANDIDATES);","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CANDIDATE_SUCCESS, editedCandidate));","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"domlimm"},"content":"     * Creates and returns a {@code Candidate} with the details of {@code candidateToEdit}","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"charmainehly"},"content":"     * edited with {@code editCandidateDescriptor}.","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"charmainehly"},"content":"    private static Candidate createEditedCandidate(","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"charmainehly"},"content":"            Candidate candidateToEdit, EditCandidateDescriptor editCandidateDescriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"domlimm"},"content":"        assert candidateToEdit !\u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"charmainehly"},"content":"        StudentId updatedID \u003d editCandidateDescriptor.getStudentId().orElse(candidateToEdit.getStudentId());","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"charmainehly"},"content":"        Name updatedName \u003d editCandidateDescriptor.getName().orElse(candidateToEdit.getName());","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"        Phone updatedPhone \u003d editCandidateDescriptor.getPhone().orElse(candidateToEdit.getPhone());","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"charmainehly"},"content":"        Email updatedEmail \u003d editCandidateDescriptor.getEmail().orElse(candidateToEdit.getEmail());","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"charmainehly"},"content":"        Course updatedCourse \u003d editCandidateDescriptor.getCourse().orElse(candidateToEdit.getCourse());","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"        Seniority updatedSeniority \u003d editCandidateDescriptor.getSeniority().orElse(candidateToEdit.getSeniority());","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"charmainehly"},"content":"        Set\u003cTag\u003e updatedTags \u003d editCandidateDescriptor.getTags().orElse(candidateToEdit.getTags());","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"charmainehly"},"content":"        ApplicationStatus applicationStatus \u003d editCandidateDescriptor.getApplicationStatus()","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"domlimm"},"content":"                .orElse(candidateToEdit.getApplicationStatus());","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"charmainehly"},"content":"        InterviewStatus interviewStatus \u003d editCandidateDescriptor.getInterviewStatus()","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"domlimm"},"content":"                .orElse(candidateToEdit.getInterviewStatus());","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"charmainehly"},"content":"        Availability updatedAvailability \u003d editCandidateDescriptor.getAvailability()","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"domlimm"},"content":"                .orElse(candidateToEdit.getAvailability());","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"domlimm"},"content":"        return new Candidate(updatedID, updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"domlimm"},"content":"                updatedCourse, updatedSeniority, updatedTags,","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"domlimm"},"content":"                applicationStatus, interviewStatus, updatedAvailability);","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 editCandidateDescriptor.equals(e.editCandidateDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"charmainehly"},"content":"     * Stores the details to edit the candidate with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"charmainehly"},"content":"     * corresponding field value of the candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"charmainehly"},"content":"    public static class EditCandidateDescriptor {","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"domlimm"},"content":"        private StudentId studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"domlimm"},"content":"        private Course course;","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"domlimm"},"content":"        private Seniority seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"tiewweijian"},"content":"        private ApplicationStatus applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"tiewweijian"},"content":"        private InterviewStatus interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"LeeEnEn"},"content":"        private Availability availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"charmainehly"},"content":"        public EditCandidateDescriptor() {}","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"charmainehly"},"content":"        public EditCandidateDescriptor(EditCandidateDescriptor toCopy) {","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"domlimm"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"domlimm"},"content":"            setCourse(toCopy.course);","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"domlimm"},"content":"            setSeniority(toCopy.seniority);","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"tiewweijian"},"content":"            setApplicationStatus(toCopy.applicationStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"tiewweijian"},"content":"            setInterviewStatus(toCopy.interviewStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"LeeEnEn"},"content":"            setAvailability(toCopy.availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"tiewweijian"},"content":"            return CollectionUtil.isAnyNonNull(studentId, name, phone, email, course, tags,","lastModifiedDate":"2022-03-17"},{"lineNumber":191,"author":{"gitId":"LeeEnEn"},"content":"                    applicationStatus, interviewStatus, availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"domlimm"},"content":"        public void setStudentId(StudentId id) {","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"domlimm"},"content":"            this.studentId \u003d id;","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"domlimm"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"domlimm"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"domlimm"},"content":"        public void setCourse(Course course) {","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"domlimm"},"content":"            this.course \u003d course;","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"domlimm"},"content":"        public Optional\u003cCourse\u003e getCourse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":231,"author":{"gitId":"domlimm"},"content":"            return Optional.ofNullable(course);","lastModifiedDate":"2022-03-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"domlimm"},"content":"        public void setSeniority(Seniority seniority) {","lastModifiedDate":"2022-03-24"},{"lineNumber":235,"author":{"gitId":"domlimm"},"content":"            this.seniority \u003d seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":236,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"domlimm"},"content":"        public Optional\u003cSeniority\u003e getSeniority() {","lastModifiedDate":"2022-03-24"},{"lineNumber":239,"author":{"gitId":"domlimm"},"content":"            return Optional.ofNullable(seniority);","lastModifiedDate":"2022-03-24"},{"lineNumber":240,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"tiewweijian"},"content":"        public void setApplicationStatus(ApplicationStatus applicationStatus) {","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"tiewweijian"},"content":"            this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"tiewweijian"},"content":"            triggerInterviewStatus(applicationStatus);","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"tiewweijian"},"content":"        public Optional\u003cApplicationStatus\u003e getApplicationStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"tiewweijian"},"content":"            return Optional.ofNullable(applicationStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"tiewweijian"},"content":"        public void setInterviewStatus(InterviewStatus interviewStatus) {","lastModifiedDate":"2022-03-15"},{"lineNumber":252,"author":{"gitId":"tiewweijian"},"content":"            this.interviewStatus \u003d interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"tiewweijian"},"content":"        public Optional\u003cInterviewStatus\u003e getInterviewStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"tiewweijian"},"content":"            return Optional.ofNullable(interviewStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":259,"author":{"gitId":"LeeEnEn"},"content":"        public void setAvailability(Availability availability) {","lastModifiedDate":"2022-03-17"},{"lineNumber":260,"author":{"gitId":"LeeEnEn"},"content":"            this.availability \u003d availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":261,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":262,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":263,"author":{"gitId":"LeeEnEn"},"content":"        public Optional\u003cAvailability\u003e getAvailability() {","lastModifiedDate":"2022-03-17"},{"lineNumber":264,"author":{"gitId":"LeeEnEn"},"content":"            return Optional.ofNullable(availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"charmainehly"},"content":"            if (!(other instanceof EditCandidateDescriptor)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"charmainehly"},"content":"            EditCandidateDescriptor e \u003d (EditCandidateDescriptor) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":299,"author":{"gitId":"domlimm"},"content":"            return getStudentId().equals(e.getStudentId())","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"domlimm"},"content":"                    \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":303,"author":{"gitId":"domlimm"},"content":"                    \u0026\u0026 getCourse().equals(e.getCourse())","lastModifiedDate":"2022-03-10"},{"lineNumber":304,"author":{"gitId":"domlimm"},"content":"                    \u0026\u0026 getSeniority().equals(e.getSeniority())","lastModifiedDate":"2022-03-24"},{"lineNumber":305,"author":{"gitId":"tiewweijian"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"tiewweijian"},"content":"                    \u0026\u0026 getApplicationStatus().equals(e.getApplicationStatus())","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"LeeEnEn"},"content":"                    \u0026\u0026 getInterviewStatus().equals(e.getInterviewStatus())","lastModifiedDate":"2022-03-17"},{"lineNumber":308,"author":{"gitId":"LeeEnEn"},"content":"                    \u0026\u0026 getAvailability().equals(e.getAvailability());","lastModifiedDate":"2022-03-17"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":311,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"tiewweijian"},"content":"        /**","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"tiewweijian"},"content":"         * Allows the {@code InterviewStatus} to be triggered by ApplicationStatus.","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"tiewweijian"},"content":"         */","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"tiewweijian"},"content":"        public void triggerInterviewStatus(ApplicationStatus applicationStatus) {","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"tiewweijian"},"content":"            if (getApplicationStatus().isPresent()) {","lastModifiedDate":"2022-03-24"},{"lineNumber":317,"author":{"gitId":"tiewweijian"},"content":"                if (applicationStatus.toString().equals(ACCEPTED_STATUS)","lastModifiedDate":"2022-03-24"},{"lineNumber":318,"author":{"gitId":"tiewweijian"},"content":"                        || applicationStatus.toString().equals(REJECTED_STATUS)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":319,"author":{"gitId":"tiewweijian"},"content":"                    setInterviewStatus(new InterviewStatus(COMPLETED));","lastModifiedDate":"2022-03-24"},{"lineNumber":320,"author":{"gitId":"tiewweijian"},"content":"                }","lastModifiedDate":"2022-03-24"},{"lineNumber":321,"author":{"gitId":"tiewweijian"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"charmainehly":37,"tiewweijian":39,"domlimm":61,"LeeEnEn":15,"-":172}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIELD;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_KEYWORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.ContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":" * Finds and lists all candidates in TAlent Assistant™ whose description (in one of all of the fields)","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":" * contains any of the argument keywords.","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all candidates whose description contain any of \"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"            + \" The search can be conducted only on a specific field in candidates\u0027 description by specifying the\"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"            + PREFIX_FIELD + \" FIELD argument.\\n\"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"            + \"Parameters: \" + PREFIX_KEYWORD + \"KEYWORD [\" + PREFIX_KEYWORD + \"MORE_KEYWORDS]... \"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"            + PREFIX_FIELD + \"FIELD\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_KEYWORD + \"alice \" + PREFIX_KEYWORD + \"charlie \"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"            + PREFIX_FIELD + \"name\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"            + \"Allowable fields to be sorted by include course, email, phone, name, studentid.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"    private final ContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"    public FindCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"                String.format(Messages.MESSAGE_CANDIDATES_LISTED_OVERVIEW, model.getFilteredCandidateList().size()));","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"charmainehly":17,"domlimm":1,"-":32}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CANDIDATES;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Lists all candidates in the address book to the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all candidates in the system!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(PREDICATE_SHOW_ALL_CANDIDATES);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"        String message \u003d model.getAddressBook().getCandidateList().size() \u003e 0","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"                ? MESSAGE_SUCCESS","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"                : Messages.MESSAGE_NO_CANDIDATES_IN_SYSTEM;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"        return new CommandResult(message);","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charmainehly":4,"LeeEnEn":3,"lzan98":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":" * Schedules a candidate identified using it\u0027s displayed index from the address book for an interview","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":" * on a specified time slot.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"            + \": Schedules the candidate identified by the index number for an interview on given date and time.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            + \"Date and time given must not be in the past.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            + \"Parameters: INDEX (must be a positive integer) + /at + DATE (in dd/mm/yyyy format)\"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"            + \"TIME (in hh:mm format)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 /at 23/03/2022 13:30\";","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_INVALID_FORMAT_DATETIME \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"            \"Date and/or Time is not in the following format: dd/MM/yyyy HH:mm\";","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_INVALID_PAST_DATETIME \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"            \"Date and/or Time must not be in the past!\";","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_SCHEDULED_CANDIDATE_SUCCESS \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"            \"Successfully scheduled %1$s %2$s for interview on %3$s %4$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_DUPLICATE_CANDIDATE_INTERVIEW \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"            \"Interview for this candidate already exists!\";","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_CONFLICTING_INTERVIEW \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"            \"Interview for another candidate clashes with the proposed time slot!\";","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_CANDIDATE_NOT_AVAILABLE \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"            \"Candidate is not available on the proposed interview day!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_NOT_OFFICE_HOUR \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"            \"You are trying to schedule the interview outside of your office hours!\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"            + \"Your office hours are Mon-Fri, 8am - 6pm.\";","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    private final LocalDateTime interviewDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"     * Creates a ScheduleCommand to schedule the candidate at specified index for an","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"     * interview on {@code LocalDateTime}","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"    public ScheduleCommand(Index targetIndex, LocalDateTime interviewDateTime) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"        List\u003cCandidate\u003e lastShownList \u003d model.getFilteredCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_NO_CANDIDATES_IN_SYSTEM));","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"        Candidate candidateToInterview \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"        Interview toAdd \u003d new Interview(candidateToInterview, interviewDateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"        if (model.hasInterviewCandidate(toAdd)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CANDIDATE_INTERVIEW);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"        if (model.hasConflictingInterview(toAdd)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"            throw new CommandException(MESSAGE_CONFLICTING_INTERVIEW);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"charmainehly"},"content":"        if (!toAdd.hasMatchingAvailability()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"charmainehly"},"content":"            throw new CommandException(MESSAGE_CANDIDATE_NOT_AVAILABLE);","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"        if (!toAdd.isDuringOfficeHour()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"            throw new CommandException(MESSAGE_NOT_OFFICE_HOUR);","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"        model.addInterview(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"        return new CommandResult(String.format(MESSAGE_SCHEDULED_CANDIDATE_SUCCESS, toAdd.getCandidate().getName(),","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"                toAdd.getCandidate().getStudentId(), toAdd.getInterviewDate(), toAdd.getInterviewStartTime()));","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"                || (other instanceof ScheduleCommand // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 targetIndex.equals(((ScheduleCommand) other).targetIndex)","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 interviewDateTime.equals(((ScheduleCommand) other).interviewDateTime)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"charmainehly":18,"lzan98":90}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTKEY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":" * Reorders all candidates in TAlent Assistant™ based on the sort key provided.","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":" * The sort key will point to a specific candidate field.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts all candidates by the field specified \"","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"            + \" The search can be conducted only on a specific field in candidates\u0027 description by specifying the\"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"            + PREFIX_SORTKEY + \" SORTKEY argument.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"            + \"Parameters: \" + PREFIX_SORTKEY + \"SORTKEY \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_SORTKEY + \"name\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"            + \"Allowable fields to be sorted by include course, email, phone, name, studentid.\";","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    private final Comparator\u003cCandidate\u003e sortComparator;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"    private final String sortKey;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"     * Creates new SortCommand object.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"     * @param sortComparator contains the Comparator for sorting the list of candidates","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"     * @param sortKey contains the valid sort key for equality state check","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    public SortCommand(Comparator\u003cCandidate\u003e sortComparator, String sortKey) {","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        requireNonNull(sortComparator);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        requireNonNull(sortKey);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"        this.sortComparator \u003d sortComparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"        this.sortKey \u003d sortKey;","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"        model.updateSortedCandidateList(sortComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"                String.format(Messages.MESSAGE_CANDIDATES_LISTED_OVERVIEW, model.getFilteredCandidateList().size()));","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof SortCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 sortKey.equals(((SortCommand) other).sortKey)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"charmainehly":53,"domlimm":6}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":" * Lists all candidates in the address book to the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_NO_INTERVIEWS_IN_SYSTEM \u003d \"No interviews scheduled yet!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed below are your upcoming interviews: \\n\";","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        String message \u003d model.getInterviewSchedule().getInterviewList().size() \u003e 0","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"                ? MESSAGE_SUCCESS","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"                + model.getInterviewSchedule().getInterviewList()","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"                .stream()","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"                .sorted(Comparator.comparing(Interview::getInterviewDateTime))","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"                .map(Object::toString)","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"                .collect(Collectors.joining(\"\\n\"))","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"                : MESSAGE_NO_INTERVIEWS_IN_SYSTEM;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        return new CommandResult(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"charmainehly":1,"lzan98":34}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"charmainehly":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SENIORITY;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"                        PREFIX_COURSE, PREFIX_SENIORITY, PREFIX_TAG, PREFIX_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_NAME, PREFIX_PHONE, PREFIX_COURSE,","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"                PREFIX_SENIORITY, PREFIX_AVAILABILITY)","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"        StudentId id \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        Email email \u003d new Email(id.studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        Course course \u003d ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get());","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        Seniority seniority \u003d ParserUtil.parseSeniority(argMultimap.getValue(PREFIX_SENIORITY).get());","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"tiewweijian"},"content":"        ApplicationStatus applicationStatus \u003d new ApplicationStatus(ApplicationStatus.PENDING_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"tiewweijian"},"content":"        InterviewStatus interviewStatus \u003d new InterviewStatus(InterviewStatus.NOT_SCHEDULED);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"        Availability availability \u003d ParserUtil.parseAvailability(argMultimap.getValue(PREFIX_AVAILABILITY).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"        Candidate candidate \u003d new Candidate(id, name, phone, email, course, seniority, tagList,","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"                applicationStatus, interviewStatus, availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"        return new AddCommand(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"domlimm":24,"tiewweijian":2,"LeeEnEn":2,"-":47}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"            return new ViewCommand();","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charmainehly":4,"lzan98":8,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"    public static final Prefix PREFIX_COURSE \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    public static final Prefix PREFIX_SENIORITY \u003d new Prefix(\"yr/\");","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"    public static final Prefix PREFIX_KEYWORD \u003d new Prefix(\"k/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    public static final Prefix PREFIX_FIELD \u003d new Prefix(\"f/\");","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"    public static final Prefix PREFIX_SORTKEY \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"    public static final Prefix PREFIX_APPLICATION_STATUS \u003d new Prefix(\"as/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"    public static final Prefix PREFIX_INTERVIEW_STATUS \u003d new Prefix(\"is/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"    public static final Prefix PREFIX_AVAILABILITY \u003d new Prefix(\"avail/\");","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"charmainehly":3,"domlimm":3,"tiewweijian":2,"LeeEnEn":1,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SENIORITY;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.EditCommand.EditCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"                        PREFIX_EMAIL, PREFIX_COURSE, PREFIX_SENIORITY, PREFIX_TAG, PREFIX_APPLICATION_STATUS,","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"                        PREFIX_INTERVIEW_STATUS, PREFIX_AVAILABILITY);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor editCandidateDescriptor \u003d new EditCandidateDescriptor();","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setStudentId(ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"        if (argMultimap.getValue(PREFIX_COURSE).isPresent()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setCourse(ParserUtil.parseCourse(argMultimap.getValue(PREFIX_COURSE).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"        if (argMultimap.getValue(PREFIX_SENIORITY).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"                    .setSeniority(ParserUtil.parseSeniority(argMultimap.getValue(PREFIX_SENIORITY).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCandidateDescriptor::setTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"tiewweijian"},"content":"        if (argMultimap.getValue(PREFIX_APPLICATION_STATUS).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setApplicationStatus(","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"tiewweijian"},"content":"                    ParserUtil.parseApplicationStatus(argMultimap.getValue(PREFIX_APPLICATION_STATUS).get()));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"tiewweijian"},"content":"        if (argMultimap.getValue(PREFIX_INTERVIEW_STATUS).isPresent()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setInterviewStatus(","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"tiewweijian"},"content":"                    ParserUtil.parseInterviewStatus(argMultimap.getValue(PREFIX_INTERVIEW_STATUS).get()));","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"        if (argMultimap.getValue(PREFIX_AVAILABILITY).isPresent()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"            editCandidateDescriptor.setAvailability(","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"LeeEnEn"},"content":"                    ParserUtil.parseAvailability(argMultimap.getValue(PREFIX_AVAILABILITY).get()));","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"        if (!editCandidateDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"charmainehly"},"content":"        return new EditCommand(index, editCandidateDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"charmainehly":15,"tiewweijian":11,"domlimm":11,"LeeEnEn":3,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIELD;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_KEYWORD;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.predicate.CandidateContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.CourseContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_KEYWORD, PREFIX_FIELD);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"        // throws exception if no keywords are specified","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_KEYWORD)","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e keywords \u003d argMultimap.getAllValues(PREFIX_KEYWORD);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"        Optional\u003cString\u003e field \u003d argMultimap.getValue(PREFIX_FIELD);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"        String fieldString;","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        if (field.isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"            fieldString \u003d \"\";","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"            fieldString \u003d field.get().toLowerCase();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"        switch (fieldString) {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        case \"email\":","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"            return new FindCommand(new EmailContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"        case \"course\":","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"            return new FindCommand(new CourseContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"        case \"name\":","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        case \"candidate\":","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        case \"\":","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"            return new FindCommand(new CandidateContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        case \"phone\":","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"            return new FindCommand(new PhoneContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        case \"studentid\":","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"            return new FindCommand(new StudentIdContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        default:","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"            return new FindCommand(new CandidateContainsKeywordsPredicate(Collections.\u003cString\u003eemptyList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"charmainehly":46,"domlimm":5,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_INVALID_FORMAT_DATETIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_INVALID_PAST_DATETIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"     * Parses a {@code String id} into a {@code StudentId}.","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"    public static StudentId parseStudentId(String id) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"        String updatedId \u003d id.trim().toUpperCase();","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        if (!StudentId.isValidId(updatedId)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"        return new StudentId(updatedId);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"domlimm"},"content":"     * Parses a {@code String course} into a {@code Course}.","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"domlimm"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"domlimm"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"domlimm"},"content":"     * @throws ParseException if the given {@code course} is invalid.","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"domlimm"},"content":"    public static Course parseCourse(String course) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"domlimm"},"content":"        requireNonNull(course);","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"domlimm"},"content":"        String trimmedCourse \u003d course.trim();","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"domlimm"},"content":"        if (!Course.isValidCourse(trimmedCourse)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"domlimm"},"content":"            throw new ParseException(Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"domlimm"},"content":"        return new Course(trimmedCourse);","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"domlimm"},"content":"     * Parses a {@code String seniority} into a {@code Seniority}.","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"domlimm"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"domlimm"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"domlimm"},"content":"     * @throws ParseException if the given {@code seniority} is invalid.","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"domlimm"},"content":"    public static Seniority parseSeniority(String seniority) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"domlimm"},"content":"        requireNonNull(seniority);","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"domlimm"},"content":"        String trimmedSeniority \u003d seniority.trim();","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"domlimm"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"domlimm"},"content":"            int seniorityInt \u003d Integer.parseInt(trimmedSeniority.substring(trimmedSeniority.length() - 1));","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"domlimm"},"content":"            if (!Seniority.isValidSeniority(seniorityInt)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"domlimm"},"content":"                throw new ParseException(Seniority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":156,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"domlimm"},"content":"            return new Seniority(seniorityInt);","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"domlimm"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"domlimm"},"content":"            throw new ParseException(Seniority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"tiewweijian"},"content":"     * Parses a {@code String applicationStatus} into an {@code ApplicationStatus}.","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"tiewweijian"},"content":"     * @param applicationStatus the application status","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"tiewweijian"},"content":"     * @return the ApplicationStatus of the string","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"tiewweijian"},"content":"     * @throws ParseException if the given {@code applicationStatus} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"tiewweijian"},"content":"    public static ApplicationStatus parseApplicationStatus (String applicationStatus) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"tiewweijian"},"content":"        requireNonNull(applicationStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"tiewweijian"},"content":"        String trimmedStatus \u003d applicationStatus.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"tiewweijian"},"content":"        if (!ApplicationStatus.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"tiewweijian"},"content":"            throw new ParseException(ApplicationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"tiewweijian"},"content":"        return new ApplicationStatus(trimmedStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"tiewweijian"},"content":"     * Parses a {@code String interviewStatus} into an {@code InterviewStatus}.","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"tiewweijian"},"content":"     * @param interviewStatus the application status","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"tiewweijian"},"content":"     * @return the InterviewStatus of the string","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"tiewweijian"},"content":"     * @throws ParseException if the given {@code interviewStatus} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"tiewweijian"},"content":"    public static InterviewStatus parseInterviewStatus (String interviewStatus) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"tiewweijian"},"content":"        requireNonNull(interviewStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"tiewweijian"},"content":"        String trimmedStatus \u003d interviewStatus.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"tiewweijian"},"content":"        if (!InterviewStatus.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"tiewweijian"},"content":"            throw new ParseException(InterviewStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"tiewweijian"},"content":"        return new InterviewStatus(trimmedStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":222,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":223,"author":{"gitId":"LeeEnEn"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-03-17"},{"lineNumber":224,"author":{"gitId":"LeeEnEn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-17"},{"lineNumber":225,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":226,"author":{"gitId":"LeeEnEn"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-03-17"},{"lineNumber":227,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":228,"author":{"gitId":"LeeEnEn"},"content":"    public static Availability parseAvailability(String availability) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":229,"author":{"gitId":"LeeEnEn"},"content":"        requireNonNull(availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":230,"author":{"gitId":"LeeEnEn"},"content":"        String trimmedAvailability \u003d availability.trim();","lastModifiedDate":"2022-03-17"},{"lineNumber":231,"author":{"gitId":"LeeEnEn"},"content":"        if (!Availability.isValidDay(trimmedAvailability)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"LeeEnEn"},"content":"            throw new ParseException(Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":233,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":234,"author":{"gitId":"LeeEnEn"},"content":"        return new Availability(trimmedAvailability);","lastModifiedDate":"2022-03-17"},{"lineNumber":235,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":236,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":237,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":238,"author":{"gitId":"lzan98"},"content":"     * Parses a {@code String dateTime} into a {@code LocalDateTime}.","lastModifiedDate":"2022-03-18"},{"lineNumber":239,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-18"},{"lineNumber":240,"author":{"gitId":"lzan98"},"content":"     * @param dateTime The given interview date and time.","lastModifiedDate":"2022-03-18"},{"lineNumber":241,"author":{"gitId":"lzan98"},"content":"     * @return the LocalDateTime of the string.","lastModifiedDate":"2022-03-18"},{"lineNumber":242,"author":{"gitId":"lzan98"},"content":"     * @throws ParseException if the given {@code dateTime} is in the past or has an invalid format.","lastModifiedDate":"2022-03-18"},{"lineNumber":243,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":244,"author":{"gitId":"lzan98"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"lzan98"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"lzan98"},"content":"        LocalDateTime formattedDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"lzan98"},"content":"            formattedDateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"lzan98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"lzan98"},"content":"            throw new ParseException(MESSAGE_INVALID_FORMAT_DATETIME);","lastModifiedDate":"2022-03-18"},{"lineNumber":251,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":252,"author":{"gitId":"lzan98"},"content":"        if (!Interview.isValidDateTime(formattedDateTime)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":253,"author":{"gitId":"lzan98"},"content":"            throw new ParseException(MESSAGE_INVALID_PAST_DATETIME);","lastModifiedDate":"2022-03-23"},{"lineNumber":254,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"lzan98"},"content":"        return formattedDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"domlimm":63,"tiewweijian":32,"LeeEnEn":15,"lzan98":27,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"        String[] input;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"        Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"            input \u003d this.parseDelimitedCommand(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"            index \u003d ParserUtil.parseIndex(input[0]);","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"        final LocalDateTime interviewSlot \u003d ParserUtil.parseDateTime(input[1]);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"        return new ScheduleCommand(index, interviewSlot);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * Validates a 2-part command separated by a delimiter and returns the parts if command is valid.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @param command The 2-part command to be validated.","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     * @return The 2 parts of the command in a String array.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     * @throws ParseException If the command is not in a valid format.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    private String[] parseDelimitedCommand(String command)","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"            throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        final String[] validDelimiter \u003d command.split(\" /at \");","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"        if (validDelimiter.length \u003c 2) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        return validDelimiter;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"lzan98":51}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTKEY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORTKEY);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        // throws exception if no sort key is specified","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORTKEY)","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        String sortKey \u003d argMultimap.getValue(PREFIX_SORTKEY).get().toLowerCase();","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparator;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        switch (sortKey) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"        case \"course\":","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"            sortComparator \u003d Comparator.comparing(l -\u003e l.getCourse().toString().toLowerCase());","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"        case \"email\":","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"            sortComparator \u003d Comparator.comparing(l -\u003e l.getEmail().toString().toLowerCase());","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"        case \"phone\":","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"            sortComparator \u003d Comparator.comparing(l -\u003e l.getPhone().toString().toLowerCase());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        case \"name\":","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"            sortComparator \u003d Comparator.comparing(l -\u003e l.getName().toString().toLowerCase());","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        case \"studentid\":","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"            sortComparator \u003d Comparator.comparing(l -\u003e l.getStudentId().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"            break;","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        default:","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"        return new SortCommand(sortComparator, sortKey);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"charmainehly":66,"domlimm":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.UniqueCandidateList;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":" * Duplicates are not allowed (by .isSameCandidate comparison)","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"    private final UniqueCandidateList candidates;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"        candidates \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"     * Creates an AddressBook using the Candidates in the {@code toBeCopied}","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"     * Replaces the contents of the candidate list with {@code candidates}.","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"     * {@code candidates} must not contain duplicate candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates(List\u003cCandidate\u003e candidates) {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        this.candidates.setCandidates(candidates);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"     * Reorders the contents of the candidate list by comparator on {@code sortKey}.","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"     * {@code candidates} must not contain duplicate candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"    public void sortCandidates(List\u003cCandidate\u003e candidates, Comparator\u003cCandidate\u003e sortComparator) {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(candidates);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(sortComparator);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        List\u003cCandidate\u003e candidatesCopy \u003d new ArrayList\u003cCandidate\u003e(candidates);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        candidatesCopy.sort(sortComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        this.candidates.setCandidates(candidatesCopy);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        setCandidates(newData.getCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"    //// candidate-level operations","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"     * Returns true if a candidate with the same identity as {@code candidate} exists in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"    public boolean hasCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"        requireNonNull(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"        return candidates.contains(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"charmainehly"},"content":"     * Adds a candidate to the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"     * The candidate must not already exist in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"    public void addCandidate(Candidate p) {","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"        candidates.add(p);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"     * Replaces the given candidate {@code target} in the list with {@code editedCandidate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"     * The candidate identity of {@code editedCandidate} must not be the same as another existing candidate in the","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"charmainehly"},"content":"     * address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate(Candidate target, Candidate editedCandidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"domlimm"},"content":"        requireNonNull(editedCandidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"charmainehly"},"content":"        candidates.setCandidate(target, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"charmainehly"},"content":"    public void removeCandidate(Candidate key) {","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"domlimm"},"content":"        candidates.remove(key);","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"        return candidates.asUnmodifiableObservableList().size() + \" candidates\";","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"charmainehly"},"content":"    public ObservableList\u003cCandidate\u003e getCandidateList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"domlimm"},"content":"        return candidates.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 candidates.equals(((AddressBook) other).candidates));","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"domlimm"},"content":"        return candidates.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":36,"domlimm":9,"-":90}},{"path":"src/main/java/seedu/address/model/InterviewSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"public class InterviewSchedule implements ReadOnlyInterviewSchedule {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"    private final UniqueInterviewList interviews;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"        interviews \u003d new UniqueInterviewList();","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    public InterviewSchedule() {}","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"     * Creates an InterviewSchedule using the Interviews in the {@code toBeCopied}","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    public InterviewSchedule(ReadOnlyInterviewSchedule toBeCopied) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        this();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"     * Replaces the contents of the interview list with {@code interviews}.","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"     * {@code interviews} must not contain duplicate interviews.","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        this.interviews.setInterviews(interviews);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * Resets the existing data of this {@code InterviewSchedule} with {@code newData}.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    public void resetData(ReadOnlyInterviewSchedule newData) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        setInterviews(newData.getInterviewList());","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"     * Returns true if an interview with the same candidate as {@code interview} exists in the interview schedule.","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"    public boolean hasCandidate(Interview interview) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        requireNonNull(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        return interviews.containsSameCandidate(interview);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"     * Returns true if an interview with the same date and time slot as {@code interview}","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"     * exists in the interview schedule.","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"    public boolean hasConflictingInterview(Interview interview) {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        requireNonNull(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"        return interviews.containsConflictingInterview(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"     * Adds an interview to the interview schedule.","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"     * The interview must not already exist in the interview schedule.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"        interviews.add(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"    // Edit function not implemented yet, code commented out to reduce test coverage.","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"    /* public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"        requireNonNull(editedInterview);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"        interviews.setInterview(target, editedInterview);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"    }*/","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"    // Delete function not implemented yet, code commented out to reduce test coverage.","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"    /* public void removeInterview(Interview key) {","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"        interviews.remove(key);","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"    }*/","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"        return interviews.asUnmodifiableObservableList().size() + \" interviews\";","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"    public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"        return interviews.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"                || (other instanceof InterviewSchedule // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 interviews.equals(((InterviewSchedule) other).interviews));","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"        return interviews.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"lzan98":102}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"    Predicate\u003cCandidate\u003e PREDICATE_SHOW_ALL_CANDIDATES \u003d unused -\u003e true;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    /** {@code Predicate} that always evaluate to false */","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    Predicate\u003cCandidate\u003e PREDICATE_SHOW_EMPTY_LIST \u003d unused -\u003e false;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"     * Returns the user prefs\u0027 interview list file path.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    Path getInterviewScheduleFilePath();","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"     * Sets the user prefs\u0027 interview list file path.","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    void setInterviewScheduleFilePath(Path interviewListFilePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"     * Replaces interview list data with the data in {@code interviewList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"    void setInterviewSchedule(ReadOnlyInterviewSchedule interviewList);","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"    /** Returns the InterviewSchedule */","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"    ReadOnlyInterviewSchedule getInterviewSchedule();","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"     * Returns true if a candidate with the same identity as {@code candidate} exists in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"    boolean hasCandidate(Candidate candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"     * Deletes the given candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"     * The candidate must exist in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"charmainehly"},"content":"    void deleteCandidate(Candidate target);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"     * Adds the given candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"     * {@code candidate} must not already exist in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"    void addCandidate(Candidate candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"     * Replaces the given candidate {@code target} with {@code editedCandidate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"     * The candidate identity of {@code editedCandidate} must not be the same as another existing candidate","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"charmainehly"},"content":"     * in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"charmainehly"},"content":"    void setCandidate(Candidate target, Candidate editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"    boolean hasInterviewCandidate(Interview interview);","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"    boolean hasConflictingInterview(Interview interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"    //void deleteInterview(Interview target);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"    void addInterview(Interview interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"    //void setInterview(Interview target, Interview editedInterview);","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"charmainehly"},"content":"    /** Returns an unmodifiable view of the filtered candidate list */","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"    ObservableList\u003cCandidate\u003e getFilteredCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"     * Updates the filter of the filtered candidate list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"charmainehly"},"content":"    void updateFilteredCandidateList(Predicate\u003cCandidate\u003e predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"charmainehly"},"content":"     * Updates the sorting order of filtered candidate list to sort by the given {@code sortComparator}.","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"charmainehly"},"content":"     * @throws NullPointerException if {@code sortKey} is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"charmainehly"},"content":"    void updateSortedCandidateList(Comparator\u003cCandidate\u003e sortComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"charmainehly":24,"domlimm":2,"lzan98":30,"-":72}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    private final InterviewSchedule interviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    private final FilteredList\u003cCandidate\u003e filteredCandidates;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyInterviewSchedule interviewList,","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \", InterviewSchedule: \" + interviewList","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"        this.interviewSchedule \u003d new InterviewSchedule(interviewList);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"        filteredCandidates \u003d new FilteredList\u003c\u003e(this.addressBook.getCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        this(new AddressBook(), new InterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"    public Path getInterviewScheduleFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"        return userPrefs.getInterviewListFilePath();","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"    public void setInterviewScheduleFilePath(Path interviewListFilePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"        requireNonNull(interviewListFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"        userPrefs.setInterviewListFilePath(interviewListFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"charmainehly"},"content":"    public boolean hasCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"domlimm"},"content":"        requireNonNull(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"charmainehly"},"content":"        return addressBook.hasCandidate(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"charmainehly"},"content":"    public void deleteCandidate(Candidate target) {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"charmainehly"},"content":"        addressBook.removeCandidate(target);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"charmainehly"},"content":"    public void addCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"charmainehly"},"content":"        addressBook.addCandidate(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"charmainehly"},"content":"        updateFilteredCandidateList(PREDICATE_SHOW_ALL_CANDIDATES);","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate(Candidate target, Candidate editedCandidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"domlimm"},"content":"        requireAllNonNull(target, editedCandidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"charmainehly"},"content":"        addressBook.setCandidate(target, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InterviewSchedule \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"    public void setInterviewSchedule(ReadOnlyInterviewSchedule interviewList) {","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"lzan98"},"content":"        this.interviewSchedule.resetData(interviewList);","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"    public ReadOnlyInterviewSchedule getInterviewSchedule() {","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"        return interviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"lzan98"},"content":"    public boolean hasInterviewCandidate(Interview interview) {","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"lzan98"},"content":"        requireNonNull(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"lzan98"},"content":"        return interviewSchedule.hasCandidate(interview);","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"lzan98"},"content":"    public boolean hasConflictingInterview(Interview interview) {","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"lzan98"},"content":"        requireNonNull(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"lzan98"},"content":"        return interviewSchedule.hasConflictingInterview(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"lzan98"},"content":"    /*@Override","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"lzan98"},"content":"    public void deleteInterview(Interview target) {","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.removeInterview(target);","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"lzan98"},"content":"    }*/","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"lzan98"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.addInterview(interview);","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"charmainehly"},"content":"        //updateFilteredCandidateList(PREDICATE_SHOW_ALL_CANDIDATES);","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"lzan98"},"content":"    /*@Override","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"lzan98"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"lzan98"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.setInterview(target, editedInterview);","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"lzan98"},"content":"    }*/","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"charmainehly"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered/Sort Candidate List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":177,"author":{"gitId":"charmainehly"},"content":"     * Returns an unmodifiable view of the list of {@code Candidate} backed by the internal list of","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"charmainehly"},"content":"    public ObservableList\u003cCandidate\u003e getFilteredCandidateList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"domlimm"},"content":"        return filteredCandidates;","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":186,"author":{"gitId":"charmainehly"},"content":"    public void updateFilteredCandidateList(Predicate\u003cCandidate\u003e predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":188,"author":{"gitId":"domlimm"},"content":"        filteredCandidates.setPredicate(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"charmainehly"},"content":"    public void updateSortedCandidateList(Comparator\u003cCandidate\u003e sortComparator) {","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(sortComparator);","lastModifiedDate":"2022-03-14"},{"lineNumber":194,"author":{"gitId":"charmainehly"},"content":"        addressBook.sortCandidates(filteredCandidates, sortComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":213,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 filteredCandidates.equals(other.filteredCandidates)","lastModifiedDate":"2022-03-18"},{"lineNumber":214,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 interviewSchedule.equals(other.interviewSchedule);","lastModifiedDate":"2022-03-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":20,"domlimm":6,"lzan98":63,"-":128}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"     * Returns an unmodifiable view of the candidates list.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"     * This list will not contain any duplicate candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"    ObservableList\u003cCandidate\u003e getCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":3,"domlimm":1,"-":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyInterviewSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":" * Unmodifiable view of an interview list","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"public interface ReadOnlyInterviewSchedule {","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"     * Returns an unmodifiable view of the candidates list.","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"     * This list will not contain any duplicate candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    ObservableList\u003cInterview\u003e getInterviewList();","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"charmainehly":2,"lzan98":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    Path getInterviewListFilePath();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"lzan98":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    private Path interviewListFilePath \u003d Paths.get(\"data\" , \"interviewlist.json\");","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        setInterviewListFilePath(newUserPrefs.getInterviewListFilePath());","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    public Path getInterviewListFilePath() {","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"        return interviewListFilePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    public void setInterviewListFilePath(Path interviewListFilePath) {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"        requireNonNull(interviewListFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"        this.interviewListFilePath \u003d interviewListFilePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 interviewListFilePath.equals(o.interviewListFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"        return Objects.hash(guiSettings, addressBookFilePath,","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"                interviewListFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"        sb.append(\"\\nLocal AddressBook data file location : \" + addressBookFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"        sb.append(\"\\nLocal InterviewSchedule data file location : \" + interviewListFilePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lzan98":17,"-":84}},{"path":"src/main/java/seedu/address/model/candidate/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":" * Represents a Candidate\u0027s address in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charmainehly":1,"domlimm":1,"-":55}},{"path":"src/main/java/seedu/address/model/candidate/ApplicationStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s application status in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"public class ApplicationStatus {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"            \"Application Status should be Pending, Accepted or Rejected\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"    public static final String PENDING_STATUS \u003d \"Pending\";","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    public static final String ACCEPTED_STATUS \u003d \"Accepted\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"    public static final String REJECTED_STATUS \u003d \"Rejected\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    public final String statusType;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"     * Constructor for Application Status.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"     * @param statusType the string value of the status.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"    public ApplicationStatus(String statusType) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"        String input \u003d statusType.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"        String statusTemp \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"        if (input.equals(PENDING_STATUS.toLowerCase())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"            statusTemp \u003d PENDING_STATUS;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        } else if (input.equals(ACCEPTED_STATUS.toLowerCase())) {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"            statusTemp \u003d ACCEPTED_STATUS;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"        } else if (input.equals(REJECTED_STATUS.toLowerCase())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"            statusTemp \u003d REJECTED_STATUS;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"        this.statusType \u003d statusTemp;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tiewweijian"},"content":"     * Check if the status is a valid status.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tiewweijian"},"content":"     * @param statusType the status type.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"     * @return true if it is valid, false if not valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"    public static boolean isValidStatus(String statusType) {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"tiewweijian"},"content":"        String input \u003d statusType.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tiewweijian"},"content":"        if (input.equals(PENDING_STATUS.toLowerCase())","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"                || input.equals(ACCEPTED_STATUS.toLowerCase())","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"                || input.equals(REJECTED_STATUS.toLowerCase())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"tiewweijian"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"tiewweijian"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"     * Returns the string value of the Status.","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"     * @return a string of the status.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"tiewweijian"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"tiewweijian"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"tiewweijian"},"content":"        return this.statusType;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"tiewweijian"},"content":"     * Check if the statuses are equal.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"tiewweijian"},"content":"     * @param other the other object of the same class.","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"tiewweijian"},"content":"     * @return true if equal, false if not.","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"tiewweijian"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"tiewweijian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"tiewweijian"},"content":"        return ((ApplicationStatus) other).statusType.equals(this.statusType);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"tiewweijian"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"domlimm":15,"tiewweijian":58}},{"path":"src/main/java/seedu/address/model/candidate/Availability.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":" * Represents a Candidate\u0027s availability.","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDay(String)}","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"public class Availability {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Availability should consists of a list of 5 numbers, \"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"            + \"ranging from 1 to 5, separated by commas \u0027,\u0027\\nEg. avail/1,2,3,4,5\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-5]{1}+(?:,[1-5]{1}+)*$\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"    private static final String[] WEEK \u003d {\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"};","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"    public final String availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"    private List\u003cString\u003e availabilityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"     * Constructs a {@code Availability}.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"     * @param availability A valid available date.","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"    public Availability(String availability) {","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"        requireNonNull(availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"        checkArgument(isValidDay(availability), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"        this.availabilityList \u003d toList(availability);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"     * Returns true if a given string is a valid date format.","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"    public static boolean isValidDay(String test) {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"            return test.split(\",\").length \u003c\u003d 5;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"        return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"                || (other instanceof Availability // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"                \u0026\u0026 availability.equals(((Availability) other).availability)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"        return availability.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"LeeEnEn"},"content":"    public String toString() {","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"LeeEnEn"},"content":"        return availability;","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"LeeEnEn"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"LeeEnEn"},"content":"        return availabilityList;","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"LeeEnEn"},"content":"    private List\u003cString\u003e toList(String availability) {","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"LeeEnEn"},"content":"        HashMap\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"        for (String day: availability.split(\",\")) {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"            map.put(day, WEEK[Integer.parseInt(day) - 1]);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"LeeEnEn"},"content":"        availabilityList.addAll(map.values());","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"LeeEnEn"},"content":"        return availabilityList;","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"domlimm":1,"LeeEnEn":75}},{"path":"src/main/java/seedu/address/model/candidate/Candidate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"public class Candidate {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    private final Course course;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    private final Seniority seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"    private final ApplicationStatus applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"    private final InterviewStatus interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"    private final Availability availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    public Candidate(StudentId studentId, Name name, Phone phone, Email email, Course course, Seniority seniority,","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"            Set\u003cTag\u003e tags, ApplicationStatus applicationStatus, InterviewStatus interviewStatus,","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"            Availability availability) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        requireAllNonNull(studentId, name, phone, email, course, seniority, tags, availability);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        this.course \u003d course;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        this.seniority \u003d seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"        this.interviewStatus \u003d interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        return studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"    public Course getCourse() {","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"        return course;","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"    public Seniority getSeniority() {","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"        return seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tiewweijian"},"content":"    public ApplicationStatus getApplicationStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"tiewweijian"},"content":"        return applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"tiewweijian"},"content":"    public InterviewStatus getInterviewStatus() {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"tiewweijian"},"content":"        return interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"    public Availability getAvailability() {","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"LeeEnEn"},"content":"        return availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"     * Returns true if both candidates have the same name.","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"domlimm"},"content":"     * This defines a weaker notion of equality between two candidates.","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"    public boolean isSameCandidate(Candidate otherCandidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"domlimm"},"content":"        if (otherCandidate \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"        return otherCandidate !\u003d null","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"charmainehly"},"content":"     * Returns true if both candidates have the same identity and data fields.","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"domlimm"},"content":"     * This defines a stronger notion of equality between two candidates.","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"domlimm"},"content":"        if (!(other instanceof Candidate)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"domlimm"},"content":"        Candidate otherCandidate \u003d (Candidate) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"domlimm"},"content":"        return otherCandidate.getStudentId().equals(getStudentId())","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getName().equals(getName())","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getCourse().equals(getCourse())","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getSeniority().equals(getSeniority())","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getTags().equals(getTags())","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getApplicationStatus().equals(getApplicationStatus())","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getInterviewStatus().equals(getInterviewStatus())","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 otherCandidate.getAvailability().equals(getAvailability());","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"domlimm"},"content":"        return Objects.hash(studentId, name, phone, email, course, seniority, tags,","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"domlimm"},"content":"                applicationStatus, interviewStatus, availability);","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"domlimm"},"content":"        builder.append(\"Student ID: \").append(getStudentId())","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"domlimm"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"domlimm"},"content":"                .append(getName())","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"domlimm"},"content":"                .append(\"; Course: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"                .append(getCourse())","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"domlimm"},"content":"                .append(\"; Seniority: \")","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"domlimm"},"content":"                .append(getSeniority());","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"tiewweijian"},"content":"        builder.append(\"; Application Status: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"LeeEnEn"},"content":"                .append(getApplicationStatus())","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"LeeEnEn"},"content":"                .append(\"; Interview Status: \")","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"LeeEnEn"},"content":"                .append(getInterviewStatus())","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"LeeEnEn"},"content":"                .append(\"; Availability: \")","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"LeeEnEn"},"content":"                .append(getAvailability());","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"charmainehly":3,"domlimm":49,"tiewweijian":13,"LeeEnEn":11,"-":94}},{"path":"src/main/java/seedu/address/model/candidate/Course.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s course in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCourse(String)}","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"public class Course {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"            \"Courses should only contain alphabets, and it should not be blank\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"            + \"Accepting only an exact match of a Computing course from this list\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"            + \"1. Business Analytics\\n2. Computer Engineering\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"            + \"3. Computer Science\\n4. Information Security\\n5. Information Systems\";","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    private static final String[] COURSES \u003d {","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"        \"Business Analytics\", \"Computer Engineering\", \"Computer Science\",","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"        \"Information Security\", \"Information Systems\" };","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    private static final int[] LENGTHS \u003d { 18, 20, 16, 20, 19 };","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    private static final int MAX_LENGTH \u003d 20;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    public final String course;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     * Constructs a {@code StudentId}.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     * @param course A valid course.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"    public Course(String course) {","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"        requireNonNull(course);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        checkArgument(isValidCourse(course), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        this.course \u003d course;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"     * Returns true if a given string is a valid course.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    public static boolean isValidCourse(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        if (test.length() \u003e MAX_LENGTH) {","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"            return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        for (int index \u003d 0; index \u003c COURSES.length; ++index) {","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"            if (test.equals(COURSES[index]) \u0026\u0026 test.length() \u003d\u003d LENGTHS[index]) {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"                return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        return course;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"                || (other instanceof Course // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 course.equals(((Course) other).course)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"        return course.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"domlimm":68}},{"path":"src/main/java/seedu/address/model/candidate/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s email in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    private static final String NUS_DOMAIN \u003d \"@u.nus.edu\";","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        String emailWithDomain \u003d email.contains(\"@\")","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"                ? email : email + NUS_DOMAIN;","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        checkArgument(isValidEmail(emailWithDomain), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        value \u003d emailWithDomain;","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"domlimm":9,"-":67}},{"path":"src/main/java/seedu/address/model/candidate/InterviewStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s interview status in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"public class InterviewStatus {","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"            \"Interview Status should be Pending, Interviewing or Not Interviewed\";","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"    public static final String NOT_SCHEDULED \u003d \"Not Scheduled\";","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"    public static final String SCHEDULED \u003d \"Scheduled\";","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"    public static final String COMPLETED \u003d \"Completed\";","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    public final String interviewStatus;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"     * Constructor for Interview Status.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"     * @param interviewStatusType the string value of the status.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"    public InterviewStatus(String interviewStatusType) {","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"        String input \u003d interviewStatusType.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"        String statusTemp \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"        input \u003d input.replaceAll(\" \", \"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"        if (input.equals(SCHEDULED.toLowerCase())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tiewweijian"},"content":"            statusTemp \u003d SCHEDULED;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"        } else if (input.equals(COMPLETED.toLowerCase())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"            statusTemp \u003d COMPLETED;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"        } else if (input.equals(NOT_SCHEDULED","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"tiewweijian"},"content":"                .replaceAll(\" \", \"\").toLowerCase())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tiewweijian"},"content":"            statusTemp \u003d NOT_SCHEDULED;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        this.interviewStatus \u003d statusTemp;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"     * Check if the status is a valid status.`","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"     * @param interviewStatusType the status type.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"tiewweijian"},"content":"     * @return true if it is valid, false if not valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tiewweijian"},"content":"    public static boolean isValidStatus(String interviewStatusType) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"        String input \u003d interviewStatusType.toLowerCase();","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"tiewweijian"},"content":"        input \u003d input.replaceAll(\" \", \"\");","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"tiewweijian"},"content":"        if (input.equals(SCHEDULED.toLowerCase())","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tiewweijian"},"content":"                || input.equals(COMPLETED.toLowerCase())","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"                || input.equals(NOT_SCHEDULED.replaceAll(\" \", \"\")","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tiewweijian"},"content":"                .toLowerCase())) {","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"        } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"            return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"tiewweijian"},"content":"     * Returns the string value of the Status.","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"tiewweijian"},"content":"     * @return a string of the status.","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"tiewweijian"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"tiewweijian"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"tiewweijian"},"content":"        return interviewStatus;","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"tiewweijian"},"content":"     * Check if the statuses are equal.","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"tiewweijian"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"tiewweijian"},"content":"     * @param other the other object of the same class.","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"tiewweijian"},"content":"     * @return true if equal, false if not.","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"tiewweijian"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"tiewweijian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"tiewweijian"},"content":"        return ((InterviewStatus) other).interviewStatus.equals(this.interviewStatus);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"tiewweijian"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"domlimm":9,"tiewweijian":74}},{"path":"src/main/java/seedu/address/model/candidate/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s name in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"domlimm":2,"-":57}},{"path":"src/main/java/seedu/address/model/candidate/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s phone number in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"            \"Phone numbers should only contain numbers, and\"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"            + \" it should be at most 8 digits long, beginning with 6, 8 or 9\";","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    public static final String VALIDATION_REGEX \u003d \"[6|8|9]\\\\d{7}\";","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"domlimm":5,"-":48}},{"path":"src/main/java/seedu/address/model/candidate/Seniority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s seniority in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSeniority(int)}","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"public class Seniority {","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"            \"Seniority input should only either be COM[1], COM[2], COM[3] or COM[4], and it should not be blank\";","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"    public static final String COM_VALUE \u003d \"COM\";","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"    public static final int MIN_SENIORITY \u003d 1;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    public static final int MAX_SENIORITY \u003d 4;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    public final String seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"     * Constructs a {@code Seniority}.","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"     * @param seniority A valid seniority.","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    public Seniority(int seniority) {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"        checkArgument(isValidSeniority(seniority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"        this.seniority \u003d COM_VALUE + seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"     * Returns true if a given string is a valid seniority.","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    public static boolean isValidSeniority(int test) {","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        return test \u003e\u003d MIN_SENIORITY \u0026\u0026 test \u003c\u003d MAX_SENIORITY;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"    public String toString() {","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"        return seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"                || (other instanceof Seniority // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 seniority.equals(((Seniority) other).seniority)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        return seniority.hashCode();","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"domlimm":51}},{"path":"src/main/java/seedu/address/model/candidate/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":" * Represents a Candidate\u0027s Student ID in TAlent Assistant™.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"public class StudentId {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"            \"IDs should only contain E and 7 digits/numbers e.g. E0123456, and it should not be blank\";","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"     * The format of Student ID should be E followed by 7 digits without spacing.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    public static final String VALIDATION_REGEX \u003d \"E[\\\\p{Digit}]{7}\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    public final String studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"     * Constructs a {@code StudentId}.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"     * @param id A valid student ID.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    public StudentId(String id) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"        studentId \u003d id;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"     * Returns true if a given string is a valid student ID.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        return studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 studentId.equals(((StudentId) other).studentId)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        return studentId.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"domlimm":55}},{"path":"src/main/java/seedu/address/model/candidate/UniqueCandidateList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.exceptions.CandidateNotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.exceptions.DuplicateCandidateException;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":" * A list of candidates that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":" * A candidate is considered unique by comparing using {@code Candidate#isSameCandidate(Candidate)}. As such, adding","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":" * and updating of candidates uses Candidate#isSameCandidate(Candidate) for equality so as to ensure that the","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":" * candidate being added or updated is unique in terms of identity in the UniqueCandidateList. However, the removal","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":" * of a candidate uses Candidate#equals(Object) so as to ensure that the candidate with exactly the same fields will","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":" * be removed.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":" *","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":" *","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":" * @see Candidate#isSameCandidate(Candidate)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"public class UniqueCandidateList implements Iterable\u003cCandidate\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"    private final ObservableList\u003cCandidate\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"    private final ObservableList\u003cCandidate\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"     * Returns true if the list contains an equivalent candidate as the given argument.","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    public boolean contains(Candidate toCheck) {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"     * Adds a candidate to the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"     * The candidate must not already exist in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    public void add(Candidate toAdd) {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"            throw new DuplicateCandidateException();","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"     * Replaces the candidate {@code target} in the list with {@code editedCandidate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"     * The candidate identity of {@code editedCandidate} must not be the same as another existing candidate in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate(Candidate target, Candidate editedCandidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        requireAllNonNull(target, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"            throw new CandidateNotFoundException();","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        if (!target.isSameCandidate(editedCandidate) \u0026\u0026 contains(editedCandidate)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"            throw new DuplicateCandidateException();","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"        internalList.set(index, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"     * Removes the equivalent candidate from the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"     * The candidate must exist in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"    public void remove(Candidate toRemove) {","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"            throw new CandidateNotFoundException();","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates(UniqueCandidateList replacement) {","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"charmainehly"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"charmainehly"},"content":"     * Replaces the contents of this list with {@code candidates}.","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"charmainehly"},"content":"     * {@code candidates} must not contain duplicate candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates(List\u003cCandidate\u003e candidates) {","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"        requireAllNonNull(candidates);","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"        if (!candidatesAreUnique(candidates)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"charmainehly"},"content":"            throw new DuplicateCandidateException();","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"charmainehly"},"content":"        internalList.setAll(candidates);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"charmainehly"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"    public ObservableList\u003cCandidate\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"charmainehly"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"charmainehly"},"content":"    public Iterator\u003cCandidate\u003e iterator() {","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"charmainehly"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof UniqueCandidateList // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"charmainehly"},"content":"                        \u0026\u0026 internalList.equals(((UniqueCandidateList) other).internalList));","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"charmainehly"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"charmainehly"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"charmainehly"},"content":"     * Returns true if {@code candidates} contains only unique candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"charmainehly"},"content":"    private boolean candidatesAreUnique(List\u003cCandidate\u003e candidates) {","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"charmainehly"},"content":"        for (int i \u003d 0; i \u003c candidates.size() - 1; i++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"charmainehly"},"content":"            for (int j \u003d i + 1; j \u003c candidates.size(); j++) {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"charmainehly"},"content":"                if (candidates.get(i).isSameCandidate(candidates.get(j))) {","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"charmainehly"},"content":"                    return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"charmainehly"},"content":"                }","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"charmainehly"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"charmainehly"},"content":"        return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"charmainehly":138}},{"path":"src/main/java/seedu/address/model/candidate/exceptions/CandidateNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.model.candidate.exceptions;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":" * Signals that the operation is unable to find the specified candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"public class CandidateNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"charmainehly":6}},{"path":"src/main/java/seedu/address/model/candidate/exceptions/DuplicateCandidateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.model.candidate.exceptions;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":" * Signals that the operation will result in duplicate Candidates (Candidates are considered duplicates if they have","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":" * the same identity).","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"public class DuplicateCandidateException extends RuntimeException {","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"    public DuplicateCandidateException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"        super(\"Operation would result in duplicate candidates\");","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"charmainehly":11}},{"path":"src/main/java/seedu/address/model/candidate/predicate/CandidateContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Tests that a {@code Candidate} matches any of the keywords given.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"public class CandidateContainsKeywordsPredicate extends ContainsKeywordsPredicate implements Predicate\u003cCandidate\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"     * Creates a new {@link CandidateContainsKeywordsPredicate} object with the","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"     * {@link CandidateContainsKeywordsPredicate#keywords} initialised.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"     * @param keywords contain keyword(s) to find in {@code Candidate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public CandidateContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        super(keywords);","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"     * Tests if any part of {@code Candidate} matches any of the specified","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"     * {@link CandidateContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"     * @param candidate object to retrieve the description.","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"     * @return true if a match is found, and false otherwise.","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"    public boolean test(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsStringIgnoreCase(candidate.toString(), keyword));","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"     * Checks if another object are instances of the same class and contains the same","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"     * {@link CandidateContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"     * @param other object to compare against.","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"     * @return true if both objects are instances of {@link CandidateContainsKeywordsPredicate} with the same","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"     * {@link CandidateContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof CandidateContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 keywords.equals(((CandidateContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"charmainehly":51}},{"path":"src/main/java/seedu/address/model/candidate/predicate/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Represents a predicate of whether the (@code Candidate) contains specific keywords.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":" * Contains hidden internal logic and the ability to be executed.","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"public abstract class ContainsKeywordsPredicate implements Predicate\u003cCandidate\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"    public ContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    public boolean test(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsStringIgnoreCase(candidate.toString(), keyword));","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof ContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 keywords.equals(((ContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":29,"domlimm":5}},{"path":"src/main/java/seedu/address/model/candidate/predicate/CourseContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Tests that a {@code Candidate}\u0027s {@code Course} matches any of the keywords given.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"public class CourseContainsKeywordsPredicate extends ContainsKeywordsPredicate implements Predicate\u003cCandidate\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"     * Creates a new {@link CourseContainsKeywordsPredicate} object with the","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"     * {@link CourseContainsKeywordsPredicate#keywords} initialised.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"     * @param keywords contain keyword(s) to find in {@code Candidate}\u0027s {@code Course}.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public CourseContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        super(keywords);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"     * Tests if any part of {@code Candidate}\u0027s {@code Course} matches any of the specified","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"     * {@link CourseContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * @param candidate object to retrieve the {@code Course}.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"     * @return true if a match is found, and false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    public boolean test(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsStringIgnoreCase(candidate.getCourse().toString(), keyword));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"     * Checks if another object are instances of the same class and contains the same","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"     * {@link CourseContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"     * @param other object to compare against.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"     * @return true if both objects are instances of {@link CourseContainsKeywordsPredicate} with the same","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"     * {@link CourseContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof CourseContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 keywords.equals(((CourseContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":45,"domlimm":6}},{"path":"src/main/java/seedu/address/model/candidate/predicate/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Tests that a {@code Candidate}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"public class EmailContainsKeywordsPredicate extends ContainsKeywordsPredicate implements Predicate\u003cCandidate\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"     * Creates a new {@link EmailContainsKeywordsPredicate} object with the","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"     * {@link EmailContainsKeywordsPredicate#keywords} initialised.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"     * @param keywords contain keyword(s) to find in {@code Candidate}\u0027s {@code Email}.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        super(keywords);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"     * Tests if any part of {@code Candidate}\u0027s {@code Email} matches any of the specified","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"     * {@link EmailContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * @param candidate object to retrieve the {@code Email}.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"     * @return true if a match is found, and false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    public boolean test(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsStringIgnoreCase(candidate.getEmail().toString(), keyword));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"     * Checks if another object are instances of the same class and contains the same","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"     * {@link EmailContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"     * @param other object to compare against.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"     * @return true if both objects are instances of {@link EmailContainsKeywordsPredicate} with the same","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"     * {@link EmailContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":45,"domlimm":6}},{"path":"src/main/java/seedu/address/model/candidate/predicate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Tests that a {@code Candidate}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"public class NameContainsKeywordsPredicate extends ContainsKeywordsPredicate implements Predicate\u003cCandidate\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"     * Creates a new {@link NameContainsKeywordsPredicate} object with the","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"     * {@link NameContainsKeywordsPredicate#keywords} initialised.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"     * @param keywords contain keyword(s) to find in {@code Candidate}\u0027s {@code Name}.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        super(keywords);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"     * Tests if any part of {@code Candidate}\u0027s {@code Name} matches any of the specified","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"     * {@link NameContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * @param candidate object to retrieve the {@code Name}.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"     * @return true if a match is found, and false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    public boolean test(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsStringIgnoreCase(candidate.getName().fullName, keyword));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"     * Checks if another object are instances of the same class and contains the same","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"     * {@link NameContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"     * @param other object to compare against.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"     * @return true if both objects are instances of {@link NameContainsKeywordsPredicate} with the same","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"     * {@link NameContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":45,"domlimm":6}},{"path":"src/main/java/seedu/address/model/candidate/predicate/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Tests that a {@code Candidate}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"public class PhoneContainsKeywordsPredicate extends ContainsKeywordsPredicate implements Predicate\u003cCandidate\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"     * Creates a new {@link PhoneContainsKeywordsPredicate} object with the","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"     * {@link PhoneContainsKeywordsPredicate#keywords} initialised.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"     * @param keywords contain keyword(s) to find in {@code Candidate}\u0027s {@code Phone}.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        super(keywords);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"     * Tests if any part of {@code Candidate}\u0027s {@code Phone} matches any of the specified","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"     * {@link PhoneContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * @param candidate object to retrieve the {@code Phone}.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"     * @return true if a match is found, and false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    public boolean test(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsStringIgnoreCase(candidate.getPhone().toString(), keyword));","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"     * Checks if another object are instances of the same class and contains the same","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"     * {@link PhoneContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"     * @param other object to compare against.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"     * @return true if both objects are instances of {@link PhoneContainsKeywordsPredicate} with the same","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"     * {@link PhoneContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":45,"domlimm":6}},{"path":"src/main/java/seedu/address/model/candidate/predicate/StudentIdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":" * Tests that a {@code Candidate}\u0027s {@code StudentId} matches any of the keywords given.","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"public class StudentIdContainsKeywordsPredicate extends ContainsKeywordsPredicate implements Predicate\u003cCandidate\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"     * Creates a new {@link StudentIdContainsKeywordsPredicate} object with the","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"     * {@link StudentIdContainsKeywordsPredicate#keywords} initialised.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"     * @param keywords contain keyword(s) to find in {@code Candidate}\u0027s {@code StudentId}.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    public StudentIdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        super(keywords);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"     * Tests if any part of {@code Candidate}\u0027s {@code StudentId} matches any of the specified","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"     * {@link StudentIdContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"     * @param candidate object to retrieve the {@code StudentID}.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"     * @return true if a match is found, and false otherwise.","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"    public boolean test(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsStringIgnoreCase(candidate.getStudentId().toString(), keyword));","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"     * Checks if another object are instances of the same class and contains the same","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"     * {@link StudentIdContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"     * @param other object to compare against.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"     * @return true if both objects are instances of {@link StudentIdContainsKeywordsPredicate} with the same","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"     * {@link StudentIdContainsKeywordsPredicate#keywords}.","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"                || (other instanceof StudentIdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \u0026\u0026 keywords.equals(((StudentIdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":45,"domlimm":6}},{"path":"src/main/java/seedu/address/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":" * Represents an Interview in the interview schedule.","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"public class Interview {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    private static final int INTERVIEW_DURATION_IN_MINUTES \u003d 30;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"    private final Candidate candidate;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    private final LocalDateTime interviewDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    private final LocalDateTime interviewEndDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"    private final int interviewDay;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    public Interview(Candidate candidate, LocalDateTime interviewDateTime) {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        requireAllNonNull(candidate, interviewDateTime);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        this.candidate \u003d candidate;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        this.interviewEndDateTime \u003d interviewDateTime.plusMinutes(INTERVIEW_DURATION_IN_MINUTES);","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"        this.interviewDay \u003d interviewDateTime.getDayOfWeek().getValue();","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     * Returns true if both interviews have the same candidates.","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    public boolean isSameInterviewCandidate(Interview otherInterview) {","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"        if (otherInterview \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        return otherInterview !\u003d null","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 otherInterview.getCandidate().equals(getCandidate());","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"     * Returns true if both interviews have the same interview date and time.","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    public boolean isConflictingInterview(Interview otherInterview) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        if (otherInterview \u003d\u003d this) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"            return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"        return otherInterview !\u003d null","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 (!otherInterview.getInterviewDateTime().isAfter(getInterviewDateTime())","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 otherInterview.getInterviewEndDateTime().isAfter(getInterviewDateTime()))","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"                || (otherInterview.getInterviewDateTime().isBefore(getInterviewEndDateTime())","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 otherInterview.getInterviewEndDateTime().isAfter(getInterviewEndDateTime()));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"     * Returns true if the candidate is available on the propsoed interview day","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"    public boolean hasMatchingAvailability() {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        String candidateAvailabilities \u003d this.candidate.getAvailability().toString();","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        String interviewDayString \u003d Integer.toString(this.interviewDay);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        return candidateAvailabilities.contains(interviewDayString);","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"     * Returns true if the candidate is available on the proposed interview day","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"    public boolean isDuringOfficeHour() {","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        int interviewHour \u003d this.interviewDateTime.getHour();","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"        int interviewMin \u003d this.interviewDateTime.getMinute();","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        if (this.interviewDay \u003e 5) {","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"        if (interviewHour \u003c 8) {","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"        } else if (interviewHour \u003e\u003d 17 \u0026\u0026 interviewMin \u003e 30) {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"            return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"charmainehly"},"content":"        } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"charmainehly"},"content":"            return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"     * Returns true if the given date and time is not in the past.","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"    public static boolean isValidDateTime(LocalDateTime localDateTime) {","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"        return LocalDateTime.now().isBefore(localDateTime);","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"    public Candidate getCandidate() {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"        return this.candidate;","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"    public LocalDateTime getInterviewDateTime() {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"        return this.interviewDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"charmainehly"},"content":"    public int getInterviewDay() {","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"        return this.interviewDay;","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"    public LocalTime getInterviewStartTime() {","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"        return this.interviewDateTime.toLocalTime();","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"    public LocalDateTime getInterviewEndDateTime() {","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"        return this.interviewEndDateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"    public LocalDate getInterviewDate() {","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"        return this.interviewDateTime.toLocalDate();","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"charmainehly"},"content":"     * Returns true if both candidates have the same identity and data fields.","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"charmainehly"},"content":"     * This defines a stronger notion of equality between two candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"lzan98"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"        return otherInterview.getCandidate().equals(getCandidate())","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 otherInterview.getInterviewDateTime().equals(getInterviewDateTime());","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"    public String toString() {","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"        return this.candidate.getName() + \" \" + this.candidate.getStudentId() + \" \"","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"                + this.getInterviewDate() + \" \" + this.getInterviewStartTime();","lastModifiedDate":"2022-03-17"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"charmainehly":37,"lzan98":105}},{"path":"src/main/java/seedu/address/model/interview/UniqueInterviewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.ConflictingInterviewException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.DuplicateCandidateException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"public class UniqueInterviewList implements Iterable\u003cInterview\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    private final ObservableList\u003cInterview\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    private final ObservableList\u003cInterview\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"     * Returns true if the list contains an equivalent candidate as the given argument.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    public boolean containsSameCandidate(Interview toCheck) {","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInterviewCandidate);","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"     * Returns true if the list contains an equivalent candidate as the given argument.","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    public boolean containsConflictingInterview(Interview toCheck) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        return internalList.stream().anyMatch(toCheck::isConflictingInterview);","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * Adds an interview to the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"     * The candidate must not already exist in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    public void add(Interview toAdd) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        if (containsSameCandidate(toAdd)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"            throw new DuplicateCandidateException();","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        if (containsConflictingInterview(toAdd)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"            throw new ConflictingInterviewException();","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"     * Replaces the candidate {@code target} in the list with {@code editedCandidate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"     * The candidate identity of {@code editedCandidate} must not be the same as another existing candidate in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"        if (target.isSameInterviewCandidate(editedInterview)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"            throw new DuplicateCandidateException();","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"        if (containsConflictingInterview(editedInterview)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"            throw new ConflictingInterviewException();","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"        internalList.set(index, editedInterview);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"    // Remove function not implemented yet, code commented out to reduce test coverage.","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"    /* public void remove(Interview toRemove) {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"    } */","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"    public void setInterviews(UniqueInterviewList replacement) {","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"     * Replaces the contents of this list with {@code candidates}.","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"charmainehly"},"content":"     * {@code candidates} must not contain duplicate candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"        requireAllNonNull(interviews);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"        if (!interviewsCandidatesAreUnique(interviews)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"            throw new DuplicateCandidateException();","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"        if (!interviewsDateTimeAreUnique(interviews)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"            throw new ConflictingInterviewException();","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"        internalList.setAll(interviews);","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"     * Checks if the interview list contains an interview with the same candidate in {@code toCheck}.","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"     * @param toCheck","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"     * @return","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"    public boolean containsCandidate(Interview toCheck) {","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInterviewCandidate);","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"    public ObservableList\u003cInterview\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"                || (other instanceof UniqueInterviewList // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"                \u0026\u0026 internalList.equals(((UniqueInterviewList) other).internalList));","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"lzan98"},"content":"    public Iterator\u003cInterview\u003e iterator() {","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"     * Returns true if {@code candidates} contains only unique candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"    private boolean interviewsCandidatesAreUnique(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"                if (interviews.get(i).isSameInterviewCandidate(interviews.get(j))) {","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"lzan98"},"content":"                    return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"lzan98"},"content":"        return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"charmainehly"},"content":"     * Returns true if {@code candidates} contains only unique candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"lzan98"},"content":"    private boolean interviewsDateTimeAreUnique(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"lzan98"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"lzan98"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"lzan98"},"content":"                if (interviews.get(i).isConflictingInterview(interviews.get(j))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"lzan98"},"content":"                    return false;","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"lzan98"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"lzan98"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"charmainehly":9,"lzan98":153}},{"path":"src/main/java/seedu/address/model/interview/exceptions/ConflictingInterviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class ConflictingInterviewException extends RuntimeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    public ConflictingInterviewException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"        super(\"Operation would result in conflicting interviews at the same time slot\"); }","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"lzan98":6}},{"path":"src/main/java/seedu/address/model/interview/exceptions/DuplicateCandidateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"public class DuplicateCandidateException extends RuntimeException {","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"     * Signals that the operation will result in Interviews with duplicate candidates.","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"    public DuplicateCandidateException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"        super(\"Operation would result in duplicate candidates\");","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"lzan98":10}},{"path":"src/main/java/seedu/address/model/interview/exceptions/InterviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":" * Signals that the operation is unable to find the specified interview.","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"public class InterviewNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"lzan98":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"tiewweijian"},"content":"    private static final ApplicationStatus PENDING \u003d new ApplicationStatus(\"pending\");","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"    private static final InterviewStatus INTERVIEW_NOT_SCHEDULED \u003d new InterviewStatus(\"Not Scheduled\");","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    public static Candidate[] getSampleCandidates() {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        return new Candidate[] {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"            new Candidate(new StudentId(\"E0123456\"), new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"                    new Email(\"E0123456@u.nus.edu\"), new Course(\"Business Analytics\"), new Seniority(1),","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"                    getTagSet(\"friends\"), PENDING, INTERVIEW_NOT_SCHEDULED, new Availability(\"1,2,3,4,5\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"            new Candidate(new StudentId(\"E0234567\"), new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"                    new Email(\"E0234567@u.nus.edu\"), new Course(\"Computer Engineering\"), new Seniority(2),","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"                    getTagSet(\"colleagues\", \"friends\"), PENDING, INTERVIEW_NOT_SCHEDULED,","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"                    new Availability(\"1,2,3,4,5\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"            new Candidate(new StudentId(\"E0345678\"), new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"                    new Email(\"E0345678@u.nus.edu\"), new Course(\"Computer Science\"), new Seniority(3),","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"                    getTagSet(\"neighbours\"), PENDING, INTERVIEW_NOT_SCHEDULED, new Availability(\"1,2,3\")),","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"            new Candidate(new StudentId(\"E0456789\"), new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"                    new Email(\"E0456789@u.nus.edu\"), new Course(\"Information Security\"), new Seniority(4),","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"                    getTagSet(\"family\"), PENDING, INTERVIEW_NOT_SCHEDULED, new Availability(\"3,4,5\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"            new Candidate(new StudentId(\"E0567890\"), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"                    new Email(\"E0567890@u.nus.edu\"), new Course(\"Information Systems\"), new Seniority(1),","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"                    getTagSet(\"classmates\"), PENDING, INTERVIEW_NOT_SCHEDULED, new Availability(\"4,5\")),","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            new Candidate(new StudentId(\"E0678901\"), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"                    new Email(\"E0678901@u.nus.edu\"), new Course(\"Computer Science\"), new Seniority(2),","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"                    getTagSet(\"colleagues\"), PENDING, INTERVIEW_NOT_SCHEDULED, new Availability(\"3,5\"))","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"        for (Candidate sampleCandidate : getSampleCandidates()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"            sampleAb.addCandidate(sampleCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"    public static ReadOnlyInterviewSchedule getEmptyInterviewList() {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"        InterviewSchedule emptyList \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"        return emptyList;","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"tiewweijian"},"content":"    public static ApplicationStatus getPending() {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"tiewweijian"},"content":"        return PENDING;","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"charmainehly":3,"domlimm":22,"tiewweijian":8,"LeeEnEn":8,"lzan98":7,"-":33}},{"path":"src/main/java/seedu/address/storage/InterviewScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"public interface InterviewScheduleStorage {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    Path getInterviewScheduleFilePath();","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    Optional\u003cReadOnlyInterviewSchedule\u003e readInterviewSchedule() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"     * @see #getInterviewScheduleFilePath()","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    Optional\u003cReadOnlyInterviewSchedule\u003e readInterviewSchedule(Path filePath)","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     * Saves the given {@link ReadOnlyInterviewSchedule} to the storage.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * @param interviewList cannot be null.","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewList) throws IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"     * @see #saveInterviewSchedule(ReadOnlyInterviewSchedule)","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"    void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"lzan98":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCandidate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":" * Jackson-friendly version of {@link Candidate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"class JsonAdaptedCandidate {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Candidate\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"    private final String studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    private final String course;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    private final int seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"    private final String applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"    private final String interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"    private final String availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"     * Constructs a {@code JsonAdaptedCandidate} with the given candidate details.","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"    public JsonAdaptedCandidate(@JsonProperty(\"studentId\") String studentId, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"            @JsonProperty(\"course\") String course, @JsonProperty(\"seniority\") String seniority,","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"            @JsonProperty(\"applicationStatus\") String applicationStatus,","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"            @JsonProperty(\"interviewStatus\") String interviewStatus,","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"            @JsonProperty(\"availability\") String availability) {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        this.course \u003d course;","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        this.seniority \u003d Integer.parseInt(seniority.substring(seniority.length() - 1));","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"tiewweijian"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"tiewweijian"},"content":"        this.interviewStatus \u003d interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"LeeEnEn"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"     * Converts a given {@code Candidate} into this class for Jackson use.","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"    public JsonAdaptedCandidate(Candidate source) {","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"        studentId \u003d source.getStudentId().studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"        course \u003d source.getCourse().course;","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"        String seniorityValue \u003d source.getSeniority().seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"        seniority \u003d Integer.parseInt(seniorityValue.substring(seniorityValue.length() - 1));","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"tiewweijian"},"content":"        applicationStatus \u003d source.getApplicationStatus().toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"tiewweijian"},"content":"        interviewStatus \u003d source.getInterviewStatus().toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"LeeEnEn"},"content":"        availability \u003d source.getAvailability().availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"     * Converts this Jackson-friendly adapted candidate object into the model\u0027s {@code Candidate} object.","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"    public Candidate toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"        final List\u003cTag\u003e candidateTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"charmainehly"},"content":"            candidateTags.add(tag.toModelType());","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"domlimm"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"domlimm"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"domlimm"},"content":"        if (!StudentId.isValidId(studentId)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"domlimm"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"domlimm"},"content":"        final StudentId modelId \u003d new StudentId(studentId);","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"domlimm"},"content":"        if (course \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"domlimm"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Course.class.getSimpleName()));","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"domlimm"},"content":"        if (!Course.isValidCourse(course)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"domlimm"},"content":"        final Course modelCourse \u003d new Course(course);","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"domlimm"},"content":"        if (!Seniority.isValidSeniority(seniority)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"domlimm"},"content":"            throw new IllegalValueException(Seniority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"domlimm"},"content":"        final Seniority modelSeniority \u003d new Seniority(seniority);","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"LeeEnEn"},"content":"        if (availability \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":148,"author":{"gitId":"LeeEnEn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":149,"author":{"gitId":"LeeEnEn"},"content":"                    Availability.class.getSimpleName()));","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"LeeEnEn"},"content":"        if (!Availability.isValidDay(availability)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"LeeEnEn"},"content":"            throw new IllegalValueException(Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"LeeEnEn"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"LeeEnEn"},"content":"        final Availability modelAvailability \u003d new Availability(availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"charmainehly"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(candidateTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"domlimm"},"content":"        return new Candidate(modelId, modelName, modelPhone, modelEmail, modelCourse, modelSeniority,","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"domlimm"},"content":"                modelTags,","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"LeeEnEn"},"content":"                new ApplicationStatus(applicationStatus), new InterviewStatus(interviewStatus), modelAvailability);","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charmainehly":9,"domlimm":49,"tiewweijian":8,"LeeEnEn":15,"-":80}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInterview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":" * Jackson-friendly version of {@link Interview}.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"class JsonAdaptedInterview {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Interview\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    private final String studentID;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    private final String name;","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    private final String phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"    private final String email;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    private final String course;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    private final int seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    private final String applicationStatus;","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    private final String interviewStatus;","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    private final String availability;","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"    private final String interviewDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"     * Constructs a {@code JsonAdaptedInterview} with the given candidate details.","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"    public JsonAdaptedInterview(@JsonProperty(\"studentID\") String studentID, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"                                @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"                                @JsonProperty(\"course\") String course, @JsonProperty(\"seniority\") String seniority,","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"                                @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"                                @JsonProperty(\"applicationStatus\") String applicationStatus,","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"                                @JsonProperty(\"interviewStatus\") String interviewStatus,","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"                                @JsonProperty(\"availability\") String availability,","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"                                @JsonProperty(\"interviewDateTime\") String interviewDateTime) {","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"        this.studentID \u003d studentID;","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"        this.course \u003d course;","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"        this.seniority \u003d Integer.parseInt(seniority.substring(seniority.length() - 1));","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"        this.applicationStatus \u003d applicationStatus;","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"        this.interviewStatus \u003d interviewStatus;","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"     * Converts a given {@code Candidate} into this class for Jackson use.","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"    public JsonAdaptedInterview(Interview source) {","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"        studentID \u003d source.getCandidate().getStudentId().studentId;","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"        name \u003d source.getCandidate().getName().fullName;","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"        phone \u003d source.getCandidate().getPhone().value;","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"        email \u003d source.getCandidate().getEmail().value;","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"        course \u003d source.getCandidate().getCourse().course;","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"        String seniorityValue \u003d source.getCandidate().getSeniority().seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"        seniority \u003d Integer.parseInt(seniorityValue.substring(seniorityValue.length() - 1));","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"        tagged.addAll(source.getCandidate().getTags().stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"        applicationStatus \u003d source.getCandidate().getApplicationStatus().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"        interviewStatus \u003d source.getCandidate().getInterviewStatus().toString();","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"        availability \u003d source.getCandidate().getAvailability().availability;","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"        interviewDateTime \u003d source.getInterviewDateTime().toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"     * Converts this Jackson-friendly adapted interview object into the model\u0027s {@code Interview} object.","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    public Interview toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"charmainehly"},"content":"        final List\u003cTag\u003e candidateTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"            candidateTags.add(tag.toModelType());","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"        if (studentID \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"        if (!StudentId.isValidId(studentID)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"        final StudentId modelId \u003d new StudentId(studentID);","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"lzan98"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"        if (course \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Course.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"lzan98"},"content":"        if (!Course.isValidCourse(course)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"domlimm"},"content":"            throw new IllegalValueException(Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"lzan98"},"content":"        final Course modelCourse \u003d new Course(course);","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"domlimm"},"content":"        if (!Seniority.isValidSeniority(seniority)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"domlimm"},"content":"            throw new IllegalValueException(Seniority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"domlimm"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"domlimm"},"content":"        final Seniority modelSeniority \u003d new Seniority(seniority);","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"lzan98"},"content":"        if (availability \u003d\u003d null) {","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"lzan98"},"content":"                    Availability.class.getSimpleName()));","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"LeeEnEn"},"content":"        if (!Availability.isValidDay(availability)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"lzan98"},"content":"        final Availability modelAvailability \u003d new Availability(availability);","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"charmainehly"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(candidateTags);","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":165,"author":{"gitId":"domlimm"},"content":"        Candidate candidate \u003d new Candidate(modelId, modelName, modelPhone, modelEmail, modelCourse,","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"domlimm"},"content":"                modelSeniority, modelTags,","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"lzan98"},"content":"                new ApplicationStatus(applicationStatus), new InterviewStatus(interviewStatus), modelAvailability);","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"lzan98"},"content":"        if (interviewDateTime \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"lzan98"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"test\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"lzan98"},"content":"        //watch this","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"lzan98"},"content":"        //DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"lzan98"},"content":"        final LocalDateTime modelInterviewDateTime \u003d LocalDateTime.parse(interviewDateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"lzan98"},"content":"        return new Interview(candidate, modelInterviewDateTime);","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"charmainehly":6,"domlimm":17,"LeeEnEn":1,"lzan98":154}},{"path":"src/main/java/seedu/address/storage/JsonInterviewScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" * A class to access InterviewSchedule data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"public class JsonInterviewScheduleStorage implements InterviewScheduleStorage {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInterviewScheduleStorage.class);","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    public JsonInterviewScheduleStorage(Path filePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    public Path getInterviewScheduleFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"        return filePath;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    public Optional\u003cReadOnlyInterviewSchedule\u003e readInterviewSchedule() throws DataConversionException {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        return readInterviewSchedule(filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"     * Similar to {@link #readInterviewSchedule()}.","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"    public Optional\u003cReadOnlyInterviewSchedule\u003e readInterviewSchedule(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        Optional\u003cJsonSerializableInterviewSchedule\u003e jsonInterviewList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"                filePath, JsonSerializableInterviewSchedule.class);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        if (!jsonInterviewList.isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"            return Optional.of(jsonInterviewList.get().toModelType());","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"    public void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewSchedule) throws IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"        saveInterviewSchedule(interviewSchedule, filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"     * Similar to {@link #saveInterviewSchedule(ReadOnlyInterviewSchedule)}.","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"    public void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"        requireNonNull(interviewList);","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInterviewSchedule(interviewList), filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"lzan98":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"    public static final String MESSAGE_DUPLICATE_CANDIDATE \u003d \"Candidates list contains duplicate candidate(s).\";","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"    private final List\u003cJsonAdaptedCandidate\u003e candidates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"candidates\") List\u003cJsonAdaptedCandidate\u003e candidates) {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"        this.candidates.addAll(candidates);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"        candidates.addAll(source.getCandidateList().stream().map(JsonAdaptedCandidate::new)","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"        for (JsonAdaptedCandidate jsonAdaptedCandidate : candidates) {","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"            Candidate candidate \u003d jsonAdaptedCandidate.toModelType();","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"            if (addressBook.hasCandidate(candidate)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"            addressBook.addCandidate(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charmainehly":12,"domlimm":1,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableInterviewSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":" * An Immutable InterviewSchedule that is serializable to JSON format.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"@JsonRootName(value \u003d \"InterviewSchedule\")","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"class JsonSerializableInterviewSchedule {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"Interviews list contains duplicate interview(s).\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    private final List\u003cJsonAdaptedInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"     * Constructs a {@code JsonSerializableInterviewSchedule} with the given interviews.","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    public JsonSerializableInterviewSchedule(@JsonProperty(\"interviews\") List\u003cJsonAdaptedInterview\u003e interviews) {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"        this.interviews.addAll(interviews);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"     * Converts a given {@code ReadOnlyInterviewSchedule} into this class for Jackson use.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInterviewSchedule}.","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    public JsonSerializableInterviewSchedule(ReadOnlyInterviewSchedule source) {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"        interviews.addAll(source.getInterviewList().stream().map(JsonAdaptedInterview::new)","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"     * Converts this address book into the model\u0027s {@code InterviewSchedule} object.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"    public InterviewSchedule toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        InterviewSchedule interviewSchedule \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        for (JsonAdaptedInterview jsonAdaptedInterview : interviews) {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"            Interview interview \u003d jsonAdaptedInterview.toModelType();","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"            if (interviewSchedule.hasCandidate(interview)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"            interviewSchedule.addInterview(interview);","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"        return interviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"lzan98":61}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, InterviewScheduleStorage {","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    Path getInterviewScheduleFilePath();","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    Optional\u003cReadOnlyInterviewSchedule\u003e readInterviewSchedule() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewList) throws IOException;","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lzan98":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    private InterviewScheduleStorage interviewListStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"                          InterviewScheduleStorage interviewListStorage) {","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"        this.interviewListStorage \u003d interviewListStorage;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"    public Path getInterviewScheduleFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"        return interviewListStorage.getInterviewScheduleFilePath();","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"    public Optional\u003cReadOnlyInterviewSchedule\u003e readInterviewSchedule() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"        return readInterviewSchedule(interviewListStorage.getInterviewScheduleFilePath());","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"    public Optional\u003cReadOnlyInterviewSchedule\u003e readInterviewSchedule(Path filePath)","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"        return interviewListStorage.readInterviewSchedule(filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"    public void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewList) throws IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"        saveInterviewSchedule(interviewList, interviewListStorage.getInterviewScheduleFilePath());","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"    public void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"        interviewListStorage.saveInterviewSchedule(interviewList, filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lzan98":33,"-":77}},{"path":"src/main/java/seedu/address/ui/CandidateCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":" * An UI component that displays information of a {@code Candidate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"public class CandidateCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    private static final String FXML \u003d \"CandidateListCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"    private static final String APPLICATION_STATUS_MSG \u003d \"Application Status : \";","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"    private static final String INTERVIEW_STATUS_MSG \u003d \"Interview Status : \";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"    private static final String AVAILABILITY_MSG \u003d \"Availability: \";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    public final Candidate candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"    private Label course;","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"tiewweijian"},"content":"    private Label applicationStatus;","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"    private Label interviewStatus;","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"tiewweijian"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"    private Label availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"    private FlowPane availableDays;","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"     * Creates a {@code CandidateCode} with the given {@code Candidate} and index to display.","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"    public CandidateCard(Candidate candidate, int displayedIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        this.candidate \u003d candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"        name.setText(candidate.getName().fullName + \", \" + candidate.getStudentId().studentId);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"        phone.setText(candidate.getPhone().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"        course.setText(candidate.getCourse().course + \", \" + candidate.getSeniority().seniority);","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"        email.setText(candidate.getEmail().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"        candidate.getTags().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"        applicationStatus.setText(APPLICATION_STATUS_MSG + candidate.getApplicationStatus().toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"        interviewStatus.setText(INTERVIEW_STATUS_MSG + candidate.getInterviewStatus().toString());","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"LeeEnEn"},"content":"        availability.setText(AVAILABILITY_MSG);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"LeeEnEn"},"content":"        candidate.getAvailability().getList()","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"LeeEnEn"},"content":"                .forEach(availability -\u003e availableDays.getChildren().add(new Label(availability)));","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"charmainehly"},"content":"        if (!(other instanceof CandidateCard)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"charmainehly"},"content":"        CandidateCard card \u003d (CandidateCard) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"domlimm"},"content":"                \u0026\u0026 candidate.equals(card.candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"charmainehly":7,"domlimm":12,"tiewweijian":6,"LeeEnEn":8,"-":59}},{"path":"src/main/java/seedu/address/ui/CandidateListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":" * Panel containing the list of candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"public class CandidateListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    private static final String FXML \u003d \"CandidateListPanel.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CandidateListPanel.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    @FXML","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"    private ListView\u003cCandidate\u003e candidateListView;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"     * Creates a {@code CandidateListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"    public CandidateListPanel(ObservableList\u003cCandidate\u003e candidateList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        super(FXML);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        candidateListView.setItems(candidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"        candidateListView.setCellFactory(listView -\u003e new CandidateListViewCell());","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Candidate} using a {@code CandidateCard}.","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    class CandidateListViewCell extends ListCell\u003cCandidate\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"        protected void updateItem(Candidate candidate, boolean empty) {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"            super.updateItem(candidate, empty);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"            if (empty || candidate \u003d\u003d null) {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"                setText(null);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"            } else {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"                setGraphic(new CandidateCard(candidate, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"charmainehly":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"import seedu.address.commons.util.HelpWindowUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"            \"https://ay2122s2-cs2103-f11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"    public static final String HELP_MESSAGE \u003d \"Available functions on this version: \\n\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"            + \"- add n/NAME id/STUDENT_ID c/COURSE \\n-delete STUDENT_ID\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"            + \"- find k/KEYWORD [k/MORE_KEYWORDS] f/ATTRIBUTE_FIELD\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"            + \"- delete [INDEX]\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"tiewweijian"},"content":"            + \"- sort s/[attribute] \\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"            + \"- edit [INDEX] [PREFIX]/[NEW VALUE]\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"            + \"- exit\\n\\n\"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"            + \"The full guide is available on our User Guide\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"tiewweijian"},"content":"     * @return","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"tiewweijian"},"content":"    public void goToUrl() throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"tiewweijian"},"content":"        new HelpWindowUtil(USERGUIDE_URL).goToUrl();","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tiewweijian":16,"-":94}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"    private CandidateListPanel candidateListPanel;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"    private StackPane candidateListPanelPlaceholder;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"charmainehly"},"content":"        candidateListPanel \u003d new CandidateListPanel(logic.getFilteredCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"charmainehly"},"content":"        candidateListPanelPlaceholder.getChildren().add(candidateListPanel.getRoot());","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"charmainehly"},"content":"    public CandidateListPanel getCandidateListPanel() {","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"charmainehly"},"content":"        return candidateListPanel;","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"charmainehly":5,"domlimm":1,"-":190}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/talent_assistant.png\";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"domlimm":1,"-":87}},{"path":"src/main/resources/view/CandidateListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"      \u003cLabel fx:id\u003d\"course\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$course\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"      \u003cLabel fx:id\u003d\"applicationStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$app_status\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"      \u003cLabel fx:id\u003d\"interviewStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$interview_status\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"        \u003cLabel fx:id\u003d\"availability\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$availability\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"        \u003cFlowPane fx:id\u003d\"availableDays\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"domlimm":1,"tiewweijian":2,"LeeEnEn":4,"-":35}},{"path":"src/main/resources/view/CandidateListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"  \u003cListView fx:id\u003d\"candidateListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"charmainehly"},"content":"#filterField, #candidateListPanel, #candidateWebpage {","lastModifiedDate":"2022-03-25"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"LeeEnEn"},"content":"#availableDays {","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"LeeEnEn"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-25"},{"lineNumber":356,"author":{"gitId":"LeeEnEn"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":358,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":359,"author":{"gitId":"LeeEnEn"},"content":"#availableDays .label {","lastModifiedDate":"2022-03-25"},{"lineNumber":360,"author":{"gitId":"LeeEnEn"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-25"},{"lineNumber":361,"author":{"gitId":"LeeEnEn"},"content":"    -fx-background-color: #4BB11F;","lastModifiedDate":"2022-03-25"},{"lineNumber":362,"author":{"gitId":"LeeEnEn"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"LeeEnEn"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-25"},{"lineNumber":364,"author":{"gitId":"LeeEnEn"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"LeeEnEn"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-25"},{"lineNumber":366,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"charmainehly":1,"LeeEnEn":14,"-":351}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#goToUrl\" text\u003d\"Open User Guide\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"tiewweijian":1,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"         title\u003d\"TAlent Assistant™\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    \u003cImage url\u003d\"@/images/talent_assistant.png\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        \u003cVBox fx:id\u003d\"candidateList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"          \u003cStackPane fx:id\u003d\"candidateListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"domlimm":4,"-":56}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"        final Index fifthCandidateIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        assertTrue(fifthCandidateIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        assertTrue(fifthCandidateIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        assertTrue(fifthCandidateIndex.equals(fifthCandidateIndex));","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        assertFalse(fifthCandidateIndex.equals(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        assertFalse(fifthCandidateIndex.equals(5.0f));","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        assertFalse(fifthCandidateIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"charmainehly":7,"-":53}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        assertNotNull(AppUtil.getImage(\"/images/talent_assistant.png\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"domlimm":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/HelpWindowUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tiewweijian"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"import java.awt.HeadlessException;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"import java.net.URI;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"class HelpWindowUtilTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"    private static final String VALID_LINK \u003d \"https://github.com/AY2122S2-CS2103-F11-2\";","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"    private static final String INVALID_LINK \u003d \"invalid link\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"    public void userGuide_checkLink_throwsIoException() throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"        HelpWindowUtil helpWindowUtil \u003d new HelpWindowUtil(VALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(helpWindowUtil.convertToUrl(), URI.create(\"https://github.com/AY2122S2-CS2103-F11-2\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"    public void userGuide_checkInvalidLink_throwsIoException() throws IOException {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"        HelpWindowUtil helpWindowUtil \u003d new HelpWindowUtil(INVALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e helpWindowUtil.convertToUrl());","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"    public void assertSameUrl() {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"tiewweijian"},"content":"        HelpWindowUtil helpWindowUtil \u003d new HelpWindowUtil(VALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tiewweijian"},"content":"        Object expectedModel \u003d new HelpWindowUtil(\"https://github.com/AY2122S2-CS2103-F11-2\");","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(helpWindowUtil.getUrl(), ((HelpWindowUtil) expectedModel).getUrl());","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"tiewweijian"},"content":"    public void helpWindowUtil_constructorTest() {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"tiewweijian"},"content":"        HelpWindowUtil helpWindowUtil \u003d new HelpWindowUtil(VALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(helpWindowUtil.getUrl(), VALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"tiewweijian"},"content":"    public void helpWindowUtil_desktopCheckTest() {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"tiewweijian"},"content":"        HelpWindowUtil helpWindowUtil \u003d new HelpWindowUtil(VALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(helpWindowUtil.isDesktopUsable(), Desktop.isDesktopSupported());","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"tiewweijian"},"content":"    public void helpWindowUtil_getDesktopTest() {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"tiewweijian"},"content":"        HelpWindowUtil helpWindowUtil \u003d new HelpWindowUtil(VALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"        if (Desktop.isDesktopSupported()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"tiewweijian"},"content":"            assertEquals(helpWindowUtil.getDesktop(), Desktop.getDesktop());","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"            assertThrows(HeadlessException.class, () -\u003e helpWindowUtil.getDesktop());","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"tiewweijian"},"content":"    public void helpWindowUtil_getDesktopExceptionTest_throwsHeadlessException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"tiewweijian"},"content":"        HelpWindowUtil helpWindowUtil \u003d new HelpWindowUtil(VALID_LINK);","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"tiewweijian"},"content":"        if (!Desktop.isDesktopSupported()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"tiewweijian"},"content":"            assertThrows(HeadlessException.class, () -\u003e helpWindowUtil.getDesktop());","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"tiewweijian"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"tiewweijian"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tiewweijian":66}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"charmainehly"},"content":"    //---------------- Tests for containsStringIgnoreCase --------------------------------------","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"charmainehly"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"charmainehly"},"content":"     * Invalid equivalence partitions for string null, empty","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"charmainehly"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"charmainehly"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"charmainehly"},"content":"    public void containsStringIgnoreCase_nullString_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsStringIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"charmainehly"},"content":"    public void containsStringIgnoreCase_emptyString_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalArgumentException.class, \"String parameter cannot be empty\", ()","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"charmainehly"},"content":"            -\u003e StringUtil.containsStringIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"charmainehly"},"content":"    public void containsStringIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsStringIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"charmainehly"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"charmainehly"},"content":"     * Valid equivalence partitions for String:","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"charmainehly"},"content":"     *   - any string","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"charmainehly"},"content":"     *   - string containing symbols/numbers","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"charmainehly"},"content":"     *   - string with leading/trailing spaces","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"charmainehly"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"charmainehly"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"charmainehly"},"content":"     *   - empty string","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"charmainehly"},"content":"     *   - one word","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"charmainehly"},"content":"     *   - multiple words","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"charmainehly"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"charmainehly"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"charmainehly"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"charmainehly"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"charmainehly"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"charmainehly"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"charmainehly"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"charmainehly"},"content":"     *   - query string matches part of a sentence word","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"charmainehly"},"content":"     *   - query string matches part of multiple words in sentence","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"charmainehly"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"charmainehly"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"charmainehly"},"content":"     *   - sentence word matches part of the query string","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"charmainehly"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"charmainehly"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"charmainehly"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"charmainehly"},"content":"    public void containsStringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"charmainehly"},"content":"        // Empty sentence","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"charmainehly"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"charmainehly"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"charmainehly"},"content":"        // Matches a partial word(s) in sentence only","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"charmainehly"},"content":"        // Query string match part of multiple words in sentence","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bbb ccc\", \"Bb cC\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"charmainehly"},"content":"        // Matches a partial word(s) in query string only","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"charmainehly"},"content":"        assertFalse(StringUtil.containsStringIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"charmainehly"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"charmainehly"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"charmainehly"},"content":"        assertTrue(StringUtil.containsStringIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"charmainehly":78,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_CANDIDATES_IN_SYSTEM;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SENIORITY_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"import seedu.address.storage.JsonInterviewScheduleStorage;","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"        JsonInterviewScheduleStorage interviewScheduleStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"                new JsonInterviewScheduleStorage(temporaryFolder.resolve(\"interviewSchedule.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, interviewScheduleStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"        assertCommandException(deleteCommand, MESSAGE_NO_CANDIDATES_IN_SYSTEM);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"        assertCommandSuccess(listCommand, MESSAGE_NO_CANDIDATES_IN_SYSTEM, model);","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"        JsonInterviewScheduleStorage interviewScheduleStorage \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"                new JsonInterviewScheduleIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"                        .resolve(\"ioExceptionInterviewSchedule.json\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, interviewScheduleStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"tiewweijian"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + STUDENT_ID_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"                + PHONE_DESC_AMY + COURSE_DESC_AMY + SENIORITY_DESC_AMY + AVAILABILITY_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"        Candidate expectedCandidate \u003d new CandidateBuilder(AMY).withTags()","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"tiewweijian"},"content":"                .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"tiewweijian"},"content":"                .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"        expectedModel.addCandidate(expectedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"charmainehly"},"content":"    public void getFilteredCandidateList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"charmainehly"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCandidateList().remove(0));","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"lzan98"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"lzan98"},"content":"    private static class JsonInterviewScheduleIoExceptionThrowingStub extends JsonInterviewScheduleStorage {","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"lzan98"},"content":"        private JsonInterviewScheduleIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"lzan98"},"content":"            super(filePath);","lastModifiedDate":"2022-03-18"},{"lineNumber":182,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"lzan98"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":185,"author":{"gitId":"lzan98"},"content":"        public void saveInterviewSchedule(ReadOnlyInterviewSchedule interviewSchedule, Path filePath)","lastModifiedDate":"2022-03-18"},{"lineNumber":186,"author":{"gitId":"lzan98"},"content":"                throws IOException {","lastModifiedDate":"2022-03-18"},{"lineNumber":187,"author":{"gitId":"lzan98"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":188,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":189,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"charmainehly":4,"tiewweijian":8,"domlimm":5,"lzan98":28,"-":145}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"    public void execute_newCandidate_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        Candidate validCandidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"        expectedModel.addCandidate(validCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        assertCommandSuccess(new AddCommand(validCandidate), model,","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validCandidate), expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"    public void execute_duplicateCandidate_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateInList \u003d model.getAddressBook().getCandidateList().get(0);","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(new AddCommand(candidateInList), model, AddCommand.MESSAGE_DUPLICATE_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"charmainehly":7,"domlimm":5,"lzan98":2,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"    public void constructor_nullCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"    public void execute_candidateAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        ModelStubAcceptingCandidateAdded modelStub \u003d new ModelStubAcceptingCandidateAdded();","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        Candidate validCandidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        CommandResult commandResult \u003d new AddCommand(validCandidate).execute(modelStub);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validCandidate), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        assertEquals(Arrays.asList(validCandidate), modelStub.candidatesAdded);","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    public void execute_duplicateCandidate_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"        Candidate validCandidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"        AddCommand addCommand \u003d new AddCommand(validCandidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        ModelStub modelStub \u003d new ModelStubWithCandidate(validCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"        assertThrows(","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"                CommandException.class, AddCommand.MESSAGE_DUPLICATE_CANDIDATE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        Candidate[] candidates \u003d new SampleDataUtil().getSampleCandidates();","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"        Candidate alice \u003d new CandidateBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"        Candidate bob \u003d new CandidateBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"LeeEnEn"},"content":"        Candidate charlotte \u003d new CandidateBuilder().withName(\"Charlotte Oliveiro\").build();","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"        assertTrue(charlotte.getName().equals(candidates[2].getName()));","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"        public Path getInterviewScheduleFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"        public void setInterviewScheduleFilePath(Path interviewListFilePath) {","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"charmainehly"},"content":"        public void addCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"        public void setInterviewSchedule(ReadOnlyInterviewSchedule interviewList) {","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"lzan98"},"content":"        public ReadOnlyInterviewSchedule getInterviewSchedule() {","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"lzan98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"charmainehly"},"content":"        public boolean hasCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"charmainehly"},"content":"        public void deleteCandidate(Candidate target) {","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"charmainehly"},"content":"        public void setCandidate(Candidate target, Candidate editedCandidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"lzan98"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"lzan98"},"content":"        public boolean hasInterviewCandidate(Interview interview) {","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"lzan98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":173,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"lzan98"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"lzan98"},"content":"        public boolean hasConflictingInterview(Interview interview) {","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"lzan98"},"content":"        public void addInterview(Interview interview) {","lastModifiedDate":"2022-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"charmainehly"},"content":"        public ObservableList\u003cCandidate\u003e getFilteredCandidateList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"charmainehly"},"content":"        public void updateFilteredCandidateList(Predicate\u003cCandidate\u003e predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"charmainehly"},"content":"        public void updateSortedCandidateList(Comparator\u003cCandidate\u003e sortKey) {","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"charmainehly"},"content":"     * A Model stub that contains a single candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"charmainehly"},"content":"    private class ModelStubWithCandidate extends ModelStub {","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"domlimm"},"content":"        private final Candidate candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"charmainehly"},"content":"        ModelStubWithCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"domlimm"},"content":"            requireNonNull(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"domlimm"},"content":"            this.candidate \u003d candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"charmainehly"},"content":"        public boolean hasCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"domlimm"},"content":"            requireNonNull(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"charmainehly"},"content":"            return this.candidate.isSameCandidate(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"charmainehly"},"content":"     * A Model stub that always accept the candidate being added.","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"charmainehly"},"content":"    private class ModelStubAcceptingCandidateAdded extends ModelStub {","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"charmainehly"},"content":"        final ArrayList\u003cCandidate\u003e candidatesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"charmainehly"},"content":"        public boolean hasCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"domlimm"},"content":"            requireNonNull(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"charmainehly"},"content":"            return candidatesAdded.stream().anyMatch(candidate::isSameCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"charmainehly"},"content":"        public void addCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"domlimm"},"content":"            requireNonNull(candidate);","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"charmainehly"},"content":"            candidatesAdded.add(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"charmainehly":30,"domlimm":15,"LeeEnEn":4,"lzan98":28,"-":166}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        expectedModel.setInterviewSchedule(new InterviewSchedule());","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"charmainehly":2,"lzan98":4,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SENIORITY;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.EditCandidateDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_STUDENT_ID_AMY \u003d \"E0123456\";","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_STUDENT_ID_BOB \u003d \"E0234567\";","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91111111\";","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_PHONE_BOB \u003d \"92222222\";","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"E0123456@u.nus.edu\";","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"E0234567@u.nus.edu\";","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_COURSE_AMY \u003d \"Business Analytics\";","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_COURSE_BOB \u003d \"Computer Engineering\";","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_SENIORITY_AMY \u003d \"2\";","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"    public static final String VALID_SENIORITY_BOB \u003d \"2\";","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"tiewweijian"},"content":"    public static final String VALID_APPLICATION_PENDING \u003d \"Pending\";","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"    public static final String VALID_APPLICATION_REJECTED \u003d \"Rejected\";","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tiewweijian"},"content":"    public static final String VALID_APPLICATION_ACCEPTED \u003d \"Accepted\";","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"    public static final String VALID_INTERVIEW_SCHEDULED \u003d \"Scheduled\";","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"    public static final String VALID_INTERVIEW_COMPLETED \u003d \"Completed\";","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"    public static final String VALID_INTERVIEW_NOT_SCHEDULED \u003d \"Not Scheduled\";","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"    public static final String VALID_AVAILABILITY_AMY \u003d \"1,2,3,4,5\";","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"    public static final String VALID_AVAILABILITY_BOB \u003d \"1,2\";","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"    public static final LocalDateTime VALID_ALICE_INTERVIEW_DATE_TIME \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"            LocalDateTime.of(2023, Month.FEBRUARY, 23, 15, 00);","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    public static final LocalDateTime VALID_BENSON_INTERVIEW_DATE_TIME \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"            LocalDateTime.of(2023, Month.DECEMBER, 01, 15, 00);","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"    public static final LocalDateTime VALID_CARL_INTERVIEW_DATE_TIME \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"            VALID_ALICE_INTERVIEW_DATE_TIME.plusMinutes(15);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"    public static final String STUDENT_ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"    public static final String STUDENT_ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"    public static final String COURSE_DESC_AMY \u003d \" \" + PREFIX_COURSE + VALID_COURSE_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"    public static final String COURSE_DESC_BOB \u003d \" \" + PREFIX_COURSE + VALID_COURSE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"    public static final String SENIORITY_DESC_AMY \u003d \" \" + PREFIX_SENIORITY + VALID_SENIORITY_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"    public static final String SENIORITY_DESC_BOB \u003d \" \" + PREFIX_SENIORITY + VALID_SENIORITY_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"tiewweijian"},"content":"    public static final String APPLICATION_STATUS_PENDING \u003d \" \" + PREFIX_APPLICATION_STATUS + VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tiewweijian"},"content":"    public static final String INTERVIEW_STATUS_PENDING \u003d \" \" + PREFIX_INTERVIEW_STATUS + VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"LeeEnEn"},"content":"    public static final String AVAILABILITY_DESC_AMY \u003d \" \" + PREFIX_AVAILABILITY + VALID_AVAILABILITY_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"LeeEnEn"},"content":"    public static final String AVAILABILITY_DESC_BOB \u003d \" \" + PREFIX_AVAILABILITY + VALID_AVAILABILITY_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"    public static final String INVALID_STUDENT_ID_DESC \u003d \" \" + PREFIX_ID + \"A0123456\"; // Must begin with \u0027E\u0027","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"domlimm"},"content":"    public static final String INVALID_COURSE_DESC \u003d \" \" + PREFIX_COURSE; // empty string not allowed for courses","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"domlimm"},"content":"    public static final String INVALID_SENIORITY_DESC \u003d \" \" + PREFIX_SENIORITY + \"0\"; // Must be a number 1,2,3 or 4","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"LeeEnEn"},"content":"    public static final String INVALID_AVAILABILITY_DESC \u003d \" \"","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"LeeEnEn"},"content":"            + PREFIX_AVAILABILITY + \"1,,1\"; // double commas \u0027,\u0027 not allowed in availability","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"    public static final LocalDateTime INVALID_INTERVIEW_DATE_TIME \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"            LocalDateTime.of(2020, Month.FEBRUARY, 23, 15, 00); //Past date and time","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"charmainehly"},"content":"    public static final EditCommand.EditCandidateDescriptor DESC_AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"    public static final EditCommand.EditCandidateDescriptor DESC_BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"domlimm"},"content":"        DESC_AMY \u003d new EditCandidateDescriptorBuilder().withStudentId(VALID_STUDENT_ID_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"domlimm"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withCourse(VALID_COURSE_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"domlimm"},"content":"                .withSeniority(VALID_SENIORITY_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"domlimm"},"content":"                .withApplicationStatus(APPLICATION_STATUS_PENDING)","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"LeeEnEn"},"content":"                .withInterviewStatus(INTERVIEW_STATUS_PENDING).withAvailability(VALID_AVAILABILITY_AMY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"domlimm"},"content":"        DESC_BOB \u003d new EditCandidateDescriptorBuilder().withStudentId(VALID_STUDENT_ID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"domlimm"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withCourse(VALID_COURSE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"domlimm"},"content":"                .withSeniority(VALID_SENIORITY_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"domlimm"},"content":"                .withApplicationStatus(APPLICATION_STATUS_PENDING)","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"LeeEnEn"},"content":"                .withInterviewStatus(INTERVIEW_STATUS_PENDING).withAvailability(VALID_AVAILABILITY_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"charmainehly"},"content":"     * - the address book, filtered candidate list and selected candidate in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"charmainehly"},"content":"        List\u003cCandidate\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"charmainehly"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"charmainehly"},"content":"     * Updates {@code model}\u0027s filtered list to show only the candidate at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"charmainehly"},"content":"    public static void showCandidateAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"charmainehly"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCandidateList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"charmainehly"},"content":"        Candidate candidate \u003d model.getFilteredCandidateList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"domlimm"},"content":"        final String[] splitName \u003d candidate.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"charmainehly"},"content":"        assertEquals(1, model.getFilteredCandidateList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"charmainehly":11,"tiewweijian":10,"domlimm":34,"LeeEnEn":9,"lzan98":12,"-":99}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCandidateAtIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateToDelete \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CANDIDATE_SUCCESS, candidateToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"                model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        expectedModel.deleteCandidate(candidateToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCandidateList().size() + 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateToDelete \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CANDIDATE_SUCCESS, candidateToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"        expectedModel.deleteCandidate(candidateToDelete);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        showNoCandidate(expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCandidateList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"    public void execute_emptyList_throwsCommandException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(Model.PREDICATE_SHOW_EMPTY_LIST);","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NO_CANDIDATES_IN_SYSTEM);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"    private void showNoCandidate(Model model) {","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(p -\u003e false);","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"        assertTrue(model.getFilteredCandidateList().isEmpty());","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"charmainehly":29,"domlimm":1,"lzan98":10,"-":80}},{"path":"src/test/java/seedu/address/logic/commands/EditCandidateDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.EditCommand.EditCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.EditCandidateDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"public class EditCandidateDescriptorTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptorWithSameValues \u003d new EditCandidateDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor editedAmy \u003d new EditCandidateDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        editedAmy \u003d new EditCandidateDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        editedAmy \u003d new EditCandidateDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        editedAmy \u003d new EditCandidateDescriptorBuilder(DESC_AMY).withCourse(VALID_COURSE_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        editedAmy \u003d new EditCandidateDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"charmainehly":4,"domlimm":7,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_ACCEPTED;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_COMPLETED;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCandidateAtIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.EditCommand.EditCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"tiewweijian"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.EditCandidateDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        Candidate editedCandidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder(editedCandidate).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CANDIDATE, descriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CANDIDATE_SUCCESS, editedCandidate);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"                new InterviewSchedule(model.getInterviewSchedule()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"        expectedModel.setCandidate(model.getFilteredCandidateList().get(0), editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        Index indexLastCandidate \u003d Index.fromOneBased(model.getFilteredCandidateList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        Candidate lastCandidate \u003d model.getFilteredCandidateList().get(indexLastCandidate.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"        CandidateBuilder candidateInList \u003d new CandidateBuilder(lastCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"        Candidate editedCandidate \u003d candidateInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastCandidate, descriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CANDIDATE_SUCCESS, editedCandidate);","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"                new InterviewSchedule(model.getInterviewSchedule()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        expectedModel.setCandidate(lastCandidate, editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CANDIDATE, new EditCandidateDescriptor());","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"        Candidate editedCandidate \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CANDIDATE_SUCCESS, editedCandidate);","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"                new InterviewSchedule(model.getInterviewSchedule()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateInFilteredList \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"domlimm"},"content":"        Candidate editedCandidate \u003d new CandidateBuilder(candidateInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"charmainehly"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CANDIDATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"domlimm"},"content":"                new EditCandidateDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"domlimm"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CANDIDATE_SUCCESS, editedCandidate);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"                new InterviewSchedule(model.getInterviewSchedule()), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"charmainehly"},"content":"        expectedModel.setCandidate(model.getFilteredCandidateList().get(0), editedCandidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"    public void execute_duplicateCandidateUnfilteredList_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"charmainehly"},"content":"        Candidate firstCandidate \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder(firstCandidate).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_CANDIDATE, descriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"domlimm"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CANDIDATE);","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"charmainehly"},"content":"    public void execute_duplicateCandidateFilteredList_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"charmainehly"},"content":"        // edit candidate in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateInList \u003d model.getAddressBook().getCandidateList()","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"charmainehly"},"content":"                .get(INDEX_SECOND_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"charmainehly"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CANDIDATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"domlimm"},"content":"                new EditCandidateDescriptorBuilder(candidateInList).build());","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"domlimm"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CANDIDATE);","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"    public void execute_invalidCandidateIndexUnfilteredList_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCandidateList().size() + 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"charmainehly"},"content":"    public void execute_invalidCandidateIndexFilteredList_failure() {","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"charmainehly"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCandidateList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"domlimm"},"content":"                new EditCandidateDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"tiewweijian"},"content":"    public void execute_trigger_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor editCandidateDescriptor \u003d new EditCandidateDescriptorBuilder()","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"tiewweijian"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":166,"author":{"gitId":"tiewweijian"},"content":"                .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"tiewweijian"},"content":"                .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"tiewweijian"},"content":"                .build();","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"charmainehly"},"content":"        assertEquals(editCandidateDescriptor.getApplicationStatus().get(),","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"tiewweijian"},"content":"                new ApplicationStatus(VALID_APPLICATION_PENDING));","lastModifiedDate":"2022-03-24"},{"lineNumber":171,"author":{"gitId":"charmainehly"},"content":"        assertEquals(editCandidateDescriptor.getInterviewStatus().get(),","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"tiewweijian"},"content":"                new InterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED));","lastModifiedDate":"2022-03-24"},{"lineNumber":173,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":174,"author":{"gitId":"charmainehly"},"content":"        editCandidateDescriptor.setApplicationStatus(new ApplicationStatus(VALID_APPLICATION_ACCEPTED));","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"charmainehly"},"content":"        assertEquals(editCandidateDescriptor.getApplicationStatus().get(),","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"tiewweijian"},"content":"                new ApplicationStatus(VALID_APPLICATION_ACCEPTED));","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"charmainehly"},"content":"        assertEquals(editCandidateDescriptor.getInterviewStatus().get(),","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"tiewweijian"},"content":"                new InterviewStatus(VALID_INTERVIEW_COMPLETED));","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"charmainehly"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_CANDIDATE, DESC_AMY);","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor copyDescriptor \u003d new EditCandidateDescriptor(DESC_AMY);","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"charmainehly"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_CANDIDATE, copyDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"charmainehly"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_CANDIDATE, DESC_AMY)));","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"charmainehly"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_CANDIDATE, DESC_BOB)));","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"charmainehly":51,"tiewweijian":18,"domlimm":14,"lzan98":11,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CANDIDATES_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.CARL;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.ELLE;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.FIONA;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.predicate.CandidateContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"            getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"                new CandidateContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"                new CandidateContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"    public void execute_zeroKeywords_noCandidateFound() {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CANDIDATES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        expectedModel.updateFilteredCandidateList(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"    public void execute_multipleKeywords_multipleCandidatesFound() {","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CANDIDATES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        expectedModel.updateFilteredCandidateList(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"     * Parses {@code userInput} into a {@code CandidateContainsKeywordsPredicate}.","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"    private CandidateContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"charmainehly"},"content":"        return new CandidateContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"charmainehly":25,"lzan98":3,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCandidateAtIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"    public void execute_listIsEmpty_showsEmptyMessage() {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        model \u003d new ModelManager(new AddressBook(), new InterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        assertCommandSuccess(new ListCommand(), model, Messages.MESSAGE_NO_CANDIDATES_IN_SYSTEM, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"charmainehly":4,"LeeEnEn":4,"lzan98":9,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCandidateAtIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_CANDIDATE_NOT_AVAILABLE;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_CONFLICTING_INTERVIEW;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_DUPLICATE_CANDIDATE_INTERVIEW;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.commands.ScheduleCommand.MESSAGE_NOT_OFFICE_HOUR;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.AFTER_OFFICE_HOURS;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.BEFORE_OFFICE_HOURS;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_AMY_TYPICAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.ON_WEEKEND;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.THURSDAY_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.TUESDAY_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.TYPICAL_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"import seedu.address.testutil.InterviewBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new InterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateToInterview \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        LocalDateTime interviewDateTime \u003d TUESDAY_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, interviewDateTime);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        Interview toAdd \u003d new Interview(candidateToInterview, interviewDateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.MESSAGE_SCHEDULED_CANDIDATE_SUCCESS,","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"                toAdd.getCandidate().getName(), toAdd.getCandidate().getStudentId(),","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"                toAdd.getInterviewDate(), toAdd.getInterviewStartTime());","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"                model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        expectedModel.addInterview(toAdd);","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCandidateList().size() + 1);","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, TYPICAL_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, TUESDAY_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateToInterview \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        LocalDateTime interviewDateTime \u003d TUESDAY_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.MESSAGE_SCHEDULED_CANDIDATE_SUCCESS,","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"                candidateToInterview.getName(), candidateToInterview.getStudentId(),","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"                interviewDateTime.toLocalDate(), interviewDateTime.toLocalTime());","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"        Interview toAdd \u003d new Interview(candidateToInterview, interviewDateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"                new InterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(expectedModel, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"        expectedModel.addInterview(toAdd);","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"        showCandidateAtIndex(model, INDEX_FIRST_CANDIDATE);","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCandidateList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_SECOND_CANDIDATE, TYPICAL_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_CANDIDATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"    public void execute_emptyList_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"charmainehly"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"        model.updateFilteredCandidateList(Model.PREDICATE_SHOW_EMPTY_LIST);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, TYPICAL_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_NO_CANDIDATES_IN_SYSTEM);","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"    public void execute_hasSameCandidate_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"charmainehly"},"content":"        Candidate candidateToInterview \u003d model.getFilteredCandidateList().get(INDEX_FIRST_CANDIDATE.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"        model.addInterview(new InterviewBuilder().withCandidate(candidateToInterview)","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"                .withInterviewDateTime(TYPICAL_INTERVIEW_DATE_TIME).build());","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, TYPICAL_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"        assertCommandFailure(scheduleCommand, model, MESSAGE_DUPLICATE_CANDIDATE_INTERVIEW);","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"    public void execute_hasConflictingInterview_throwsCommandException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"        model.addInterview(INTERVIEW_AMY_TYPICAL);","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"        LocalDateTime interviewDateTime \u003d TYPICAL_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, interviewDateTime);","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"        assertCommandFailure(scheduleCommand, model, MESSAGE_CONFLICTING_INTERVIEW);","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"charmainehly"},"content":"    public void execute_hasNoMatchingAvailability_throwsCommandException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"charmainehly"},"content":"        LocalDateTime interviewDateTime \u003d THURSDAY_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, interviewDateTime);","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(scheduleCommand, model, MESSAGE_CANDIDATE_NOT_AVAILABLE);","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"charmainehly"},"content":"    public void execute_beforeOfficeHours_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"charmainehly"},"content":"        LocalDateTime interviewDateTime \u003d BEFORE_OFFICE_HOURS;","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, interviewDateTime);","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(scheduleCommand, model, MESSAGE_NOT_OFFICE_HOUR);","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"charmainehly"},"content":"    public void execute_afterOfficeHours_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"charmainehly"},"content":"        LocalDateTime interviewDateTime \u003d AFTER_OFFICE_HOURS;","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, interviewDateTime);","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"charmainehly"},"content":"        assertCommandFailure(scheduleCommand, model, MESSAGE_NOT_OFFICE_HOUR);","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"charmainehly"},"content":"    public void execute_interviewDuringWeekend_throwsCommandException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"charmainehly"},"content":"        LocalDateTime interviewDateTime \u003d ON_WEEKEND;","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FOURTH_CANDIDATE, interviewDateTime);","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"LeeEnEn"},"content":"        assertCommandFailure(scheduleCommand, model, MESSAGE_CANDIDATE_NOT_AVAILABLE);","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"lzan98"},"content":"    public void equals() {","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleFirstCommand \u003d new ScheduleCommand(INDEX_FIRST_CANDIDATE, TYPICAL_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleSecondCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"charmainehly"},"content":"                new ScheduleCommand(INDEX_SECOND_CANDIDATE, TYPICAL_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"lzan98"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"lzan98"},"content":"        assertTrue(scheduleFirstCommand.equals(scheduleFirstCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":169,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"lzan98"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"charmainehly"},"content":"        ScheduleCommand scheduleFirstCommandcopy \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"charmainehly"},"content":"                new ScheduleCommand(INDEX_FIRST_CANDIDATE, TYPICAL_INTERVIEW_DATE_TIME);","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"lzan98"},"content":"        assertTrue(scheduleFirstCommand.equals(scheduleFirstCommandcopy));","lastModifiedDate":"2022-03-18"},{"lineNumber":174,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"lzan98"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"lzan98"},"content":"        assertFalse(scheduleFirstCommand.equals(1));","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"lzan98"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"lzan98"},"content":"        assertFalse(scheduleFirstCommand.equals(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"lzan98"},"content":"        assertFalse(scheduleFirstCommand.equals(scheduleSecondCommand));","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"charmainehly":69,"LeeEnEn":1,"lzan98":114}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"public class SortCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    private final Comparator\u003cCandidate\u003e sortComparator \u003d (p1, p2) -\u003e 0;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    public void constructor_nullComparator_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null, \"studentid\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    public void constructor_emptySortKey_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(sortComparator, null));","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"        SortCommand sc1 \u003d new SortCommand(sortComparator, \"studentid\");","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"        SortCommand sc2 \u003d new SortCommand(sortComparator, \"studentid\");","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        // have also tested overridden equals(SortCommand) method","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"        assertTrue(sc1.equals(sc2));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        assertFalse(sc1.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        // different sort key -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        SortCommand sc1Copy \u003d new SortCommand(sortComparator, \"name\");","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        assertFalse(sc1.equals(sc1Copy));","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"domlimm":42}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.ViewCommand.MESSAGE_NO_INTERVIEWS_IN_SYSTEM;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.ViewCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"public class ViewCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    private Model model;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"        expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"    public void execute_view_success() {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"        String expectedMessage \u003d MESSAGE_SUCCESS + model.getInterviewSchedule().getInterviewList()","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"                .stream().sorted(Comparator.comparing(Interview::getInterviewDateTime))","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"                .map(Object::toString).collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"        assertCommandSuccess(new ViewCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"    public void execute_listIsEmpty_showsEmptyMessage() {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"        model \u003d new ModelManager(new AddressBook(), new InterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getInterviewSchedule(), new UserPrefs());","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_NO_INTERVIEWS_IN_SYSTEM);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"        assertCommandSuccess(new ViewCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"charmainehly":2,"lzan98":50}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVAILABILITY_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COURSE_DESC;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SENIORITY_DESC;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SENIORITY_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SENIORITY_DESC_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.AMY;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"        Candidate expectedCandidate \u003d new CandidateBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"tiewweijian"},"content":"                .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"tiewweijian"},"content":"                .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"                new AddCommand(expectedCandidate));","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"        assertParseSuccess(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"                new AddCommand(expectedCandidate));","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"        assertParseSuccess(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"                new AddCommand(expectedCandidate));","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"        Candidate expectedCandidateMultipleTags \u003d new CandidateBuilder(BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"        assertParseSuccess(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"                new AddCommand(expectedCandidateMultipleTags));","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"domlimm"},"content":"        Candidate expectedCandidate \u003d new CandidateBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"domlimm"},"content":"        assertParseSuccess(parser, STUDENT_ID_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_AMY + SENIORITY_DESC_AMY + AVAILABILITY_DESC_AMY, new AddCommand(expectedCandidate));","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + VALID_NAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"domlimm"},"content":"                + VALID_COURSE_BOB + SENIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + VALID_NAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"domlimm"},"content":"                + VALID_COURSE_BOB + SENIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"domlimm"},"content":"        // invalid studentId","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, INVALID_STUDENT_ID_DESC + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"LeeEnEn"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"LeeEnEn"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"LeeEnEn"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"domlimm"},"content":"        // invalid course","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"domlimm"},"content":"                + INVALID_COURSE_DESC + SENIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"domlimm"},"content":"                + AVAILABILITY_DESC_BOB, Course.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"domlimm"},"content":"        // invalid seniority","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"domlimm"},"content":"        Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"domlimm"},"content":"        logger.info(STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + INVALID_SENIORITY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"domlimm"},"content":"                + AVAILABILITY_DESC_BOB);","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + INVALID_SENIORITY_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"domlimm"},"content":"                + AVAILABILITY_DESC_BOB, Seniority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"LeeEnEn"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"LeeEnEn"},"content":"        // invalid availability","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"LeeEnEn"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + INVALID_AVAILABILITY_DESC,","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"LeeEnEn"},"content":"                Availability.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"domlimm"},"content":"                + INVALID_COURSE_DESC + SENIORITY_DESC_BOB + AVAILABILITY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + STUDENT_ID_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"domlimm"},"content":"                + COURSE_DESC_BOB + SENIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + AVAILABILITY_DESC_BOB,","lastModifiedDate":"2022-03-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"charmainehly":2,"domlimm":75,"tiewweijian":4,"LeeEnEn":11,"-":78}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.EditCommand.EditCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.predicate.CandidateContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.EditCandidateDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        Candidate candidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        logger.info(candidate.toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(CandidateUtil.getAddCommand(candidate));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"        assertEquals(new AddCommand(candidate), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CANDIDATE.getOneBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_CANDIDATE), command);","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"        Candidate candidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder(candidate).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"                + INDEX_FIRST_CANDIDATE.getOneBased() + \" \"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"                + CandidateUtil.getEditCandidateDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_CANDIDATE, descriptor), command);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"                FindCommand.COMMAND_WORD + \" \" + \"k/foo k/bar k/baz f/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"charmainehly"},"content":"        assertEquals(new FindCommand(new CandidateContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"charmainehly"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" s/\" + \"name\") instanceof SortCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"    public void parseCommand_schedule() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"        ScheduleCommand command \u003d (ScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"charmainehly"},"content":"                ScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CANDIDATE.getOneBased()","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"                        + \" /at 01/01/2023 10:00\");","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"charmainehly"},"content":"        assertEquals(new ScheduleCommand(INDEX_FIRST_CANDIDATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"                LocalDateTime.of(2023, 01, 01, 10, 00)), command);","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD) instanceof ViewCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"charmainehly":19,"domlimm":16,"lzan98":15,"-":82}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_CANDIDATE));","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"charmainehly":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPLICATION_STATUS_PENDING;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVAILABILITY_DESC_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COURSE_DESC_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INTERVIEW_STATUS_PENDING;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.EditCommand.EditCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.EditCandidateDescriptorBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_ID_DESC, StudentId.MESSAGE_CONSTRAINTS); // invalid studentId","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"charmainehly"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Candidate} being edited,","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"domlimm"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_COURSE_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"        Index targetIndex \u003d INDEX_SECOND_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":120,"author":{"gitId":"domlimm"},"content":"                + EMAIL_DESC_AMY + COURSE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"domlimm"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withCourse(VALID_COURSE_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"charmainehly"},"content":"        Index targetIndex \u003d INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"tiewweijian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + APPLICATION_STATUS_PENDING","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"tiewweijian"},"content":"                + INTERVIEW_STATUS_PENDING;","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"tiewweijian"},"content":"                .withEmail(VALID_EMAIL_AMY).withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"tiewweijian"},"content":"                .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"charmainehly"},"content":"        Index targetIndex \u003d INDEX_THIRD_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"domlimm"},"content":"        descriptor \u003d new EditCandidateDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"domlimm"},"content":"        descriptor \u003d new EditCandidateDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"domlimm"},"content":"        userInput \u003d targetIndex.getOneBased() + COURSE_DESC_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"domlimm"},"content":"        descriptor \u003d new EditCandidateDescriptorBuilder().withCourse(VALID_COURSE_AMY).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"domlimm"},"content":"        descriptor \u003d new EditCandidateDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"LeeEnEn"},"content":"        // availability","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"LeeEnEn"},"content":"        userInput \u003d targetIndex.getOneBased() + AVAILABILITY_DESC_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"domlimm"},"content":"        descriptor \u003d new EditCandidateDescriptorBuilder().withAvailability(VALID_AVAILABILITY_AMY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"charmainehly"},"content":"        Index targetIndex \u003d INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"domlimm"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + COURSE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"domlimm"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + COURSE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"LeeEnEn"},"content":"                + PHONE_DESC_BOB + COURSE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + AVAILABILITY_DESC_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"domlimm"},"content":"                .withEmail(VALID_EMAIL_BOB).withCourse(VALID_COURSE_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"LeeEnEn"},"content":"                .withAvailability(VALID_AVAILABILITY_AMY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"charmainehly"},"content":"        Index targetIndex \u003d INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"domlimm"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + COURSE_DESC_BOB","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"LeeEnEn"},"content":"                + PHONE_DESC_BOB + AVAILABILITY_DESC_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"domlimm"},"content":"        descriptor \u003d new EditCandidateDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"LeeEnEn"},"content":"                .withCourse(VALID_COURSE_BOB).withAvailability(VALID_AVAILABILITY_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":219,"author":{"gitId":"charmainehly"},"content":"        Index targetIndex \u003d INDEX_THIRD_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"charmainehly"},"content":"        EditCandidateDescriptor descriptor \u003d new EditCandidateDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"charmainehly":17,"tiewweijian":17,"domlimm":20,"LeeEnEn":7,"-":166}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.predicate.CandidateContainsKeywordsPredicate;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.CourseContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"    public void parse_validArgs_returnsFindNameCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"        FindCommand expectedFindNameCommand \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Amy\", \"Bob\")));","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \" k/Amy k/Bob f/name\", expectedFindNameCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"    k/Amy \\t  k/Bob  \\t  f/name \\t\", expectedFindNameCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"    public void parse_validArgs_returnsFindCourseCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"        FindCommand expectedFindCourseCommand \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"                new FindCommand(new CourseContainsKeywordsPredicate(Arrays.asList(\"info\", \"Computer science\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \" k/info k/Computer science f/course\", expectedFindCourseCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"  \\t  k/info \\t  k/Computer science \\t \\t  f/course \\t\", expectedFindCourseCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"    public void parse_validArgs_returnsFindPhoneCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"        FindCommand expectedFindPhoneCommand \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"                new FindCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(\"987\", \"923\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \" k/987 k/923 f/phone\", expectedFindPhoneCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"  k/987 \\t \\t k/923  \\t  f/phone \\t\", expectedFindPhoneCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"    public void parse_validArgs_returnsFindEmailCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        FindCommand expectedFindEmailCommand \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"                new FindCommand(new EmailContainsKeywordsPredicate(Arrays.asList(\"@gmail\", \"we@mail.com\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \" k/@gmail k/we@mail.com f/email\", expectedFindEmailCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"    k/@gmail \\t  k/we@mail.com  \\t  f/email \\t\", expectedFindEmailCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"    public void parse_validArgs_returnsFindStudentIdCommand() {","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        FindCommand expectedFindStudentIdCommand \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"                new FindCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(\"E0324\", \"149\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \" k/E0324 k/149 f/studentid\", expectedFindStudentIdCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"    k/E0324 \\t \\t  k/149  \\t  f/studentid \\t\", expectedFindStudentIdCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"charmainehly"},"content":"    public void parse_validArgs_returnsFindCandidateCommand() {","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"        FindCommand expectedFindCandidateCommand \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"                new FindCommand(new CandidateContainsKeywordsPredicate(Arrays.asList(\"Amy\", \"computer science\")));","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \" k/Amy k/computer science f/candidate\", expectedFindCandidateCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"charmainehly"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"                \"    k/Amy \\t  k/computer science  \\t  f/candidate \\t\", expectedFindCandidateCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"        // no field specified","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"    k/Amy \\t  k/computer science  \\t  f/ \\t\", expectedFindCandidateCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"        // no field specified","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"    k/Amy \\t  k/computer science  \\t  \\t\", expectedFindCandidateCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"charmainehly":67,"domlimm":5,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Address;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"    private static final String INVALID_STUDENT_ID \u003d \"A0123456\";","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"    private static final String INVALID_SENIORITY \u003d \"one\";","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    private static final String INVALID_DATE_TIME \u003d \"01/01/2000 12:00\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    private static final String INVALID_FORMAT_DATE_TIME \u003d \"2025/03/01 10PM\";","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"    private static final String VALID_STUDENT_ID \u003d \"E0123456\";","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    private static final String VALID_PHONE \u003d \"98765432\";","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    private static final String VALID_DATE_TIME \u003d \"20/03/2025 10:00\";","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        assertEquals(INDEX_FIRST_CANDIDATE, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        assertEquals(INDEX_FIRST_CANDIDATE, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"    public void parseId_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"    public void parseId_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentId(INVALID_STUDENT_ID));","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"    public void parseId_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"        StudentId expectedId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"        assertEquals(expectedId, ParserUtil.parseStudentId(VALID_STUDENT_ID));","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"    public void parseId_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"        String idWithWhitespace \u003d WHITESPACE + VALID_STUDENT_ID + WHITESPACE;","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"        StudentId expectedId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"domlimm"},"content":"        assertEquals(expectedId, ParserUtil.parseStudentId(idWithWhitespace));","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"domlimm"},"content":"    public void parseSeniority_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"domlimm"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSeniority(INVALID_SENIORITY));","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":233,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":234,"author":{"gitId":"lzan98"},"content":"    public void parseDateTime_validFormat_returnsLocalDateTime() throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":235,"author":{"gitId":"lzan98"},"content":"        LocalDateTime actualInterviewDateTime \u003d ParserUtil.parseDateTime(VALID_DATE_TIME);","lastModifiedDate":"2022-03-18"},{"lineNumber":236,"author":{"gitId":"lzan98"},"content":"        LocalDateTime expectedInterviewDateTime \u003d LocalDateTime.of(2025, 03, 20, 10, 00);","lastModifiedDate":"2022-03-18"},{"lineNumber":237,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":238,"author":{"gitId":"lzan98"},"content":"        assertEquals(actualInterviewDateTime, expectedInterviewDateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":239,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":240,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":241,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":242,"author":{"gitId":"lzan98"},"content":"    public void parseDateTime_invalidFormat_throwsException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":243,"author":{"gitId":"lzan98"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateTime(INVALID_FORMAT_DATE_TIME));","lastModifiedDate":"2022-03-18"},{"lineNumber":244,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":245,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":246,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":247,"author":{"gitId":"lzan98"},"content":"    public void parseDateTime_invalidDateTime_throwsException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":248,"author":{"gitId":"lzan98"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateTime(INVALID_DATE_TIME));","lastModifiedDate":"2022-03-18"},{"lineNumber":249,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"charmainehly":3,"domlimm":35,"lzan98":22,"-":190}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CANDIDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":" * outside of the ScheduleCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":" * same path through the ScheduleCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"    private LocalDateTime interviewDateTime \u003d LocalDateTime.of(2023, 03, 20, 10, 00);","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    public void parse_validArgs_returnsScheduleCommand() {","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \"1 /at 20/03/2023 10:00\", new ScheduleCommand(INDEX_FIRST_CANDIDATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"                interviewDateTime));","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    public void parse_invalidDelimiter_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"        assertParseFailure(parser, \"1 /by 20/03/2023 10:00\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"                ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"                ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"charmainehly":2,"lzan98":42}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"charmainehly"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTKEY;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"    private static final String SORT_EMPTY \u003d \" \" + PREFIX_SORTKEY;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        // no sort key specified","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        assertParseFailure(parser, SORT_EMPTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    public void parse_invalidFields_failure() {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"        // invalid field specified","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        assertParseFailure(parser, PREFIX_SORTKEY + \"named\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"        // multiple fields specified","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"        assertParseFailure(parser, PREFIX_SORTKEY + \"name course\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"        // no whitespace before prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        assertParseFailure(parser, PREFIX_SORTKEY + \"name\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"        assertParseFailure(parser, PREFIX_TAG + \"course\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparatorName \u003d Comparator.comparing(l -\u003e l.getName().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparatorCourse \u003d Comparator.comparing(l -\u003e l.getName().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparatorStudentId \u003d Comparator.comparing(l -\u003e l.getName().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparatorPhone \u003d Comparator.comparing(l -\u003e l.getName().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparatorEmail \u003d Comparator.comparing(l -\u003e l.getName().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        SortCommand expectedCommandName \u003d new SortCommand(sortComparatorName, \"name\");","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        SortCommand expectedCommandCourse \u003d new SortCommand(sortComparatorCourse, \"course\");","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        SortCommand expectedCommandStudentId \u003d new SortCommand(sortComparatorStudentId, \"studentid\");","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"        SortCommand expectedCommandPhone \u003d new SortCommand(sortComparatorPhone, \"phone\");","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        SortCommand expectedCommandEmail \u003d new SortCommand(sortComparatorEmail, \"email\");","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, SORT_EMPTY + \"name\", expectedCommandName);","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_SORTKEY + \"name\", expectedCommandName);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, SORT_EMPTY + \"course\", expectedCommandCourse);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, SORT_EMPTY + \"studentid\", expectedCommandStudentId);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, SORT_EMPTY + \"phone\", expectedCommandPhone);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, SORT_EMPTY + \"email\", expectedCommandEmail);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        String userInput \u003d SORT_EMPTY + \"name\" + SORT_EMPTY + \"course\" + SORT_EMPTY + \"studentid\";","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparator \u003d Comparator.comparing(l -\u003e l.getStudentId().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        SortCommand expectedCommand \u003d new SortCommand(sortComparator, \"studentid\");","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"charmainehly":75,"domlimm":7}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.exceptions.DuplicateCandidateException;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        assertEquals(Collections.emptyList(), addressBook.getCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"    public void resetData_withDuplicateCandidates_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"        // Two candidates with the same identity fields","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        Candidate editedAlice \u003d new CandidateBuilder(ALICE).withCourse(VALID_COURSE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"                .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"                .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"LeeEnEn"},"content":"                .withAvailability(VALID_AVAILABILITY_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        List\u003cCandidate\u003e newCandidates \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newCandidates);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"    public void sortCandidates_basedOnName_returnsSortedList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"        ObservableList\u003cCandidate\u003e newData \u003d addressBook.getCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"        List\u003cCandidate\u003e candidatesCopy \u003d new ArrayList\u003cCandidate\u003e(newData);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"        Comparator\u003cCandidate\u003e sortComparator \u003d Comparator.comparing(l -\u003e l.getName().toString().toLowerCase());","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        candidatesCopy.sort(sortComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"        addressBook.setCandidates(newData);","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        addressBook.sortCandidates(newData, sortComparator);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        assertEquals(candidatesCopy, addressBook.getCandidateList());","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"    public void hasCandidate_nullCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasCandidate(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"charmainehly"},"content":"    public void hasCandidate_candidateNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"        assertFalse(addressBook.hasCandidate(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"charmainehly"},"content":"    public void hasCandidate_candidateInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"charmainehly"},"content":"        addressBook.addCandidate(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"        assertTrue(addressBook.hasCandidate(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"charmainehly"},"content":"    public void hasCandidate_candidateWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"        addressBook.addCandidate(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"domlimm"},"content":"        Candidate editedAlice \u003d new CandidateBuilder(ALICE).withCourse(VALID_COURSE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"LeeEnEn"},"content":"                .withAvailability(VALID_AVAILABILITY_BOB).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"        assertTrue(addressBook.hasCandidate(editedAlice));","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"charmainehly"},"content":"    public void getCandidateList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"charmainehly"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getCandidateList().remove(0));","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"charmainehly"},"content":"     * A stub ReadOnlyAddressBook whose candidates list can violate interface constraints.","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"domlimm"},"content":"        private final ObservableList\u003cCandidate\u003e candidates \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"domlimm"},"content":"        AddressBookStub(Collection\u003cCandidate\u003e candidates) {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"domlimm"},"content":"            this.candidates.setAll(candidates);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"        public ObservableList\u003cCandidate\u003e getCandidateList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"domlimm"},"content":"            return candidates;","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"charmainehly":32,"tiewweijian":4,"domlimm":12,"LeeEnEn":3,"-":72}},{"path":"src/test/java/seedu/address/model/InterviewScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_ALICE;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_AMY_TYPICAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_BOB_TYPICAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.TYPICAL_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.ConflictingInterviewException;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.DuplicateCandidateException;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"import seedu.address.testutil.InterviewBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"public class InterviewScheduleTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    private final InterviewSchedule interviewSchedule \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    public void constructor() {","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"        assertEquals(Collections.emptyList(), interviewSchedule.getInterviewList());","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e interviewSchedule.resetData(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    public void resetData_withValidReadOnlyInterviewSchedule_replacesData() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        InterviewSchedule newData \u003d getTypicalInterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.resetData(newData);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"        assertEquals(newData, interviewSchedule);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    public void resetData_withDuplicateInterviewCandidates_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        // Two interviews with the same candidate","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"        Interview editedAliceInterview \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"                new InterviewBuilder(INTERVIEW_ALICE).withInterviewDateTime(TYPICAL_INTERVIEW_DATE_TIME)","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"                .build();","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"        List\u003cInterview\u003e newInterviews \u003d Arrays.asList(INTERVIEW_ALICE, editedAliceInterview);","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        InterviewScheduleStub newData \u003d new InterviewScheduleStub(newInterviews);","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e interviewSchedule.resetData(newData));","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    public void resetData_withConflictingInterviews_throwsConflictingInterviewException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"        // Two interviews with the same date and time","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"        Interview editedAliceInterview \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"                new InterviewBuilder(INTERVIEW_ALICE).withInterviewDateTime(TYPICAL_INTERVIEW_DATE_TIME)","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"                        .build();","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"        List\u003cInterview\u003e newInterviews \u003d Arrays.asList(INTERVIEW_AMY_TYPICAL, editedAliceInterview);","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"        InterviewScheduleStub newData \u003d new InterviewScheduleStub(newInterviews);","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"        assertThrows(ConflictingInterviewException.class, () -\u003e interviewSchedule.resetData(newData));","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"    public void hasCandidate_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e interviewSchedule.hasCandidate(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"    public void hasConflictingInterview_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e interviewSchedule.hasConflictingInterview(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"    public void hasCandidate_interviewNotInInterviewSchedule_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"        assertFalse(interviewSchedule.hasCandidate(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"    public void hasConflictingInterview_interviewNotInInterviewSchedule_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"        assertFalse(interviewSchedule.hasConflictingInterview(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"    public void hasCandidate_interviewInInterviewSchedule_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.addInterview(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"        assertTrue(interviewSchedule.hasCandidate(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    public void hasConflictingInterview_interviewInInterviewSchedule_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.addInterview(INTERVIEW_AMY_TYPICAL);","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"        assertTrue(interviewSchedule.hasConflictingInterview(INTERVIEW_BOB_TYPICAL));","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"    public void hasCandidate_interviewWithSameCandidateInInterviewSchedule_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.addInterview(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"        Interview editedAliceInterview \u003d new InterviewBuilder(INTERVIEW_ALICE)","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"                .withInterviewDateTime(TYPICAL_INTERVIEW_DATE_TIME).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"        assertTrue(interviewSchedule.hasCandidate(editedAliceInterview));","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"    public void hasConflictingInterview_interviewWithSameInterviewDateTimeInInterviewSchedule_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.addInterview(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"        Interview editedAliceInterview \u003d new InterviewBuilder(INTERVIEW_ALICE)","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"                .withCandidate(BOB).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"        assertTrue(interviewSchedule.hasConflictingInterview(editedAliceInterview));","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"charmainehly"},"content":"     * A stub ReadOnlyInterviewSchedule whose candidates list can violate interface constraints.","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"    private static class InterviewScheduleStub implements ReadOnlyInterviewSchedule {","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"        private final ObservableList\u003cInterview\u003e interviews \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"        InterviewScheduleStub(Collection\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"            this.interviews.setAll(interviews);","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"lzan98"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"        public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"            return interviews;","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"charmainehly":2,"lzan98":136}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CANDIDATES;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.BENSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_BENSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"import seedu.address.testutil.InterviewScheduleBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        assertEquals(new InterviewSchedule(), new InterviewSchedule(modelManager.getInterviewSchedule()));","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"    public void hasCandidate_nullCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCandidate(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"    public void hasCandidate_candidateNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"        assertFalse(modelManager.hasCandidate(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"charmainehly"},"content":"    public void hasCandidate_candidateInAddressBook_returnsTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"        modelManager.addCandidate(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"        assertTrue(modelManager.hasCandidate(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"charmainehly"},"content":"    public void getFilteredCandidateList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCandidateList().remove(0));","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003dTODO\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"    public void setInterviewScheduleFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setInterviewScheduleFilePath(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"    public void setInterviewScheduleFilePath_validPath_setsInterviewScheduleFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"        Path path \u003d Paths.get(\"interview/schedule/file/path\");","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"        modelManager.setInterviewScheduleFilePath(path);","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"        assertEquals(path, modelManager.getInterviewScheduleFilePath());","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"    public void hasInterviewCandidate_nullinterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasInterviewCandidate(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"    public void hasConflictingInterview_nullinterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasConflictingInterview(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"    public void hasInterviewCandidate_candidateNotInInterviewSchedule_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"        assertFalse(modelManager.hasInterviewCandidate(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"    public void hasConflictingInterview_interviewNotInInterviewSchedule_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"        assertFalse(modelManager.hasConflictingInterview(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"    public void hasInterviewCandidate_interviewInInterviewSchedule_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"        modelManager.addInterview(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"        assertTrue(modelManager.hasInterviewCandidate(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"    public void hasConflictingInterview_interviewInInterviewSchedule_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"        modelManager.addInterview(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"        assertTrue(modelManager.hasConflictingInterview(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"charmainehly"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withCandidate(ALICE).withCandidate(BENSON).build();","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"lzan98"},"content":"        InterviewSchedule interviewSchedule \u003d new InterviewScheduleBuilder().withInterview(INTERVIEW_ALICE)","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"lzan98"},"content":"                .withInterview(INTERVIEW_BENSON).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"lzan98"},"content":"        InterviewSchedule differentInterviewSchedule \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"lzan98"},"content":"        modelManager \u003d new ModelManager(addressBook, interviewSchedule, userPrefs);","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"lzan98"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, interviewSchedule, userPrefs);","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"lzan98"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook,","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"lzan98"},"content":"                differentInterviewSchedule, userPrefs)));","lastModifiedDate":"2022-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":174,"author":{"gitId":"charmainehly"},"content":"        modelManager.updateFilteredCandidateList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"lzan98"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, interviewSchedule, userPrefs)));","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"charmainehly"},"content":"        modelManager.updateFilteredCandidateList(PREDICATE_SHOW_ALL_CANDIDATES);","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":183,"author":{"gitId":"lzan98"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, interviewSchedule, differentUserPrefs)));","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"charmainehly":20,"domlimm":1,"lzan98":44,"-":120}},{"path":"src/test/java/seedu/address/model/candidate/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"domlimm":1,"-":35}},{"path":"src/test/java/seedu/address/model/candidate/ApplicationStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_ACCEPTED;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_REJECTED;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"public class ApplicationStatusTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ApplicationStatus(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"    public void constructor_test_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"        ApplicationStatus pending \u003d new ApplicationStatus(VALID_APPLICATION_PENDING);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"        ApplicationStatus accepted \u003d new ApplicationStatus(VALID_APPLICATION_ACCEPTED);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tiewweijian"},"content":"        ApplicationStatus rejected \u003d new ApplicationStatus(VALID_APPLICATION_REJECTED);","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(new ApplicationStatus(VALID_APPLICATION_PENDING), pending);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(new ApplicationStatus(VALID_APPLICATION_REJECTED), rejected);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(new ApplicationStatus(VALID_APPLICATION_ACCEPTED), accepted);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"tiewweijian"},"content":"    public void isValidStatus() {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tiewweijian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ApplicationStatus.isValidStatus(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"        //wrong format","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\" \"));","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"accepts\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"rejects\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(ApplicationStatus.isValidStatus(\"denied\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"        //correct format","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"accepted\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"Accepted\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"Rejected\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"rejected\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"Pending\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(ApplicationStatus.isValidStatus(\"pending\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"tiewweijian"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"domlimm":1,"tiewweijian":50}},{"path":"src/test/java/seedu/address/model/candidate/AvailabilityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"LeeEnEn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"LeeEnEn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"LeeEnEn"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"LeeEnEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"LeeEnEn"},"content":"public class AvailabilityTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"LeeEnEn"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"LeeEnEn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Availability(null));","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"LeeEnEn"},"content":"    public void isValidDay() {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"LeeEnEn"},"content":"        // null availability","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"LeeEnEn"},"content":"        assertThrows(NullPointerException.class, () -\u003e Availability.isValidDay(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"LeeEnEn"},"content":"        // invalid availability","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\",\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"0\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"8\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\",1\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"1,\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"1,,2\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"12\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"a\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\",a\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"a,\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"LeeEnEn"},"content":"        assertFalse(Availability.isValidDay(\"a,a\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"LeeEnEn"},"content":"        // valid availability","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"LeeEnEn"},"content":"        assertTrue(Availability.isValidDay(\"2\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"LeeEnEn"},"content":"        assertTrue(Availability.isValidDay(\"1,2,3,4,5\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"LeeEnEn"},"content":"        assertTrue(Availability.isValidDay(\"5,4,3,2,1\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"    private void assertFalse(boolean validDay) {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"LeeEnEn"},"content":"    public void getList_return_list() {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"LeeEnEn"},"content":"        List\u003cString\u003e test \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"LeeEnEn"},"content":"        test.add(\"Mon\");","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"LeeEnEn"},"content":"        test.add(\"Tue\");","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"LeeEnEn"},"content":"        test.add(\"Wed\");","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"LeeEnEn"},"content":"        Availability availability \u003d new Availability(\"1,2,3\");","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"LeeEnEn"},"content":"        assertEquals(availability.getList(), test);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"domlimm":1,"LeeEnEn":55}},{"path":"src/test/java/seedu/address/model/candidate/CandidateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"public class CandidateTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"        Candidate candidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e candidate.getTags().remove(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"    public void isSameCandidate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"        assertTrue(ALICE.isSameCandidate(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"        assertFalse(ALICE.isSameCandidate(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"        Candidate editedAlice \u003d new CandidateBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"                .withCourse(VALID_COURSE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        assertTrue(ALICE.isSameCandidate(editedAlice));","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        // different studentId, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        editedAlice \u003d new CandidateBuilder(ALICE).withStudentId(VALID_STUDENT_ID_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"        assertFalse(ALICE.isSameCandidate(editedAlice));","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        Candidate editedBob \u003d new CandidateBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        assertTrue(BOB.isSameCandidate(editedBob));","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"        editedBob \u003d new CandidateBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        assertTrue(BOB.isSameCandidate(editedBob));","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        // different studentId, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        editedBob \u003d new CandidateBuilder(BOB).withStudentId(VALID_STUDENT_ID_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"        assertFalse(BOB.isSameCandidate(editedBob));","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"        // totally different candidates","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        assertFalse(ALICE.isSameCandidate(BOB));","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        assertFalse(BOB.isSameCandidate(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"        Candidate aliceCopy \u003d new CandidateBuilder(ALICE).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"        Candidate editedAlice \u003d new CandidateBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"        editedAlice \u003d new CandidateBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"domlimm"},"content":"        editedAlice \u003d new CandidateBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"        editedAlice \u003d new CandidateBuilder(ALICE).withCourse(VALID_COURSE_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"domlimm"},"content":"        editedAlice \u003d new CandidateBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"charmainehly":13,"domlimm":29,"-":59}},{"path":"src/test/java/seedu/address/model/candidate/CourseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"public class CourseTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Course(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    public void constructor_invalidCourse_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"        String invalidCourse \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Course(invalidCourse));","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    public void isValidCourse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"        // Null course","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e Course.isValidCourse(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"        // Invalid course","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"computer science\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"computer Science\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"computer science.\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"computer science \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\" computer science\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\" computer science \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"com sci\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"Computer Science Computer Science\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"Computer Science \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\" Computer Science\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\" Computer Science \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"bza\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"BZA\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"cs\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"cs\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"CS\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"ceg\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"CEG\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"is\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"IS\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        // Only computing courses","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"Business Administration\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"        assertFalse(Course.isValidCourse(\"Accountancy\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        // Valid course","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        assertTrue(Course.isValidCourse(\"Business Analytics\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        assertTrue(Course.isValidCourse(\"Computer Engineering\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        assertTrue(Course.isValidCourse(\"Computer Science\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        assertTrue(Course.isValidCourse(\"Information Security\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        assertTrue(Course.isValidCourse(\"Information Systems\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"domlimm":59}},{"path":"src/test/java/seedu/address/model/candidate/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"domlimm":1,"-":67}},{"path":"src/test/java/seedu/address/model/candidate/InterviewStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tiewweijian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_COMPLETED;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tiewweijian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tiewweijian"},"content":"public class InterviewStatusTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"tiewweijian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"tiewweijian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InterviewStatus(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tiewweijian"},"content":"    public void constructor_test_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"tiewweijian"},"content":"        InterviewStatus notScheduled \u003d new InterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tiewweijian"},"content":"        InterviewStatus scheduled \u003d new InterviewStatus(VALID_INTERVIEW_SCHEDULED);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"tiewweijian"},"content":"        InterviewStatus completed \u003d new InterviewStatus(VALID_INTERVIEW_COMPLETED);","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(new InterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED), notScheduled);","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(new InterviewStatus(VALID_INTERVIEW_SCHEDULED), scheduled);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tiewweijian"},"content":"        assertEquals(new InterviewStatus(VALID_INTERVIEW_COMPLETED), completed);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"tiewweijian"},"content":"    public void isValidStatus() {","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tiewweijian"},"content":"        assertThrows(NullPointerException.class, () -\u003e InterviewStatus.isValidStatus(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\" \"));","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"interviews\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"interviewe\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"not interview\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"pend\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"completes\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"schedules\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tiewweijian"},"content":"        assertFalse(InterviewStatus.isValidStatus(\"schedule\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"not scheduled\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"notscheduled\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"Not Scheduled\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"notScheduled\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"Notscheduled\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"Scheduled\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"scheduled\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"Completed\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"        assertTrue(InterviewStatus.isValidStatus(\"completed\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tiewweijian"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"domlimm":1,"tiewweijian":56}},{"path":"src/test/java/seedu/address/model/candidate/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"domlimm":1,"-":39}},{"path":"src/test/java/seedu/address/model/candidate/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"domlimm":1,"-":37}},{"path":"src/test/java/seedu/address/model/candidate/SeniorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"public class SeniorityTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"        Integer invalidSeniority \u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Seniority(invalidSeniority));","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"    public void constructor_invalidSeniority_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"        int invalidSeniority \u003d 0;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Seniority(invalidSeniority));","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"    public void isValidSeniority() {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"        // Invalid seniority","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"        assertFalse(Seniority.isValidSeniority(0));","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"domlimm"},"content":"        assertFalse(Seniority.isValidSeniority(5));","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"        assertFalse(Seniority.isValidSeniority(-10));","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"        assertFalse(Seniority.isValidSeniority(10));","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"        // Invalid seniority (extreme values)","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"domlimm"},"content":"        assertFalse(Seniority.isValidSeniority(Integer.MIN_VALUE));","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"domlimm"},"content":"        assertFalse(Seniority.isValidSeniority(Integer.MAX_VALUE));","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"        // Valid seniority","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"        assertTrue(Seniority.isValidSeniority(1));","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"        assertTrue(Seniority.isValidSeniority(2));","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"domlimm"},"content":"        assertTrue(Seniority.isValidSeniority(3));","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        assertTrue(Seniority.isValidSeniority(4));","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        // NumberFormatException","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        String invalidSeniority \u003d \"year one\";","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        assertThrows(NumberFormatException.class, () -\u003e Seniority.isValidSeniority(Integer.parseInt(invalidSeniority)));","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"domlimm":44}},{"path":"src/test/java/seedu/address/model/candidate/UniqueCandidateListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.BOB;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.exceptions.CandidateNotFoundException;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"import seedu.address.model.candidate.exceptions.DuplicateCandidateException;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"public class UniqueCandidateListTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"    private final UniqueCandidateList uniqueCandidateList \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"    public void contains_nullCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCandidateList.contains(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"    public void contains_candidateNotInList_returnsFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        assertFalse(uniqueCandidateList.contains(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"    public void contains_candidateInList_returnsTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        assertTrue(uniqueCandidateList.contains(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"    public void contains_candidateWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        Candidate editedAlice \u003d new CandidateBuilder(ALICE).withCourse(VALID_COURSE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        assertTrue(uniqueCandidateList.contains(editedAlice));","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"    public void add_nullCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCandidateList.add(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"    public void add_duplicateCandidate_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e uniqueCandidateList.add(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate_nullTargetCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCandidateList.setCandidate(null, ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate_nullEditedCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCandidateList.setCandidate(ALICE, null));","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate_targetCandidateNotInList_throwsCandidateNotFoundException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"        assertThrows(CandidateNotFoundException.class, () -\u003e uniqueCandidateList.setCandidate(ALICE, ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate_editedCandidateIsSameCandidate_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.setCandidate(ALICE, ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"        UniqueCandidateList expectedUniqueCandidateList \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"charmainehly"},"content":"        expectedUniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"        assertEquals(expectedUniqueCandidateList, uniqueCandidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate_editedCandidateHasSameIdentity_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"        Candidate editedAlice \u003d new CandidateBuilder(ALICE).withCourse(VALID_COURSE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.setCandidate(ALICE, editedAlice);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"charmainehly"},"content":"        UniqueCandidateList expectedUniqueCandidateList \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"        expectedUniqueCandidateList.add(editedAlice);","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"        assertEquals(expectedUniqueCandidateList, uniqueCandidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate_editedCandidateHasDifferentIdentity_success() {","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.setCandidate(ALICE, BOB);","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"charmainehly"},"content":"        UniqueCandidateList expectedUniqueCandidateList \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"charmainehly"},"content":"        expectedUniqueCandidateList.add(BOB);","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"charmainehly"},"content":"        assertEquals(expectedUniqueCandidateList, uniqueCandidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"charmainehly"},"content":"    public void setCandidate_editedCandidateHasNonUniqueIdentity_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(BOB);","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"charmainehly"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e uniqueCandidateList.setCandidate(ALICE, BOB));","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"charmainehly"},"content":"    public void remove_nullCandidate_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCandidateList.remove(null));","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"charmainehly"},"content":"    public void remove_candidateDoesNotExist_throwsCandidateNotFoundException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"charmainehly"},"content":"        assertThrows(CandidateNotFoundException.class, () -\u003e uniqueCandidateList.remove(ALICE));","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"charmainehly"},"content":"    public void remove_existingCandidate_removesCandidate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.remove(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"charmainehly"},"content":"        UniqueCandidateList expectedUniqueCandidateList \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"charmainehly"},"content":"        assertEquals(expectedUniqueCandidateList, uniqueCandidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates_nullUniqueCandidateList_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCandidateList.setCandidates((UniqueCandidateList) null));","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates_uniqueCandidateList_replacesOwnListWithProvidedUniqueCandidateList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"charmainehly"},"content":"        UniqueCandidateList expectedUniqueCandidateList \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"charmainehly"},"content":"        expectedUniqueCandidateList.add(BOB);","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.setCandidates(expectedUniqueCandidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"charmainehly"},"content":"        assertEquals(expectedUniqueCandidateList, uniqueCandidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"charmainehly"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCandidateList.setCandidates((List\u003cCandidate\u003e) null));","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.add(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"        List\u003cCandidate\u003e candidateList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"charmainehly"},"content":"        uniqueCandidateList.setCandidates(candidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"charmainehly"},"content":"        UniqueCandidateList expectedUniqueCandidateList \u003d new UniqueCandidateList();","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"charmainehly"},"content":"        expectedUniqueCandidateList.add(BOB);","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"charmainehly"},"content":"        assertEquals(expectedUniqueCandidateList, uniqueCandidateList);","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"charmainehly"},"content":"    public void setCandidates_listWithDuplicateCandidates_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"domlimm"},"content":"        List\u003cCandidate\u003e listWithDuplicateCandidates \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"charmainehly"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e uniqueCandidateList","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"charmainehly"},"content":"                .setCandidates(listWithDuplicateCandidates));","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"charmainehly"},"content":"            -\u003e uniqueCandidateList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"charmainehly":77,"domlimm":8,"-":86}},{"path":"src/test/java/seedu/address/model/candidate/predicate/CandidateContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"public class CandidateContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"                new CandidateContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"                new CandidateContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"                new CandidateContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public void test_candidateContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate predicate \u003d new CandidateContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \"Alice\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CandidateContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Business Analytics\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CandidateContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CandidateContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"e0324\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"    public void test_candidateDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"        CandidateContainsKeywordsPredicate predicate \u003d new CandidateContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CandidateContainsKeywordsPredicate(Arrays.asList(\"Carol Alice\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":65,"domlimm":15}},{"path":"src/test/java/seedu/address/model/candidate/predicate/CourseContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"public class CourseContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        CourseContainsKeywordsPredicate firstPredicate \u003d new CourseContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        CourseContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"                new CourseContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"        CourseContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"                new CourseContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    public void test_courseContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        CourseContainsKeywordsPredicate predicate \u003d new CourseContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"                \"computer\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withCourse(\"Computer Science\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"Information\", \"Systems\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withCourse(\"Information Systems\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"Business\", \"Computer\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withCourse(\"Business Analytics\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"AnALyTICs\", \"BusINESS\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withCourse(\"Business Analytics\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"    public void test_courseDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"        CourseContainsKeywordsPredicate predicate \u003d new CourseContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Computer Science\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Computer Science\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"        // Keywords match other fields, but does/do not match course","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new CourseContainsKeywordsPredicate(Arrays.asList(\"87654321\", \"alice@email.com\", \"E0324444\",","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"                \"Street\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":69,"domlimm":10}},{"path":"src/test/java/seedu/address/model/candidate/predicate/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"                \"alice@email.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"@gmail\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withEmail(\"Alice@gmail.com.sg\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"email.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withEmail(\"Alice@gmail.com\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"@GMAIL.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withEmail(\"Alice@gmail.com\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withEmail(\"Alice@gmail.com\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"gmail.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        // Keywords match other fields, but does/do not match email","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"87654321\", \"E0324444\", \"Main\",","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"                \"Street\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":68,"domlimm":10}},{"path":"src/test/java/seedu/address/model/candidate/predicate/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        // Keywords match other fields, but does/do not match name","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"87654321\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"charmainehly":2,"domlimm":11,"-":62}},{"path":"src/test/java/seedu/address/model/candidate/predicate/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"                \"9235\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withPhone(\"92352677\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"9235\", \"2677\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withPhone(\"92352677\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"9235\", \"11111\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withPhone(\"92352677\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withPhone(\"92352677\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"92352678\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withPhone(\"92352677\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"        // Spaces in keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"9235 2677\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withPhone(\"92352677\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"charmainehly"},"content":"        // Keywords match other fields, but does/do not match phone","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"Business Analytics\", \"alice@email.com\", \"Main\",","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"                \"Street\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":68,"domlimm":10}},{"path":"src/test/java/seedu/address/model/candidate/predicate/StudentIdContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domlimm"},"content":"package seedu.address.model.candidate.predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.testutil.CandidateBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"public class StudentIdContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"        StudentIdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"                new StudentIdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"        StudentIdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"                new StudentIdContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"        StudentIdContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"                new StudentIdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"charmainehly"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"        // different candidate -\u003e returns false","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"    public void test_studentIdContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"charmainehly"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d new StudentIdContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"                \"E0234\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withStudentId(\"E0234149\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new StudentIdContainsKeywordsPredicate(Arrays.asList(\"E0234\", \"414\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withStudentId(\"E0234149\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new StudentIdContainsKeywordsPredicate(Arrays.asList(\"E0234\", \"414\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withStudentId(\"E0234119\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new StudentIdContainsKeywordsPredicate(Arrays.asList(\"e0234\", \"E0234\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"        assertTrue(predicate.test(new CandidateBuilder().withStudentId(\"E0234119\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"charmainehly"},"content":"    public void test_studentIdDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"charmainehly"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"charmainehly"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d new StudentIdContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withStudentId(\"E0234119\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"charmainehly"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new StudentIdContainsKeywordsPredicate(Arrays.asList(\"A0234\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withStudentId(\"E0234119\").build()));","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"        // Keywords match other fields, but does/do not match student id","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        predicate \u003d new StudentIdContainsKeywordsPredicate(Arrays.asList(\"87654321\", \"alice@email.com\", \"Main\",","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"                \"Street\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"        assertFalse(predicate.test(new CandidateBuilder().withName(\"Alice\").withPhone(\"87654321\")","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"                .withEmail(\"alice@email.com\").withCourse(\"Business Analytics\").withStudentId(\"E0324444\").build()));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"charmainehly"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"charmainehly"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"charmainehly":70,"domlimm":10}},{"path":"src/test/java/seedu/address/model/interview/UniqueInterviewListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_ALICE;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_AMY_TYPICAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_BENSON;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_BOB_TYPICAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.INTERVIEW_CARL;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"import static seedu.address.testutil.TypicalInterviews.TYPICAL_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.ConflictingInterviewException;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.DuplicateCandidateException;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"import seedu.address.testutil.InterviewBuilder;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"public class UniqueInterviewListTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"    private final UniqueInterviewList uniqueInterviewList \u003d new UniqueInterviewList();","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    public void containsCandidate_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"                uniqueInterviewList.containsCandidate(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"    public void containsConflictingInterview_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"                uniqueInterviewList.containsConflictingInterview(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    public void containsCandidate_interviewNotInList_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        assertFalse(uniqueInterviewList.containsCandidate(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    public void containsConflictingInterview_interviewNotInList_returnsFalse() {","lastModifiedDate":"2022-03-18"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        assertFalse(uniqueInterviewList.containsConflictingInterview(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    public void containsCandidate_interviewInList_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"        assertTrue(uniqueInterviewList.containsCandidate(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"lzan98"},"content":"    public void containsConflictingInterview_interviewInList_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_AMY_TYPICAL);","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"lzan98"},"content":"        assertTrue(uniqueInterviewList.containsConflictingInterview(INTERVIEW_AMY_TYPICAL));","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"lzan98"},"content":"    public void containsCandidate_interviewWithSameCandidateInList_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"lzan98"},"content":"        Interview editedAliceInterview \u003d new InterviewBuilder(INTERVIEW_ALICE)","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"lzan98"},"content":"                .withInterviewDateTime(TYPICAL_INTERVIEW_DATE_TIME).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"lzan98"},"content":"        assertTrue(uniqueInterviewList.containsCandidate(editedAliceInterview));","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"    public void containsConflictingInterview_interviewWithSameDateTimeInList_returnsTrue() {","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_AMY_TYPICAL);","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"        assertTrue(uniqueInterviewList.containsConflictingInterview(INTERVIEW_BOB_TYPICAL));","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"    public void add_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInterviewList.add(null));","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"    public void add_duplicateInterviewCandidate_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e uniqueInterviewList.add(INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"lzan98"},"content":"    public void add_conflictingInterviewDateTime_throwsConflictingInterviewException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":91,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":92,"author":{"gitId":"lzan98"},"content":"        assertThrows(ConflictingInterviewException.class, () -\u003e uniqueInterviewList.add(INTERVIEW_CARL));","lastModifiedDate":"2022-03-18"},{"lineNumber":93,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":95,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":96,"author":{"gitId":"lzan98"},"content":"    public void setInterview_nullTargetInterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInterviewList.setInterview(null, INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":98,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":99,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":100,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"lzan98"},"content":"    public void setInterview_nullEditedInterview_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":102,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInterviewList.setInterview(INTERVIEW_ALICE, null));","lastModifiedDate":"2022-03-18"},{"lineNumber":103,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":104,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":105,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":106,"author":{"gitId":"lzan98"},"content":"    public void setInterview_targetInterviewNotInList_throwsInterviewNotFoundException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"lzan98"},"content":"        assertThrows(InterviewNotFoundException.class, () -\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"lzan98"},"content":"                uniqueInterviewList.setInterview(INTERVIEW_ALICE, INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":110,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":111,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":112,"author":{"gitId":"lzan98"},"content":"    public void setInterview_hasSameCandidate_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":113,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":114,"author":{"gitId":"lzan98"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":115,"author":{"gitId":"lzan98"},"content":"                uniqueInterviewList.setInterview(INTERVIEW_ALICE, INTERVIEW_ALICE));","lastModifiedDate":"2022-03-18"},{"lineNumber":116,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":119,"author":{"gitId":"lzan98"},"content":"    public void setInterview_hasConflictingInterview_throwsConflictingInterviewException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":121,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_AMY_TYPICAL);","lastModifiedDate":"2022-03-18"},{"lineNumber":122,"author":{"gitId":"lzan98"},"content":"        assertThrows(ConflictingInterviewException.class, () -\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":123,"author":{"gitId":"lzan98"},"content":"                uniqueInterviewList.setInterview(INTERVIEW_ALICE, INTERVIEW_BOB_TYPICAL));","lastModifiedDate":"2022-03-18"},{"lineNumber":124,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":127,"author":{"gitId":"lzan98"},"content":"    public void setInterviews_nulluniqueInterviewList_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":128,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInterviewList.setInterviews((UniqueInterviewList) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":130,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":131,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"lzan98"},"content":"    public void setInterviews_uniqueInterviewList_replacesOwnListWithProvidedUniqueInterviewList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"lzan98"},"content":"        UniqueInterviewList expectedUniqueInterviewList \u003d new UniqueInterviewList();","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"lzan98"},"content":"        expectedUniqueInterviewList.add(INTERVIEW_BENSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.setInterviews(expectedUniqueInterviewList);","lastModifiedDate":"2022-03-18"},{"lineNumber":137,"author":{"gitId":"lzan98"},"content":"        assertEquals(expectedUniqueInterviewList, uniqueInterviewList);","lastModifiedDate":"2022-03-18"},{"lineNumber":138,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"lzan98"},"content":"    public void setInterviews_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"lzan98"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInterviewList.setInterviews((List\u003cInterview\u003e) null));","lastModifiedDate":"2022-03-18"},{"lineNumber":143,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":144,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":145,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":146,"author":{"gitId":"lzan98"},"content":"    public void setInterviews_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":147,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.add(INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":148,"author":{"gitId":"lzan98"},"content":"        List\u003cInterview\u003e interviewList \u003d Collections.singletonList(INTERVIEW_BENSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":149,"author":{"gitId":"lzan98"},"content":"        uniqueInterviewList.setInterviews(interviewList);","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"lzan98"},"content":"        UniqueInterviewList expectedUniqueInterviewList \u003d new UniqueInterviewList();","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"lzan98"},"content":"        expectedUniqueInterviewList.add(INTERVIEW_BENSON);","lastModifiedDate":"2022-03-18"},{"lineNumber":152,"author":{"gitId":"lzan98"},"content":"        assertEquals(expectedUniqueInterviewList, uniqueInterviewList);","lastModifiedDate":"2022-03-18"},{"lineNumber":153,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":155,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":156,"author":{"gitId":"lzan98"},"content":"    public void setInterviews_listWithDuplicateInterviewCandidates_throwsDuplicateCandidateException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"lzan98"},"content":"        List\u003cInterview\u003e listWithDuplicateCandidates \u003d Arrays.asList(INTERVIEW_ALICE, INTERVIEW_ALICE);","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"lzan98"},"content":"        assertThrows(DuplicateCandidateException.class, () -\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"lzan98"},"content":"                uniqueInterviewList.setInterviews(listWithDuplicateCandidates));","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":163,"author":{"gitId":"lzan98"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-18"},{"lineNumber":164,"author":{"gitId":"lzan98"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"lzan98"},"content":"            -\u003e uniqueInterviewList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"lzan98":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedCandidateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.storage.JsonAdaptedCandidate.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.BENSON;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"public class JsonAdaptedCandidateTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"domlimm"},"content":"    private static final String INVALID_STUDENT_ID \u003d \"A0123456\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"    private static final String INVALID_COURSE \u003d \"computer Science\";","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":"    private static final String INVALID_SENIORITY \u003d \"0.0\";","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"    private static final String INVALID_AVAILABILITY \u003d \"9\";","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    private static final String VALID_STUDENT_ID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    private static final String VALID_COURSE \u003d BENSON.getCourse().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"    private static final String VALID_SENIORITY \u003d BENSON.getSeniority().toString();","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"tiewweijian"},"content":"    private static final String VALID_APPLICATION_STATUS \u003d new ApplicationStatus(\"Pending\").toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"    private static final String VALID_INTERVIEW_STATUS \u003d new InterviewStatus(\"Pending\").toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"LeeEnEn"},"content":"    private static final String VALID_AVAILABILITY \u003d BENSON.getAvailability().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"charmainehly"},"content":"    public void toModelType_validCandidateDetails_returnsCandidate() throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(BENSON);","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"        assertEquals(BENSON, candidate.toModelType());","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"charmainehly"},"content":"                INVALID_STUDENT_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COURSE, VALID_SENIORITY,","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"charmainehly"},"content":"                VALID_TAGS, VALID_APPLICATION_STATUS, VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(null, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"                VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"                VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"tiewweijian"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"charmainehly"},"content":"                new JsonAdaptedCandidate(VALID_STUDENT_ID, INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"                        VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"                        VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(VALID_STUDENT_ID, null, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"                VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"                VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"                new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"                        VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"                        VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, null,","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"domlimm"},"content":"                VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"                VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"charmainehly"},"content":"                new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"domlimm"},"content":"                        INVALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":114,"author":{"gitId":"domlimm"},"content":"                        VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"domlimm"},"content":"                null, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS, VALID_INTERVIEW_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"LeeEnEn"},"content":"                VALID_AVAILABILITY);","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"charmainehly"},"content":"                new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"domlimm"},"content":"                        VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, invalidTags, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"domlimm"},"content":"                        VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"domlimm"},"content":"    public void toModelType_invalidCourse_throwsIllegalValueException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"domlimm"},"content":"                VALID_EMAIL, INVALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"domlimm"},"content":"                VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"domlimm"},"content":"    public void toModelType_nullCourse_throwsIllegalValueException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"domlimm"},"content":"                VALID_EMAIL, null, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS, VALID_INTERVIEW_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"LeeEnEn"},"content":"                VALID_AVAILABILITY);","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"LeeEnEn"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Course.class.getSimpleName());","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"domlimm"},"content":"    @Test","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"domlimm"},"content":"    public void toModelType_invalidSeniority_throwsIllegalValueException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"domlimm"},"content":"                VALID_EMAIL, VALID_COURSE, INVALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"domlimm"},"content":"                VALID_INTERVIEW_STATUS, VALID_AVAILABILITY);","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"LeeEnEn"},"content":"    public void toModelType_invalidAvailability_throwsIllegalValueException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"charmainehly"},"content":"                new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"domlimm"},"content":"                        VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":169,"author":{"gitId":"domlimm"},"content":"                        VALID_INTERVIEW_STATUS, INVALID_AVAILABILITY);","lastModifiedDate":"2022-03-24"},{"lineNumber":170,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"LeeEnEn"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"LeeEnEn"},"content":"    public void toModelType_nullAvailability_throwsIllegalValueException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"charmainehly"},"content":"        JsonAdaptedCandidate candidate \u003d new JsonAdaptedCandidate(VALID_STUDENT_ID, VALID_NAME, VALID_PHONE,","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"domlimm"},"content":"                VALID_EMAIL, VALID_COURSE, VALID_SENIORITY, VALID_TAGS, VALID_APPLICATION_STATUS,","lastModifiedDate":"2022-03-24"},{"lineNumber":177,"author":{"gitId":"domlimm"},"content":"                VALID_INTERVIEW_STATUS, null);","lastModifiedDate":"2022-03-24"},{"lineNumber":178,"author":{"gitId":"domlimm"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Availability.class.getSimpleName());","lastModifiedDate":"2022-03-24"},{"lineNumber":179,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, candidate::toModelType);","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charmainehly":40,"domlimm":60,"tiewweijian":3,"LeeEnEn":13,"-":65}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.ALICE;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.HOON;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.IDA;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"charmainehly"},"content":"    public void readAddressBook_invalidCandidateAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"charmainehly"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidCandidateAddressBook.json\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"charmainehly"},"content":"    public void readAddressBook_invalidAndValidCandidateAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"charmainehly"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidCandidateAddressBook.json\"));","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"charmainehly"},"content":"        original.addCandidate(HOON);","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"charmainehly"},"content":"        original.removeCandidate(ALICE);","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"charmainehly"},"content":"        original.addCandidate(IDA);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charmainehly":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"charmainehly"},"content":"import seedu.address.testutil.TypicalCandidates;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"charmainehly"},"content":"    private static final Path TYPICAL_CANDIDATES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCandidatesAddressBook.json\");","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":"    private static final Path INVALID_CANDIDATE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCandidateAddressBook.json\");","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":"    private static final Path DUPLICATE_CANDIDATE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCandidateAddressBook.json\");","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"    public void toModelType_typicalCandidatesFile_success() throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CANDIDATES_FILE,","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        AddressBook typicalCandidatesAddressBook \u003d TypicalCandidates.getTypicalAddressBook();","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"charmainehly"},"content":"        assertEquals(addressBookFromFile, typicalCandidatesAddressBook);","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"charmainehly"},"content":"    public void toModelType_invalidCandidateFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"charmainehly"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CANDIDATE_FILE,","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"charmainehly"},"content":"    public void toModelType_duplicateCandidates_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"charmainehly"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CANDIDATE_FILE,","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CANDIDATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"charmainehly":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalCandidates.getTypicalAddressBook;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"charmainehly"},"content":"import static seedu.address.testutil.TypicalInterviews.getTypicalInterviewSchedule;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.ReadOnlyInterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"        JsonInterviewScheduleStorage interviewScheduleStorage \u003d new JsonInterviewScheduleStorage(getTempFilePath(\"is\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, interviewScheduleStorage);","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"lzan98"},"content":"    public void interviewScheduleReadSave() throws Exception {","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"lzan98"},"content":"        /*","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"lzan98"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"lzan98"},"content":"         * {@link JsonInterviewScheduleStorage} class.","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"lzan98"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonInterviewScheduleStorageTest} class.","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"lzan98"},"content":"         */","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"lzan98"},"content":"        InterviewSchedule original \u003d getTypicalInterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":80,"author":{"gitId":"lzan98"},"content":"        storageManager.saveInterviewSchedule(original);","lastModifiedDate":"2022-03-18"},{"lineNumber":81,"author":{"gitId":"lzan98"},"content":"        ReadOnlyInterviewSchedule retrieved \u003d storageManager.readInterviewSchedule().get();","lastModifiedDate":"2022-03-18"},{"lineNumber":82,"author":{"gitId":"lzan98"},"content":"        assertEquals(original, new InterviewSchedule(retrieved));","lastModifiedDate":"2022-03-18"},{"lineNumber":83,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":84,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"lzan98"},"content":"    @Test","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"lzan98"},"content":"    public void getInterviewScheduleFilePath() {","lastModifiedDate":"2022-03-18"},{"lineNumber":87,"author":{"gitId":"lzan98"},"content":"        assertNotNull(storageManager.getInterviewScheduleFilePath());","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":2,"lzan98":22,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withCandidate(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"     * Adds a new {@code Candidate} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"    public AddressBookBuilder withCandidate(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"charmainehly"},"content":"        addressBook.addCandidate(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":4,"domlimm":1,"-":29}},{"path":"src/test/java/seedu/address/testutil/CandidateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"charmainehly"},"content":" * A utility class to help with building Candidate objects.","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"domlimm"},"content":"public class CandidateBuilder {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"    public static final String DEFAULT_STUDENT_ID \u003d \"E0123456\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"    public static final String DEFAULT_EMAIL \u003d \"E0123456@u.nus.edu\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"domlimm"},"content":"    public static final String DEFAULT_COURSE \u003d \"Computer Science\";","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"    public static final String DEFAULT_SENIORITY \u003d \"COM2\";","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tiewweijian"},"content":"    public static final String DEFAULT_APPLICATION_STATUS \u003d \"Pending\";","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"tiewweijian"},"content":"    public static final String DEFAULT_INTERVIEW_STATUS \u003d \" Not Scheduled\";","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"LeeEnEn"},"content":"    public static final String DEFAULT_AVAILABILITY \u003d \"1,2,3,4,5\";","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    private StudentId studentId;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    private Course course;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"    private Seniority seniority;","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"tiewweijian"},"content":"    private ApplicationStatus applicationStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"    private InterviewStatus interviewStatus;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"LeeEnEn"},"content":"    private Availability availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"     * Creates a {@code CandidateBuilder} with the default details.","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder() {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        studentId \u003d new StudentId(DEFAULT_STUDENT_ID);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"        course \u003d new Course(DEFAULT_COURSE);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"        seniority \u003d new Seniority(Integer.parseInt(DEFAULT_SENIORITY.substring(DEFAULT_SENIORITY.length() - 1)));","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"tiewweijian"},"content":"        applicationStatus \u003d new ApplicationStatus(DEFAULT_APPLICATION_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"tiewweijian"},"content":"        interviewStatus \u003d new InterviewStatus(DEFAULT_INTERVIEW_STATUS);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"LeeEnEn"},"content":"        availability \u003d new Availability(DEFAULT_AVAILABILITY);","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"     * Initializes the CandidateBuilder with the data of {@code candidateToCopy}.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder(Candidate candidateToCopy) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"domlimm"},"content":"        studentId \u003d candidateToCopy.getStudentId();","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"domlimm"},"content":"        name \u003d candidateToCopy.getName();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"domlimm"},"content":"        phone \u003d candidateToCopy.getPhone();","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"        email \u003d candidateToCopy.getEmail();","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"        course \u003d candidateToCopy.getCourse();","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"        seniority \u003d candidateToCopy.getSeniority();","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"        tags \u003d new HashSet\u003c\u003e(candidateToCopy.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"        applicationStatus \u003d candidateToCopy.getApplicationStatus();","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"        interviewStatus \u003d candidateToCopy.getInterviewStatus();","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"        availability \u003d candidateToCopy.getAvailability();","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code StudentId} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withStudentId(String id) {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"        this.studentId \u003d new StudentId(id);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Name} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"charmainehly"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Phone} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Email} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withEmail(String email) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Course} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withCourse(String course) {","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"domlimm"},"content":"        this.course \u003d new Course(course);","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"domlimm"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Seniority} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":127,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withSeniority(String seniority) {","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"domlimm"},"content":"        this.seniority \u003d new Seniority(Integer.parseInt(seniority.substring(seniority.length() - 1)));","lastModifiedDate":"2022-03-24"},{"lineNumber":130,"author":{"gitId":"domlimm"},"content":"        return this;","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Application Status} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withApplicationStatus(String applicationStatus) {","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"tiewweijian"},"content":"        this.applicationStatus \u003d new ApplicationStatus(applicationStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"tiewweijian"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Interview Status} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":143,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withInterviewStatus(String interviewStatus) {","lastModifiedDate":"2022-03-17"},{"lineNumber":145,"author":{"gitId":"tiewweijian"},"content":"        this.interviewStatus \u003d new InterviewStatus(interviewStatus);","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"tiewweijian"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":150,"author":{"gitId":"domlimm"},"content":"     * Sets the {@code Availability} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"    public CandidateBuilder withAvailability(String availability) {","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"LeeEnEn"},"content":"        this.availability \u003d new Availability(availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":154,"author":{"gitId":"LeeEnEn"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":157,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":158,"author":{"gitId":"domlimm"},"content":"     * Returns a new Candidate with specific fields.","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"domlimm"},"content":"     * @return a new Candidate.","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"domlimm"},"content":"    public Candidate build() {","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"domlimm"},"content":"        return new Candidate(studentId, name, phone, email, course, seniority, tags,","lastModifiedDate":"2022-03-24"},{"lineNumber":163,"author":{"gitId":"domlimm"},"content":"                applicationStatus, interviewStatus, availability);","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"charmainehly":2,"domlimm":77,"tiewweijian":18,"LeeEnEn":11,"-":58}},{"path":"src/test/java/seedu/address/testutil/CandidateUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICATION_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVAILABILITY;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSE;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_STATUS;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SENIORITY;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.EditCommand.EditCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":" * A utility class for Candidate.","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"domlimm"},"content":"public class CandidateUtil {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"     * Returns an add command string for adding the {@code candidate}.","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"domlimm"},"content":"    public static String getAddCommand(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getCandidateDetails(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"     * Returns the part of command string for the given {@code candidate}\u0027s details.","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"    public static String getCandidateDetails(Candidate candidate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"        sb.append(PREFIX_ID + candidate.getStudentId().studentId + \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"        sb.append(PREFIX_NAME + candidate.getName().fullName + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        sb.append(PREFIX_PHONE + candidate.getPhone().value + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        sb.append(PREFIX_COURSE + candidate.getCourse().course + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        sb.append(PREFIX_SENIORITY + candidate.getSeniority().seniority + \" \");","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        sb.append(PREFIX_AVAILABILITY + candidate.getAvailability().availability + \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        candidate.getTags().stream().forEach(","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"charmainehly"},"content":"     * Returns the part of command string for the given {@code EditCandidateDescriptor}\u0027s details.","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"    public static String getEditCandidateDescriptorDetails(EditCandidateDescriptor descriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"        descriptor.getStudentId().ifPresent(id -\u003e sb.append(PREFIX_ID).append(id.studentId).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"        descriptor.getCourse().ifPresent(course -\u003e sb.append(PREFIX_COURSE).append(course.course).append(\" \"));","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"        descriptor.getSeniority().ifPresent(seniority -\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"                sb.append(PREFIX_SENIORITY).append(seniority.seniority).append(\" \"));","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"tiewweijian"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"tiewweijian"},"content":"        descriptor.getApplicationStatus().ifPresent(applicationStatus -\u003e sb.append(PREFIX_APPLICATION_STATUS)","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"tiewweijian"},"content":"                .append(applicationStatus.toString()).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"tiewweijian"},"content":"        descriptor.getInterviewStatus().ifPresent(interviewStatus -\u003e sb.append(PREFIX_INTERVIEW_STATUS)","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"tiewweijian"},"content":"                .append(interviewStatus.toString()).append(\" \"));","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"LeeEnEn"},"content":"        descriptor.getAvailability().ifPresent(availability -\u003e sb.append(PREFIX_AVAILABILITY)","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"LeeEnEn"},"content":"                .append(availability.availability).append(\" \"));","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"charmainehly":6,"tiewweijian":9,"domlimm":24,"LeeEnEn":3,"-":38}},{"path":"src/test/java/seedu/address/testutil/EditCandidateDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"charmainehly"},"content":"import seedu.address.logic.commands.EditCommand.EditCandidateDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.ApplicationStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Availability;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Course;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Email;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.InterviewStatus;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Seniority;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.StudentId;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"charmainehly"},"content":" * A utility class to help with building EditCandidateDescriptor objects.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"domlimm"},"content":"public class EditCandidateDescriptorBuilder {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    private EditCandidateDescriptor descriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder() {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"        descriptor \u003d new EditCandidateDescriptor();","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"charmainehly"},"content":"    public EditCandidateDescriptorBuilder(EditCandidateDescriptor descriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"        this.descriptor \u003d new EditCandidateDescriptor(descriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"     * Returns an {@code EditCandidateDescriptor} with fields containing {@code candidate}\u0027s details","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder(Candidate candidate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        descriptor \u003d new EditCandidateDescriptor();","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"        descriptor.setStudentId(candidate.getStudentId());","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"        descriptor.setName(candidate.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"domlimm"},"content":"        descriptor.setPhone(candidate.getPhone());","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"domlimm"},"content":"        descriptor.setEmail(candidate.getEmail());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"domlimm"},"content":"        descriptor.setCourse(candidate.getCourse());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"        descriptor.setSeniority(candidate.getSeniority());","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"        descriptor.setTags(candidate.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"        descriptor.setApplicationStatus(candidate.getApplicationStatus());","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"        descriptor.setInterviewStatus(candidate.getInterviewStatus());","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"        descriptor.setAvailability(candidate.getAvailability());","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code StudentId} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withStudentId(String id) {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"domlimm"},"content":"        descriptor.setStudentId(new StudentId(id));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code Name} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code Phone} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code Email} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code Course} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withCourse(String course) {","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"domlimm"},"content":"        descriptor.setCourse(new Course(course));","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"domlimm"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code Seniority} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withSeniority(String seniority) {","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"domlimm"},"content":"        descriptor.setSeniority(new Seniority(Integer.parseInt(seniority.substring(seniority.length() - 1))));","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"domlimm"},"content":"        return this;","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"domlimm"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"domlimm"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"charmainehly"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCandidateDescriptor}","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"charmainehly"},"content":"    public EditCandidateDescriptor build() {","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code ApplicationStatus} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withApplicationStatus(String applicationStatus) {","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"tiewweijian"},"content":"        descriptor.setApplicationStatus(new ApplicationStatus(applicationStatus));","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"tiewweijian"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"tiewweijian"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"tiewweijian"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code InterviewStatus} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"tiewweijian"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withInterviewStatus(String interviewStatus) {","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"tiewweijian"},"content":"        descriptor.setInterviewStatus(new InterviewStatus(interviewStatus));","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"tiewweijian"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"tiewweijian"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"LeeEnEn"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":130,"author":{"gitId":"LeeEnEn"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"charmainehly"},"content":"     * Sets the {@code Availability} of the {@code EditCandidateDescriptor} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"LeeEnEn"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"domlimm"},"content":"    public EditCandidateDescriptorBuilder withAvailability(String availability) {","lastModifiedDate":"2022-03-17"},{"lineNumber":134,"author":{"gitId":"LeeEnEn"},"content":"        descriptor.setAvailability(new Availability(availability));","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"LeeEnEn"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"LeeEnEn"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"charmainehly":19,"domlimm":46,"tiewweijian":12,"LeeEnEn":6,"-":54}},{"path":"src/test/java/seedu/address/testutil/InterviewBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":" * A utility class to help with building Candidate objects.","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"public class InterviewBuilder {","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    private Candidate candidate;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"    private LocalDateTime interviewDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"charmainehly"},"content":"     * Creates a {@code CandidateBuilder} with the default details.","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public InterviewBuilder() {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        candidate \u003d new CandidateBuilder().build();","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"        interviewDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"     * Initializes the CandidateBuilder with the data of {@code interviewToCopy}.","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"    public InterviewBuilder(Interview interviewToCopy) {","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        candidate \u003d interviewToCopy.getCandidate();","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"        interviewDateTime \u003d interviewToCopy.getInterviewDateTime();","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"     * Sets the {@code StudentID} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"lzan98"},"content":"    public InterviewBuilder withCandidate(Candidate c) {","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"lzan98"},"content":"        this.candidate \u003d c;","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"     * Sets the {@code Name} of the {@code Candidate} that we are building.","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"    public InterviewBuilder withInterviewDateTime(LocalDateTime interviewDateTime) {","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"        this.interviewDateTime \u003d interviewDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"lzan98"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"    public Interview build() {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        return new Interview(candidate, interviewDateTime);","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"charmainehly":1,"lzan98":51}},{"path":"src/test/java/seedu/address/testutil/InterviewScheduleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":" * A utility class to help with building InterviewSchedule objects.","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":" *     {@code InterviewSchedule ab \u003d new InterviewScheduleBuilder().withCandidate(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"public class InterviewScheduleBuilder {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"    private InterviewSchedule interviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"    public InterviewScheduleBuilder() {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"        interviewSchedule \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":"    public InterviewScheduleBuilder(InterviewSchedule interviewSchedule) {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"        this.interviewSchedule \u003d interviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"     * Adds a new {@code Candidate} to the {@code InterviewSchedule} that we are building.","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"lzan98"},"content":"    public InterviewScheduleBuilder withInterview(Interview interview) {","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"        interviewSchedule.addInterview(interview);","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"lzan98"},"content":"        return this;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"    public InterviewSchedule build() {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"lzan98"},"content":"        return interviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"charmainehly":2,"lzan98":32}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"     * Returns the middle index of the candidate in the {@code model}\u0027s candidate list.","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"charmainehly"},"content":"        return Index.fromOneBased(model.getFilteredCandidateList().size() / 2);","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"charmainehly"},"content":"     * Returns the last index of the candidate in the {@code model}\u0027s candidate list.","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"charmainehly"},"content":"        return Index.fromOneBased(model.getFilteredCandidateList().size());","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"charmainehly"},"content":"     * Returns the candidate in the {@code model}\u0027s candidate list at {@code index}.","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"charmainehly"},"content":"    public static Candidate getCandidate(Model model, Index index) {","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"charmainehly"},"content":"        return model.getFilteredCandidateList().get(index.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"charmainehly":7,"domlimm":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalCandidates.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPLICATION_PENDING;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_AMY;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"LeeEnEn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVAILABILITY_BOB;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COURSE_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"tiewweijian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INTERVIEW_NOT_SCHEDULED;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SENIORITY_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SENIORITY_BOB;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"domlimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"domlimm"},"content":"import seedu.address.model.candidate.Candidate;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"domlimm"},"content":" * A utility class containing a list of {@code Candidate} objects to be used in tests.","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"public class TypicalCandidates {","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"domlimm"},"content":"    public static final Candidate ALICE \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0123450\")","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"domlimm"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0123456@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Business Analytics\")","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"1,2,3\")","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"domlimm"},"content":"    public static final Candidate BENSON \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0234567\")","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"domlimm"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0234567@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Computer Engineering\")","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"domlimm"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"2,3,4\")","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"domlimm"},"content":"    public static final Candidate CARL \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0345678\")","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"domlimm"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0345678@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Computer Science\")","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"3,4,5\")","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"domlimm"},"content":"    public static final Candidate DANIEL \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0456789\")","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"domlimm"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0456789@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Information Security\")","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"5\")","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"domlimm"},"content":"    public static final Candidate ELLE \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0567890\")","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"domlimm"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"94822240\")","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0567890@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Information Systems\")","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"1,3,5\")","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"domlimm"},"content":"    public static final Candidate FIONA \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0678901\")","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"domlimm"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"94824270\")","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0678901@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Business Analytics\")","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":101,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"2,4\")","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"domlimm"},"content":"    public static final Candidate GEORGE \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0789012\")","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"domlimm"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"94824420\")","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0789012@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Computer Engineering\")","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":111,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":112,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"2,3,4,5\")","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":116,"author":{"gitId":"domlimm"},"content":"    public static final Candidate HOON \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0890123\")","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"domlimm"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"84824240\")","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0890123@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Computer Science\")","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"1,4\")","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"domlimm"},"content":"    public static final Candidate IDA \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"domlimm"},"content":"            .withStudentId(\"E0901234\")","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"domlimm"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"domlimm"},"content":"            .withPhone(\"84821310\")","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"domlimm"},"content":"            .withEmail(\"E0901234@u.nus.edu\")","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"domlimm"},"content":"            .withCourse(\"Information Security\")","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"domlimm"},"content":"            .withSeniority(\"COM2\")","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(\"3,4,5\")","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":139,"author":{"gitId":"domlimm"},"content":"    // Manually added - Candidate\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-17"},{"lineNumber":140,"author":{"gitId":"domlimm"},"content":"    public static final Candidate AMY \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"domlimm"},"content":"            .withStudentId(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"domlimm"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"domlimm"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"domlimm"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"domlimm"},"content":"            .withCourse(VALID_COURSE_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"domlimm"},"content":"            .withSeniority(VALID_SENIORITY_AMY)","lastModifiedDate":"2022-03-24"},{"lineNumber":147,"author":{"gitId":"domlimm"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(VALID_AVAILABILITY_AMY)","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"domlimm"},"content":"            .build();","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"    public static final Candidate BOB \u003d new CandidateBuilder()","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"domlimm"},"content":"            .withStudentId(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"domlimm"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"domlimm"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"domlimm"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"domlimm"},"content":"            .withCourse(VALID_COURSE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"domlimm"},"content":"            .withSeniority(VALID_SENIORITY_BOB)","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"domlimm"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"tiewweijian"},"content":"            .withApplicationStatus(VALID_APPLICATION_PENDING)","lastModifiedDate":"2022-03-24"},{"lineNumber":161,"author":{"gitId":"tiewweijian"},"content":"            .withInterviewStatus(VALID_INTERVIEW_NOT_SCHEDULED)","lastModifiedDate":"2022-03-24"},{"lineNumber":162,"author":{"gitId":"LeeEnEn"},"content":"            .withAvailability(VALID_AVAILABILITY_BOB)","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":167,"author":{"gitId":"charmainehly"},"content":"    private TypicalCandidates() {} // prevents instantiation","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":170,"author":{"gitId":"charmainehly"},"content":"     * Returns an {@code AddressBook} with all the typical candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"domlimm"},"content":"        for (Candidate candidate : getTypicalCandidates()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"charmainehly"},"content":"            ab.addCandidate(candidate);","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":180,"author":{"gitId":"domlimm"},"content":"    public static List\u003cCandidate\u003e getTypicalCandidates() {","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"charmainehly":4,"tiewweijian":24,"domlimm":102,"LeeEnEn":13,"-":40}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"charmainehly"},"content":"    public static final Index INDEX_FIRST_CANDIDATE \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"charmainehly"},"content":"    public static final Index INDEX_SECOND_CANDIDATE \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"charmainehly"},"content":"    public static final Index INDEX_THIRD_CANDIDATE \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"charmainehly"},"content":"    public static final Index INDEX_FOURTH_CANDIDATE \u003d Index.fromOneBased(4);","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"charmainehly"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"charmainehly":5,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalInterviews.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lzan98"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALICE_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BENSON_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"lzan98"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CARL_INTERVIEW_DATE_TIME;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"lzan98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"lzan98"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"lzan98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"lzan98"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"lzan98"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.InterviewSchedule;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"lzan98"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"lzan98"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"charmainehly"},"content":" * A utility class containing a list of {@code Candidate} objects to be used in tests.","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"lzan98"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"lzan98"},"content":"public class TypicalInterviews {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"lzan98"},"content":"    public static final LocalDateTime TYPICAL_INTERVIEW_DATE_TIME \u003d LocalDateTime.of(2022, Month.DECEMBER, 23, 10, 00);","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"charmainehly"},"content":"    public static final LocalDateTime THURSDAY_INTERVIEW_DATE_TIME \u003d LocalDateTime.of(2080, Month.APRIL, 25, 10, 00);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"charmainehly"},"content":"    public static final LocalDateTime TUESDAY_INTERVIEW_DATE_TIME \u003d LocalDateTime.of(2080, Month.APRIL, 23, 10, 00);","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"charmainehly"},"content":"    public static final LocalDateTime AFTER_OFFICE_HOURS \u003d LocalDateTime.of(2080, Month.APRIL, 23, 17, 31);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"charmainehly"},"content":"    public static final LocalDateTime BEFORE_OFFICE_HOURS \u003d LocalDateTime.of(2080, Month.APRIL, 23, 7, 59);","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"charmainehly"},"content":"    public static final LocalDateTime ON_WEEKEND \u003d LocalDateTime.of(2080, Month.APRIL, 20, 8, 30);","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"charmainehly"},"content":"    public static final Interview INTERVIEW_ALICE \u003d new InterviewBuilder().withCandidate(TypicalCandidates.ALICE)","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"lzan98"},"content":"            .withInterviewDateTime(VALID_ALICE_INTERVIEW_DATE_TIME).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"charmainehly"},"content":"    public static final Interview INTERVIEW_BENSON \u003d new InterviewBuilder().withCandidate(TypicalCandidates.BENSON)","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"lzan98"},"content":"            .withInterviewDateTime(VALID_BENSON_INTERVIEW_DATE_TIME).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"charmainehly"},"content":"    public static final Interview INTERVIEW_CARL \u003d new InterviewBuilder().withCandidate(TypicalCandidates.CARL)","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"lzan98"},"content":"            .withInterviewDateTime(VALID_CARL_INTERVIEW_DATE_TIME).build();","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"charmainehly"},"content":"    // Manually added - Candidate\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"charmainehly"},"content":"    public static final Interview INTERVIEW_AMY_TYPICAL \u003d new InterviewBuilder().withCandidate(TypicalCandidates.AMY)","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"lzan98"},"content":"            .withInterviewDateTime(TYPICAL_INTERVIEW_DATE_TIME).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"charmainehly"},"content":"    public static final Interview INTERVIEW_BOB_TYPICAL \u003d new InterviewBuilder().withCandidate(TypicalCandidates.BOB)","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"lzan98"},"content":"            .withInterviewDateTime(TYPICAL_INTERVIEW_DATE_TIME).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"lzan98"},"content":"    private TypicalInterviews() {} // prevents instantiation","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"lzan98"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"charmainehly"},"content":"     * Returns an {@code AddressBook} with all the typical candidates.","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"lzan98"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"lzan98"},"content":"    public static InterviewSchedule getTypicalInterviewSchedule() {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"lzan98"},"content":"        InterviewSchedule schedule \u003d new InterviewSchedule();","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"lzan98"},"content":"        for (Interview interview : getTypicalInterviews()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"lzan98"},"content":"            schedule.addInterview(interview);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"lzan98"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"lzan98"},"content":"        return schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"lzan98"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"lzan98"},"content":"    public static List\u003cInterview\u003e getTypicalInterviews() {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"lzan98"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(INTERVIEW_ALICE, INTERVIEW_BENSON, INTERVIEW_AMY_TYPICAL));","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"lzan98"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"lzan98"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"charmainehly":13,"lzan98":45}}]
