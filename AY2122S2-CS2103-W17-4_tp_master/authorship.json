[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103-W17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103-W17-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"* This application is designed for **Recruiters for Tech companies** who have many candidates to track.","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"* Usage:","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"  * Schedule interviews with potential applicants","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"  * Track job candidates through the hiring process","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"  ","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"* The application is optimised for Command Line Interface (_CLI_) users. However, a graphic user interface (_GUI_) is","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"  also offered. ","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"  ","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"* This is done to allow power users to accomplish tasks much quicker through the use of commands","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"  ","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"* It is named `HireLah` because it should make the recruiter utter these words when they are using it `\"aiyo just ","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"  HireLah!\"` ","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"* For the detailed documentation of this project, see the **[HireLah Product Website](https://ay2122s2-cs2103-w17-4.github.io/tp/)**.","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"SethCKL":24,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"## Project Team","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"### Bryan Ong","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"\u003cimg src\u003d\"images/likeabowx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"[[github](https://github.com/likeabowx)]","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"[[portfolio](team/likeabowx.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"* Responsibilities: Integration of code, and in charge of `Filter` commands","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"### Chong Kok Leong","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"\u003cimg src\u003d\"images/sethckl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"[[github](http://github.com/SethCKL)]","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"[[portfolio](team/SethCKL.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"* Role: Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"khoahre123"},"content":"### Le Nguyen Quang Dang Khoa","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"khoahre123"},"content":"\u003cimg src\u003d\"images/khoahre123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"khoahre123"},"content":"[[github](https://github.com/khoahre123)]","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"khoahre123"},"content":"[[portfolio](team/khoahre123.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"khoahre123"},"content":"* Responsibilities: Deliverables and deadlines and in charge of ","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"khoahre123"},"content":"`help` commands","lastModifiedDate":"2022-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"### Lee Yi Hern","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"\u003cimg src\u003d\"images/yihern-lee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"[[github](https://github.com/YiHern-Lee)]","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"[[portfolio](team/yihern-lee.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"* Responsibilities: Code quality and in charge of `Position` component  ","lastModifiedDate":"2022-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"goalfix"},"content":"### Tan Wei Howe","lastModifiedDate":"2022-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"goalfix"},"content":"\u003cimg src\u003d\"images/goalfix.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"goalfix"},"content":"[Github](http://github.com/goalfix)","lastModifiedDate":"2022-03-01"},{"lineNumber":56,"author":{"gitId":"goalfix"},"content":"[portfolio](team/goalfix.md)","lastModifiedDate":"2022-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"goalfix"},"content":"* Responsibilities: Git expert, Scheduling and tracking, In charge of `Interview` component.","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"SethCKL":7,"goalfix":5,"likeabowx":6,"YiHern-Lee":5,"-":30,"khoahre123":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a applicant).","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"SethCKL"},"content":"Step 2. The user executes `delete 5` command to delete the 5th applicant in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"SethCKL"},"content":"Step 3. The user executes `add n/David …​` to add a new applicant. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"SethCKL"},"content":"Step 4. The user now decides that adding the applicant was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"SethCKL"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the applicant being deleted).","lastModifiedDate":"2022-03-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"goalfix"},"content":"* has a need to manage a significant number of applicants to technology companies","lastModifiedDate":"2022-03-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"goalfix"},"content":"**Value proposition**: ","lastModifiedDate":"2022-03-03"},{"lineNumber":267,"author":{"gitId":"goalfix"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-03-03"},{"lineNumber":268,"author":{"gitId":"goalfix"},"content":"* One command and the email will be sent to all recipient","lastModifiedDate":"2022-03-03"},{"lineNumber":269,"author":{"gitId":"goalfix"},"content":"* Stores all correspondence with the candidate for easy access and viewing","lastModifiedDate":"2022-03-03"},{"lineNumber":270,"author":{"gitId":"goalfix"},"content":"* End to end seamless administration for talent management","lastModifiedDate":"2022-03-03"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​     | I want to …​                                                | So that I can…​                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"goalfix"},"content":"| -------- |-------------|-------------------------------------------------------------|-----------------------------------------------------------------|","lastModifiedDate":"2022-03-03"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | new user    | see usage instructions                                      | refer to instructions when I forget how to use the App          |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"goalfix"},"content":"| `* * *`  | recruiter   | add a new candidate                                         |                                                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":281,"author":{"gitId":"goalfix"},"content":"| `* * *`  | recruiter   | delete a candidate                                          | remove entries that I no longer need                            |","lastModifiedDate":"2022-03-03"},{"lineNumber":282,"author":{"gitId":"goalfix"},"content":"| `* * *`  | recruiter   | access information of candidates                            | I can contact them                                              |","lastModifiedDate":"2022-03-03"},{"lineNumber":283,"author":{"gitId":"goalfix"},"content":"| `* *`    | recruiter   | access status (OA/first interview etc) of candidates        | I can easily identify where they are in the recruiting pipeline |","lastModifiedDate":"2022-03-03"},{"lineNumber":284,"author":{"gitId":"goalfix"},"content":"| `*`      | expert user | access previous commands which I have sent to the interface | I can work faster                                               |","lastModifiedDate":"2022-03-03"},{"lineNumber":285,"author":{"gitId":"goalfix"},"content":" ","lastModifiedDate":"2022-03-03"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"goalfix"},"content":"(For all use cases below, the **System** is the `Hirelah Application` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"SethCKL"},"content":"**Use case 01: Delete a applicant**","lastModifiedDate":"2022-03-10"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"SethCKL"},"content":"1.  User requests to list applicants","lastModifiedDate":"2022-03-10"},{"lineNumber":298,"author":{"gitId":"SethCKL"},"content":"2.  HireLah shows a list of applicants","lastModifiedDate":"2022-03-10"},{"lineNumber":299,"author":{"gitId":"SethCKL"},"content":"3.  User requests to delete a specific applicant in the list","lastModifiedDate":"2022-03-10"},{"lineNumber":300,"author":{"gitId":"SethCKL"},"content":"4.  HireLah deletes the applicant","lastModifiedDate":"2022-03-10"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"goalfix"},"content":"    * 3a1. HireLah shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"goalfix"},"content":"**Use case 02: Add an interview**","lastModifiedDate":"2022-03-03"},{"lineNumber":317,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":318,"author":{"gitId":"goalfix"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":319,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":320,"author":{"gitId":"SethCKL"},"content":"1.  User requests to list applicants","lastModifiedDate":"2022-03-10"},{"lineNumber":321,"author":{"gitId":"SethCKL"},"content":"2.  HireLah shows a list of applicants","lastModifiedDate":"2022-03-10"},{"lineNumber":322,"author":{"gitId":"SethCKL"},"content":"3.  User requests to add a specific interview to a applicant in the list","lastModifiedDate":"2022-03-10"},{"lineNumber":323,"author":{"gitId":"SethCKL"},"content":"4.  HireLah adds the interview to the applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":324,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":325,"author":{"gitId":"goalfix"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":326,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":327,"author":{"gitId":"goalfix"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":328,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":329,"author":{"gitId":"goalfix"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-03"},{"lineNumber":330,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":331,"author":{"gitId":"goalfix"},"content":"  Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":332,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":333,"author":{"gitId":"goalfix"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-03-03"},{"lineNumber":334,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":335,"author":{"gitId":"goalfix"},"content":"    * 3a1. HireLah shows an error message.","lastModifiedDate":"2022-03-03"},{"lineNumber":336,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":337,"author":{"gitId":"goalfix"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-03"},{"lineNumber":338,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"SethCKL"},"content":"2. Should be able to hold up to 1000 applicants without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-10"},{"lineNumber":344,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"goalfix"},"content":"4. The system should be usable by a novice which has not used other CLI application for applicant tracking.","lastModifiedDate":"2022-03-03"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"goalfix"},"content":"* **Role**: The type of job that the candidate is interviewing for (e.g Backend-engineer, L3 SWE)","lastModifiedDate":"2022-03-03"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"SethCKL"},"content":"### Deleting a applicant","lastModifiedDate":"2022-03-10"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"SethCKL"},"content":"1. Deleting a applicant while all applicants are being shown","lastModifiedDate":"2022-03-10"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"SethCKL"},"content":"   1. Prerequisites: List all applicants using the `list` command. Multiple applicants in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"SethCKL"},"content":"      Expected: No applicant is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-10"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SethCKL":19,"goalfix":35,"-":351}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"HireLah is a desktop app that helps **recruiters to manage talent and job candidates** by tracking every step of the hiring process, ","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"from offering positions to scheduling interviews with candidates. It is optimised for Command Line Interface (CLI) users while still offering a GUI, so that power users can accomplish tasks much quicker by using commands","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"1. Download the latest `HireLah.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"khoahre123"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"khoahre123"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"goalfix"},"content":"## Add","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"goalfix"},"content":"General command to add different types into HireLah.","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"goalfix"},"content":"Format: `add -TYPE`","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"goalfix"},"content":"* TYPE must take the form of `a`, `i`, `p`","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"goalfix"},"content":"* -a will add an applicant","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"goalfix"},"content":"* -i will add an interview","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"goalfix"},"content":"* -p will add a position","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"goalfix"},"content":"### Adding an Applicant: `add -a`","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"SethCKL"},"content":"Adds a new applicant to HireLah","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"SethCKL"},"content":"Format: `add -a n/APPLICANT_NAME ag/AGE g/GENDER p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"SethCKL"},"content":"An applicant can have any number of tags (including 0)","lastModifiedDate":"2022-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"SethCKL"},"content":"* Age provided must be at least two digits eg: “23”","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"SethCKL"},"content":"* Gender must be M/F","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"SethCKL"},"content":"* `add -a n/Benedict ag/20 g/M p/98123456 e/ben@gmail.com a/12 Kent Ridge Drive, 119243`","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"SethCKL"},"content":"* `add -a n/Max ag/15 g/M p/97123456 e/max@yahoo.com a/12 Kent Ridge Drive, 119243 t/Data Analyst`","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"goalfix"},"content":"### Adding Interview : `add -i`","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"goalfix"},"content":"Adds a new interview to HireLah.","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"goalfix"},"content":"Format: `add -i APPLICANT_INDEX d/DATE p/POSITION_INDEX`","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"goalfix"},"content":"* Date provided must be in format YYYY-MM-DD HH:MM.","lastModifiedDate":"2022-03-10"},{"lineNumber":102,"author":{"gitId":"goalfix"},"content":"* The index refers to the index number shown in the last displayed Applicant","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"goalfix"},"content":"  list and Position list.","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"goalfix"},"content":"* Index provided must be positive.","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"goalfix"},"content":"Examples:","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"goalfix"},"content":"* `add -i 1 d/2022-01-01 14:00 p/2`","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"YiHern-Lee"},"content":"### Adding positions : `add -p`","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"YiHern-Lee"},"content":"Adds a new open position to HireLah.","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"goalfix"},"content":"Format: `add -p POSITION_NAME n/NUM_OPENINGS [d/DESCRIPTION] [r/REQUIREMENTS]`","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"YiHern-Lee"},"content":"* Positions must have a **unique name**.","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"YiHern-Lee"},"content":"* Name provided is case-insensitive.","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"YiHern-Lee"},"content":"* Number of openings in the position must be **0 or more** 0, 1, 2, …​","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"YiHern-Lee"},"content":"Examples:","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"YiHern-Lee"},"content":"* `add -p Senior Software Engineer n/3 d/More than 5 years experience r/JavaScript r/HTML r/CSS`","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"YiHern-Lee"},"content":"## Edit","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"YiHern-Lee"},"content":"General command to edit different types into HireLah.","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"YiHern-Lee"},"content":"Format: `edit -TYPE`","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"YiHern-Lee"},"content":"* TYPE must take the form of `a`, `i`, `p`","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"YiHern-Lee"},"content":"* -a will edit an applicant","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"YiHern-Lee"},"content":"* -i will edit an interview","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"YiHern-Lee"},"content":"* -p will edit a position","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"YiHern-Lee"},"content":"### Editing an Applicant : `edit -a`","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"SethCKL"},"content":"Edits an existing Applicant in HireLah.","lastModifiedDate":"2022-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"SethCKL"},"content":"Format: `edit -a INDEX [n/APPLICANT_NAME] [ag/AGE] [g/GENDER] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"SethCKL"},"content":"* Edits the Applicant at the specified `INDEX`. The index refers to the index number shown in the displayed Applicant","lastModifiedDate":"2022-03-02"},{"lineNumber":136,"author":{"gitId":"SethCKL"},"content":"  list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"SethCKL"},"content":"* When editing tags, the existing tags of the applicant will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"SethCKL"},"content":"* You can remove all the Applicant’s tags by typing `t/` without","lastModifiedDate":"2022-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"SethCKL"},"content":"*  `edit -a 1 n/Belle ag/43 g/F p/81234567` Edits the name, age, gender and phone number of the 1st applicant","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"SethCKL"},"content":"   to be `Belle`, `1960-03-04`, `F` and `81234567` respectively.","lastModifiedDate":"2022-03-02"},{"lineNumber":146,"author":{"gitId":"SethCKL"},"content":"*  `edit -a 2 e/belle@yahoo.com a/13 Computing Drive 612345 t/` Edits the email and address of the 2nd applicant to be","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"SethCKL"},"content":"   `belle@yahoo.com` and `13 Computing Drive 612345` respectively, and clears all existing tags.","lastModifiedDate":"2022-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"YiHern-Lee"},"content":"### Editing an Interview : `edit -i`","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"YiHern-Lee"},"content":"Edit an existing interview in HireLah.","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"goalfix"},"content":"Format: `edit -i INTERVIEW_INDEX [d/DATE] [p/POSITION_INDEX]`","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"goalfix"},"content":"* Edits the interview at the specified INTERVIEW_INDEX. The interview index refers to the index number shown in the ","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"goalfix"},"content":"  last displayed interview list.","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"YiHern-Lee"},"content":"* At least one optional field must be provided.","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"goalfix"},"content":"* The position index refers to the index number shown in the last displayed interview list.","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"YiHern-Lee"},"content":"* Existing attribute of the interview will be updated to the input value.","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"YiHern-Lee"},"content":"* When editing requirements, the existing requirements of the interview will be removed. i.e.","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"YiHern-Lee"},"content":"  adding requirements is not cumulative.","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"goalfix"},"content":"* `edit -i 1 d/2022-01-01 15:00`","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"goalfix"},"content":"* `edit -i 3 d/2022-01-01 15:00 p/1`","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":167,"author":{"gitId":"YiHern-Lee"},"content":"### Edit positions : `edit -p`","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":169,"author":{"gitId":"YiHern-Lee"},"content":"Edit an existing position in HireLah.","lastModifiedDate":"2022-02-28"},{"lineNumber":170,"author":{"gitId":"YiHern-Lee"},"content":"Format: `edit -p POSITION_NAME [n/NUM_OPENINGS] [d/DESCRIPTION] [r/REQUIREMENTS]`","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":172,"author":{"gitId":"YiHern-Lee"},"content":"* Edits the available position with POSITION_NAME.","lastModifiedDate":"2022-02-28"},{"lineNumber":173,"author":{"gitId":"YiHern-Lee"},"content":"* Position name provided is case-insensitive.","lastModifiedDate":"2022-02-28"},{"lineNumber":174,"author":{"gitId":"YiHern-Lee"},"content":"* At least one optional field must be provided.","lastModifiedDate":"2022-02-28"},{"lineNumber":175,"author":{"gitId":"YiHern-Lee"},"content":"* Existing attributes of the position will be updated to the input value.","lastModifiedDate":"2022-02-28"},{"lineNumber":176,"author":{"gitId":"YiHern-Lee"},"content":"* When editing requirements, the existing requirements of the position will be removed. i.e. adding requirements is not cumulative.","lastModifiedDate":"2022-02-28"},{"lineNumber":177,"author":{"gitId":"YiHern-Lee"},"content":"* Requirements can be removed by providing an empty requirement field. i.e. r/","lastModifiedDate":"2022-02-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-28"},{"lineNumber":180,"author":{"gitId":"YiHern-Lee"},"content":"* `edit -p Senior Frontend Software Engineer n/5`","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"YiHern-Lee"},"content":"* `edit -p Senior Frontend Software Engineer r/JavaScript r/React`","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"khoahre123"},"content":"## Delete","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"khoahre123"},"content":"General command to delete different data type in HireLah.","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"khoahre123"},"content":"Format: `delete -TYPE`","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"khoahre123"},"content":"* TYPE must take the form of `a`, `i`, `p`","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"khoahre123"},"content":"* -a will delete an applicant","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"khoahre123"},"content":"* -i will delete an interview","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"khoahre123"},"content":"* -p will delete a position","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"khoahre123"},"content":"### Deleting an Applicant : `del -a`","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"YiHern-Lee"},"content":"Deletes the specified Applicant from HireLah.","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"SethCKL"},"content":"Format: `delete -a CANDIDATE_INDEX`","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"khoahre123"},"content":"* Deletes the Applicant at the specified `CANDIDATE_INDEX`.","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"YiHern-Lee"},"content":"* The index refers to the index number shown in the displayed Applicant list.","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"khoahre123"},"content":"* `list` followed by `delete -a 2` deletes the 2nd person in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"khoahre123"},"content":"* `find Betsy` followed by `delete -a 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"khoahre123"},"content":"### Deleting an Interview: `del -i`","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"khoahre123"},"content":"Deletes an existing interview in HireLah.","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"goalfix"},"content":"Format: `delete -i INTERVIEW_INDEX`","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"goalfix"},"content":"* Deletes the Interview at the specified `INTERVIEW_INDEX`.","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"goalfix"},"content":"* The index refers to the index number shown in the displayed Applicant list.","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"goalfix"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"khoahre123"},"content":"Examples:","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"goalfix"},"content":"* `delete -i 3`","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":219,"author":{"gitId":"YiHern-Lee"},"content":"### Delete positions : `del -p`","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":221,"author":{"gitId":"YiHern-Lee"},"content":"Deletes an existing position in HireLah.","lastModifiedDate":"2022-02-28"},{"lineNumber":222,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"SethCKL"},"content":"Format: `delete -p ROLE`","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"YiHern-Lee"},"content":"* Existing position with the specified name is deleted.","lastModifiedDate":"2022-02-28"},{"lineNumber":225,"author":{"gitId":"YiHern-Lee"},"content":"* The position name has to match with the position that is to be deleted.","lastModifiedDate":"2022-02-28"},{"lineNumber":226,"author":{"gitId":"YiHern-Lee"},"content":"* Position name provided is case-insensitive.","lastModifiedDate":"2022-02-28"},{"lineNumber":227,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":228,"author":{"gitId":"YiHern-Lee"},"content":"Examples:","lastModifiedDate":"2022-02-28"},{"lineNumber":229,"author":{"gitId":"SethCKL"},"content":"* `delete -p Senior Frontend Software Engineer`","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":231,"author":{"gitId":"khoahre123"},"content":"## List","lastModifiedDate":"2022-03-12"},{"lineNumber":232,"author":{"gitId":"khoahre123"},"content":"General command to list different data type in HireLah.","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":234,"author":{"gitId":"khoahre123"},"content":"Format: `list -TYPE`","lastModifiedDate":"2022-03-12"},{"lineNumber":235,"author":{"gitId":"khoahre123"},"content":"* TYPE must take the form of `a`, `i`, `p`","lastModifiedDate":"2022-03-12"},{"lineNumber":236,"author":{"gitId":"khoahre123"},"content":"* -a will list all applicants","lastModifiedDate":"2022-03-12"},{"lineNumber":237,"author":{"gitId":"khoahre123"},"content":"* -i will list all interview for an applicant","lastModifiedDate":"2022-03-12"},{"lineNumber":238,"author":{"gitId":"khoahre123"},"content":"* -p will list all position","lastModifiedDate":"2022-03-12"},{"lineNumber":239,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":240,"author":{"gitId":"khoahre123"},"content":"### List Applicants: `list -a`","lastModifiedDate":"2022-03-12"},{"lineNumber":241,"author":{"gitId":"goalfix"},"content":"Lists all existing applicants. Automatically toggles view to the applicant tab on the GUI.","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":243,"author":{"gitId":"khoahre123"},"content":"Format: `list -a`","lastModifiedDate":"2022-03-12"},{"lineNumber":244,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":245,"author":{"gitId":"khoahre123"},"content":"### Listing interviews: `list -i`","lastModifiedDate":"2022-03-12"},{"lineNumber":246,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":247,"author":{"gitId":"goalfix"},"content":"Lists all existing interviews in HireLah. Automatically toggles view to the interview tab on the GUI.","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":249,"author":{"gitId":"khoahre123"},"content":"Format: `list -i CANDIDATE_INDEX`","lastModifiedDate":"2022-03-12"},{"lineNumber":250,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":251,"author":{"gitId":"goalfix"},"content":"Examples:","lastModifiedDate":"2022-03-01"},{"lineNumber":252,"author":{"gitId":"khoahre123"},"content":"* `list -i 1`","lastModifiedDate":"2022-03-12"},{"lineNumber":253,"author":{"gitId":"khoahre123"},"content":"### List Positions : `list -p`","lastModifiedDate":"2022-03-12"},{"lineNumber":254,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":255,"author":{"gitId":"goalfix"},"content":"Lists all existing positions in HireLah. Automatically toggles view to the position tab on the GUI.","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":257,"author":{"gitId":"khoahre123"},"content":"Format: `list -p`","lastModifiedDate":"2022-03-12"},{"lineNumber":258,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":259,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":260,"author":{"gitId":"likeabowx"},"content":"### Filter data: `filter`","lastModifiedDate":"2022-03-02"},{"lineNumber":261,"author":{"gitId":"likeabowx"},"content":"View different applicants, interviews and positions in HireLah through various filters. It alters the current display of HireLah and changes the index of the relevant data.","lastModifiedDate":"2022-03-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"likeabowx"},"content":"Format: `filter DATA_TYPE b/FILTER_TYPE [ARGUMENT]`","lastModifiedDate":"2022-03-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"likeabowx"},"content":"* Different data has different filters available, thus requiring different arguments, as listed:","lastModifiedDate":"2022-03-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":267,"author":{"gitId":"khoahre123"},"content":"| DATA_TYPE | FILTER_TYPE | ARGUMENT(S)           | Description                                                                                  |","lastModifiedDate":"2022-03-10"},{"lineNumber":268,"author":{"gitId":"khoahre123"},"content":"|-----------|-------------|-----------------------|----------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-10"},{"lineNumber":269,"author":{"gitId":"khoahre123"},"content":"| `appl`    | `name`      | `n/KEYWORD`           | View applicants whose name contains the keyword                                              |","lastModifiedDate":"2022-03-10"},{"lineNumber":270,"author":{"gitId":"khoahre123"},"content":"| `appl`    | `tag`       | `t/TAG1, [t/TAG2, …]` | View applicants who have all the tags specified                                              |","lastModifiedDate":"2022-03-10"},{"lineNumber":271,"author":{"gitId":"khoahre123"},"content":"| `intvw`   | `appl`      | `n/NAME`              | View interviews for applicants whose name is specified                                       |","lastModifiedDate":"2022-03-10"},{"lineNumber":272,"author":{"gitId":"khoahre123"},"content":"| `intvw`   | `date`      | `d/DATE`              | View interviews happening on the specified date (Date provided must be in format YYYY-MM-DD) |","lastModifiedDate":"2022-03-10"},{"lineNumber":273,"author":{"gitId":"khoahre123"},"content":"| `pos`     | `name`      | `n/KEYWORD`           | View positions which has the specified keyword in the position name                          |","lastModifiedDate":"2022-03-10"},{"lineNumber":274,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":275,"author":{"gitId":"likeabowx"},"content":"Examples:","lastModifiedDate":"2022-03-02"},{"lineNumber":276,"author":{"gitId":"likeabowx"},"content":"* `filter appl name n/john`","lastModifiedDate":"2022-03-02"},{"lineNumber":277,"author":{"gitId":"likeabowx"},"content":"* `filter appl tag t/school t/friend`","lastModifiedDate":"2022-03-02"},{"lineNumber":278,"author":{"gitId":"likeabowx"},"content":"* `filter intvw date d/2022-03-20`","lastModifiedDate":"2022-03-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"khoahre123"},"content":"### Sort data: `sort`","lastModifiedDate":"2022-03-03"},{"lineNumber":281,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":282,"author":{"gitId":"khoahre123"},"content":"Arranges applicants, interview and positions in HireLah according to their properties. ","lastModifiedDate":"2022-03-03"},{"lineNumber":283,"author":{"gitId":"khoahre123"},"content":"It alters the current display of HireLah and changes the index of the relevant data.","lastModifiedDate":"2022-03-03"},{"lineNumber":284,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":285,"author":{"gitId":"khoahre123"},"content":"Format: `sort DATA_TYPE SORT_ORDER`","lastModifiedDate":"2022-03-03"},{"lineNumber":286,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":287,"author":{"gitId":"khoahre123"},"content":"User can specify the order of the sorted data by typing `ASC` (for ascending) ","lastModifiedDate":"2022-03-03"},{"lineNumber":288,"author":{"gitId":"khoahre123"},"content":"or `DSC` (for descending) in the `REVERSE` part.","lastModifiedDate":"2022-03-03"},{"lineNumber":289,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":290,"author":{"gitId":"khoahre123"},"content":"| DATA_TYPE | Sorting properties | Description                                            |","lastModifiedDate":"2022-03-03"},{"lineNumber":291,"author":{"gitId":"khoahre123"},"content":"|-----------|--------------------|--------------------------------------------------------|","lastModifiedDate":"2022-03-03"},{"lineNumber":292,"author":{"gitId":"khoahre123"},"content":"| `APPL`    | Name               | Sort and view applicants based on their name           |","lastModifiedDate":"2022-03-03"},{"lineNumber":293,"author":{"gitId":"khoahre123"},"content":"| `INTVW`   | Date               | Sort and view interviews based on their occurring date |","lastModifiedDate":"2022-03-03"},{"lineNumber":294,"author":{"gitId":"khoahre123"},"content":"| `POS`     | Name               | Sort and view positions based on the position name     |","lastModifiedDate":"2022-03-03"},{"lineNumber":295,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":296,"author":{"gitId":"khoahre123"},"content":"Examples:","lastModifiedDate":"2022-03-03"},{"lineNumber":297,"author":{"gitId":"khoahre123"},"content":"* `sort APPL ASC`","lastModifiedDate":"2022-03-03"},{"lineNumber":298,"author":{"gitId":"khoahre123"},"content":"* `sort POS DSC`","lastModifiedDate":"2022-03-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":300,"author":{"gitId":"khoahre123"},"content":"### Viewing help: `help`","lastModifiedDate":"2022-03-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":302,"author":{"gitId":"khoahre123"},"content":"Lists all the command keywords with their general descriptions","lastModifiedDate":"2022-03-03"},{"lineNumber":303,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":304,"author":{"gitId":"khoahre123"},"content":"Format: `help`","lastModifiedDate":"2022-03-03"},{"lineNumber":305,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":306,"author":{"gitId":"khoahre123"},"content":"_**For a more detail description about a specific `command`, you can type in the following:**_","lastModifiedDate":"2022-03-03"},{"lineNumber":307,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":308,"author":{"gitId":"khoahre123"},"content":"Format: `help COMMAND`","lastModifiedDate":"2022-03-03"},{"lineNumber":309,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":310,"author":{"gitId":"khoahre123"},"content":"* Full description and format of the command will be displayed","lastModifiedDate":"2022-03-03"},{"lineNumber":311,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":312,"author":{"gitId":"khoahre123"},"content":"* Command name is not case-sensitive","lastModifiedDate":"2022-03-03"},{"lineNumber":313,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":314,"author":{"gitId":"khoahre123"},"content":"Examples:","lastModifiedDate":"2022-03-03"},{"lineNumber":315,"author":{"gitId":"goalfix"},"content":"* `help add` ","lastModifiedDate":"2022-03-15"},{"lineNumber":316,"author":{"gitId":"goalfix"},"content":"* `help del`","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"likeabowx"},"content":"Upon exiting HireLah, the data in the application will automatically be saved, including the positions, applicants, and interviews. There is no need to save manually.","lastModifiedDate":"2022-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"likeabowx"},"content":"**Q**: How do I schedule an interview for a new applicant?\u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":338,"author":{"gitId":"likeabowx"},"content":"**A**: You will need to first create a new applicant in HireLah, and ensure that the applied position exists in the system, else you will need to create the position as well. To schedule an interview, simply create a new interview with the applicant and the position.","lastModifiedDate":"2022-03-02"},{"lineNumber":339,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":340,"author":{"gitId":"likeabowx"},"content":"**Q**: Can I add an applicant without any interviews scheduled?\u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":341,"author":{"gitId":"likeabowx"},"content":"**A**: Yes, you can simply add a new applicant in HireLah without adding any interviews.","lastModifiedDate":"2022-03-02"},{"lineNumber":342,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":343,"author":{"gitId":"likeabowx"},"content":"**Q**: I have a position that is only open for one applicant, do I still have to add the position?\u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":344,"author":{"gitId":"likeabowx"},"content":"**A**: Yes, you will need to add the position as well even if it is only used once.","lastModifiedDate":"2022-03-02"},{"lineNumber":345,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":346,"author":{"gitId":"likeabowx"},"content":"**Q**: A position has been filled, what do I do with the position created in the app?\u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":347,"author":{"gitId":"likeabowx"},"content":"**A**: You can either mark the position as not open, or delete the position from HireLah according to your requirement and preference.","lastModifiedDate":"2022-03-02"},{"lineNumber":348,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":349,"author":{"gitId":"likeabowx"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":350,"author":{"gitId":"likeabowx"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous HireLah home folder.","lastModifiedDate":"2022-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SethCKL":26,"goalfix":42,"likeabowx":24,"YiHern-Lee":49,"-":129,"khoahre123":81}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"likeabowx"},"content":"    content: \"HireLah\";","lastModifiedDate":"2022-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"likeabowx":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"title: HireLah","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![Java CI](https://github.com/AY2122S2-CS2103-W17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103-W17-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103-W17-4/tp/branch/master/graph/badge.svg?token\u003d9JSGEC8BP1)](https://codecov.io/gh/AY2122S2-CS2103-W17-4/tp)","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"HireLah is a desktop app that helps **recruiters to manage talent and job candidates** by tracking every step of the hiring process,","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"from offering positions to scheduling interviews with candidates. It is optimised for Command Line Interface (CLI) users while still offering a GUI, so that power users can accomplish tasks much quicker by using commands","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"likeabowx":4,"-":14}},{"path":"docs/team/goalfix.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"title: Wei Howe\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"###Overview","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"###Summary of Contributions:","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":"* **New Feature**: To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"* **New Feature**: To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"  To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"  ","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"    * Added documentation for the features `interview`","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"    To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"  To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"  To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"goalfix":37}},{"path":"docs/team/khoahre123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"khoahre123"},"content":"title: Khoa\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"khoahre123"},"content":"### Project: HireLah","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"khoahre123"},"content":"HireLah is a CLI-based app that offers help for recruiters who need to managed hundreds of applicants per day.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"khoahre123"},"content":"By having short and simple syntax, HireLah helps to accelerate the normal scheduling and filtering process.","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"khoahre123"},"content":"The app is most suitable for CLI-preferred users, but GUI is also provided to choose.  It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"khoahre123"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"khoahre123"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dkhoahre123\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"khoahre123"},"content":"* **Project management**: To be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"khoahre123"},"content":"* **Enhancements to existing features**: To be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"khoahre123"},"content":"    * Added documentation for the features `help`","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"khoahre123"},"content":"  * Developer Guide: To be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"khoahre123"},"content":"* **Community**: To be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"khoahre123"},"content":"* **Tools**: To be added soon","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"-":14,"khoahre123":15}},{"path":"docs/team/likeabowx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"title: Bryan Ong\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"### Project: HireLah","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"HireLah is a desktop app that helps recruiters to manage talent and job candidates by tracking every step of the hiring process, from offering positions to scheduling interviews with candidates. It is optimised for Command Line Interface (CLI) users while still offering a GUI, so that power users can accomplish tasks much quicker by using commands . It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"  * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"  * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"  * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"  * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"  * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"likeabowx":30}},{"path":"docs/team/sethckl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"SethCKL"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"SethCKL"},"content":"title: SethCKL\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"SethCKL"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"### Project: HireLah","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"HireLah is a desktop address book application used for managing interview applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"* **New Feature**: To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"* **New Feature**: To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"  * To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"  * To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"  * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"    * Added documentation for the features appladd, appledit, appldel, appllist","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"  * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    * To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"SethCKL"},"content":"  * To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"  * To be added","lastModifiedDate":"2022-03-02"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"    ","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"SethCKL":33}},{"path":"docs/team/yihern-lee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"title: Yi Hern\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"### Project: HireLah","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"HireLah is a desktop address book application used for managing interview applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"* **New Feature**: To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"* **New Feature**: To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    * To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    * To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"        * Added documentation for the features `posadd`, `posedit`, `poslist` and `posdel` [\\#72]()","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"        * To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"    * To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"* **Tools**:","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"    * To be added","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"    ","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"YiHern-Lee":33}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":" * Changes the remark of an existing applicant in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"SethCKL"},"content":"            + \": Edits the remark of the applicant identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"SethCKL"},"content":"            + \"by the index number used in the last applicant listing. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"SethCKL"},"content":"     * @param index of the applicant in the filtered applicant list to edit the remark","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"SethCKL"},"content":"     * @param remark of the applicant to be updated to","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"SethCKL"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of applicant data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the applicant’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"SethCKL"},"content":"Create a new `Remark` in `seedu.address.model.applicant`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"SethCKL"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"likeabowx"},"content":"Simply add the following to [`seedu.address.ui.ApplicantCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"SethCKL"},"content":"public PersonCard(Person applicant, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"SethCKL"},"content":"    remark.setText(applicant.getRemark().value);","lastModifiedDate":"2022-03-10"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"SethCKL"},"content":"        Person applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":347,"author":{"gitId":"SethCKL"},"content":"        Person editedApplicant \u003d new Person(","lastModifiedDate":"2022-03-10"},{"lineNumber":348,"author":{"gitId":"SethCKL"},"content":"                applicantToEdit.getName(), applicantToEdit.getPhone(), applicantToEdit.getEmail(),","lastModifiedDate":"2022-03-10"},{"lineNumber":349,"author":{"gitId":"SethCKL"},"content":"                applicantToEdit.getAddress(), remark, applicantToEdit.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"SethCKL"},"content":"        model.setPerson(applicantToEdit, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"SethCKL"},"content":"        return new CommandResult(generateSuccessMessage(editedApplicant));","lastModifiedDate":"2022-03-10"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"SethCKL"},"content":"     * {@code applicantToEdit}.","lastModifiedDate":"2022-03-10"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"SethCKL"},"content":"    private String generateSuccessMessage(Person applicantToEdit) {","lastModifiedDate":"2022-03-10"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"SethCKL"},"content":"        return String.format(message, applicantToEdit);","lastModifiedDate":"2022-03-10"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"SethCKL":19,"likeabowx":1,"-":381}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.applicant.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"SethCKL"},"content":"  \"applicants\": [ {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SethCKL":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"SethCKL"},"content":"       Person applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"SethCKL"},"content":"       Person editedApplicant \u003d createEditedPerson(applicantToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"SethCKL"},"content":"       if (!applicantToEdit.isSamePerson(editedApplicant) \u0026\u0026 model.hasPerson(editedApplicant)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"SethCKL"},"content":"       model.setPerson(applicantToEdit, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"SethCKL"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedApplicant));","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"SethCKL"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the applicant data.","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"SethCKL"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ applicants.\u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"SethCKL"},"content":"     FYI, The \u0027filtered list\u0027 is the list of applicants resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the applicants so that the user can see the edited applicant along with all other applicants. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"SethCKL"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of applicants is being tracked.","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"SethCKL"},"content":"        applicants.addAll(","lastModifiedDate":"2022-03-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SethCKL":10,"-":291}},{"path":"src/main/java/seedu/address/commons/core/DataType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"public enum DataType {","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"    APPLICANT,","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"    POSITION,","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"    INTERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"likeabowx":7}},{"path":"src/main/java/seedu/address/commons/core/DataTypeFlags.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":" * Container for the flags of different types.","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"public class DataTypeFlags {","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"    public static final char FLAG_APPLICANT \u003d \u0027a\u0027;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"    public static final char FLAG_INTERVIEW \u003d \u0027i\u0027;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"    public static final char FLAG_POSITION \u003d \u0027p\u0027;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"likeabowx":10}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The applicant index provided is invalid\";","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"    public static final String MESSAGE_INVALID_POSITION_DISPLAYED_INDEX \u003d \"The position index provided is invalid\";","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"    public static final String MESSAGE_INVALID_FLAG \u003d \"Flag is invalid!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"    public static final String MESSAGE_NO_FLAG \u003d \"No flag is found!\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":1,"goalfix":1,"likeabowx":2,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"    /** Returns an unmodifiable view of the filtered list of applicants */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"    /** Returns an unmodifiable view of the filtered list of positions */","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"    ObservableList\u003cPosition\u003e getFilteredPositionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"    /** Returns an unmodifiable view of the filtered list of interviews */","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SethCKL":1,"YiHern-Lee":9,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"YiHern-Lee"},"content":"        return model.getFilteredApplicantList();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"YiHern-Lee"},"content":"    public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"YiHern-Lee"},"content":"        return model.getFilteredPositionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"YiHern-Lee"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"YiHern-Lee"},"content":"        return model.getFilteredInterviewList();","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SethCKL":1,"YiHern-Lee":12,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"        return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"likeabowx":7,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"     * Returns the data type associated with the command.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"     * @return DataType of the command","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"    public abstract DataType getCommandDataType();","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"likeabowx":8,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"    /** The type of data the command is related to. */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"    private final DataType dataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"    public CommandResult(String feedbackToUser, DataType dataType, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"        this.dataType \u003d dataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"    public CommandResult(String feedbackToUser, DataType dataType) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"        this(feedbackToUser, dataType, false, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"    public DataType getDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"        return dataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"likeabowx"},"content":"                \u0026\u0026 dataType \u003d\u003d otherCommandResult.dataType","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"likeabowx"},"content":"        return Objects.hash(feedbackToUser, dataType, showHelp, exit);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"likeabowx":15,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Age;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":" * Edits the details of an existing applicant in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the applicant identified \"","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"            + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"SethCKL"},"content":"            + \"[\" + PREFIX_AGE + \"AGE] \"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Applicant: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This applicant already exists in the address book.\";","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"SethCKL"},"content":"     * @param index of the applicant in the filtered applicant list to edit","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"SethCKL"},"content":"     * @param editPersonDescriptor details to edit the applicant with","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"YiHern-Lee"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"SethCKL"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"SethCKL"},"content":"        Applicant editedApplicant \u003d createEditedPerson(applicantToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"SethCKL"},"content":"        if (!applicantToEdit.isSamePerson(editedApplicant) \u0026\u0026 model.hasPerson(editedApplicant)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"        model.setPerson(applicantToEdit, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedApplicant), getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"likeabowx"},"content":"        return DataType.APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"SethCKL"},"content":"     * Creates and returns a {@code Applicant} with the details of {@code applicantToEdit}","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"SethCKL"},"content":"    private static Applicant createEditedPerson(Applicant applicantToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"SethCKL"},"content":"        assert applicantToEdit !\u003d null;","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"SethCKL"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"SethCKL"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"SethCKL"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(applicantToEdit.getEmail());","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"SethCKL"},"content":"        Age updatedAge \u003d editPersonDescriptor.getAge().orElse(applicantToEdit.getAge());","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"SethCKL"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(applicantToEdit.getAddress());","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"SethCKL"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(applicantToEdit.getGender());","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"SethCKL"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(applicantToEdit.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"SethCKL"},"content":"        return new Applicant(updatedName, updatedPhone, updatedEmail, updatedAge, updatedAddress,","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"SethCKL"},"content":"                updatedGender, updatedTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"SethCKL"},"content":"     * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"SethCKL"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"SethCKL"},"content":"        private Age age;","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"SethCKL"},"content":"        private Gender gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"SethCKL"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"SethCKL"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"SethCKL"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"SethCKL"},"content":"            this.age \u003d age;","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"SethCKL"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"SethCKL"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"SethCKL"},"content":"        public void setGender(Gender address) {","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"SethCKL"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":217,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"SethCKL"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"SethCKL"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"SethCKL":56,"likeabowx":9,"YiHern-Lee":1,"-":197}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, getCommandDataType(), false, true);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"        return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"likeabowx":6,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()),","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"                getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"        return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"SethCKL":1,"likeabowx":8,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/add/AddApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.commands.add;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":" * Adds an applicant to the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"public class AddApplicantCommand extends AddCommand {","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -a: Adds a applicant to the address book. \"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"            + \"Example: \" + COMMAND_WORD + \" -a \"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"            + PREFIX_AGE + \"23 \"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This applicant already exists in the address book\";","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"    private final Applicant toAdd;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"     * Creates an AddApplicantCommand to add the specified {@code Applicant}","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"likeabowx"},"content":"    public AddApplicantCommand(Applicant applicant) {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"        toAdd \u003d applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"likeabowx"},"content":"        return DataType.APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"likeabowx"},"content":"                || (other instanceof AddApplicantCommand // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"likeabowx"},"content":"                \u0026\u0026 toAdd.equals(((AddApplicantCommand) other).toAdd));","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":12,"likeabowx":17,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/add/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.commands.add;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":" * Adds the specified data to the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"likeabowx":16}},{"path":"src/main/java/seedu/address/logic/commands/delete/DeleteApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.commands.delete;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":" * Deletes a applicant identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"public class DeleteApplicantCommand extends DeleteCommand {","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"            + \" -a : Deletes the applicant identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"            + \"Example: \" + COMMAND_WORD + \" -a 1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Applicant: %1$s\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"    public DeleteApplicantCommand(Index targetIndex) {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"        Applicant applicantToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"        model.deletePerson(applicantToDelete);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, applicantToDelete),","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"                getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"likeabowx"},"content":"        return DataType.APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"                || (other instanceof DeleteApplicantCommand // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"likeabowx"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteApplicantCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":5,"likeabowx":16,"YiHern-Lee":1,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/delete/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.commands.delete;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":" * Deletes the specified data from the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"likeabowx":16}},{"path":"src/main/java/seedu/address/logic/commands/help/DetailHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khoahre123"},"content":"package seedu.address.logic.commands.help;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"khoahre123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"khoahre123"},"content":"public class DetailHelpCommand extends HelpCommand {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"khoahre123"},"content":"    private String helpCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"khoahre123"},"content":"    public DetailHelpCommand(String helpCommand) {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"khoahre123"},"content":"        this.helpCommand \u003d helpCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"khoahre123"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"khoahre123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"khoahre123"},"content":"        switch (helpCommand) {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"khoahre123"},"content":"        case \"add\":","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"khoahre123"},"content":"            return new CommandResult(HelpDescription.ADD_COMMAND_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"khoahre123"},"content":"        case \"edit\":","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"khoahre123"},"content":"            return new CommandResult(HelpDescription.EDIT_COMMAND_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"khoahre123"},"content":"        case \"delete\":","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"khoahre123"},"content":"            return new CommandResult(HelpDescription.DELETE_COMMAND_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"khoahre123"},"content":"        case \"filter\":","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"khoahre123"},"content":"            return new CommandResult(HelpDescription.FILTER_COMMAND_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"khoahre123"},"content":"        case \"sort\":","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"khoahre123"},"content":"            return new CommandResult(HelpDescription.SORT_COMMAND_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"khoahre123"},"content":"        case \"list\":","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"khoahre123"},"content":"            return new CommandResult(HelpDescription.LIST_COMMAND_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"khoahre123"},"content":"        case \"exit\":","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"khoahre123"},"content":"            return new CommandResult(HelpDescription.EXIT_COMMAND_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"khoahre123"},"content":"        default:","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"khoahre123"},"content":"            throw new CommandException(HelpDescription.COMMAND_NOT_FOUND_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"khoahre123"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"        return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"khoahre123"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":6,"khoahre123":35}},{"path":"src/main/java/seedu/address/logic/commands/help/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khoahre123"},"content":"package seedu.address.logic.commands.help;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"khoahre123"},"content":"public abstract class HelpCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"khoahre123"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"khoahre123":6,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/help/HelpDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khoahre123"},"content":"package seedu.address.logic.commands.help;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"khoahre123"},"content":"public class HelpDescription {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"khoahre123"},"content":"    public static final String OVERALL_HELPING_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"khoahre123"},"content":"            \"Looks like you forget something. Don\u0027t worry, here are the overall command list. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"khoahre123"},"content":"            + \"For a more detail of each command, you can type \u0027help + command\u0027 to view the full description. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"khoahre123"},"content":"            + \"1. add: Add different types of data into HireLah. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"khoahre123"},"content":"            + \"2. edit: Edit different types of data in HireLah. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"khoahre123"},"content":"            + \"3. delete: Delete different types of data in HireLah. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"khoahre123"},"content":"            + \"4. list: List different data types in HireLah. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"khoahre123"},"content":"            + \"5. filter: Filter HireLah data based on different filter type. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"khoahre123"},"content":"            + \"6. sort: Sort HireLah data ascending or descending accordingly. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"khoahre123"},"content":"            + \"7. exit: Exits the program\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"khoahre123"},"content":"    public static final String ADD_COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"khoahre123"},"content":"            \"1. Adding an applicant: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027add -a n/APPLICANT_NAME d/DOB g/GENDER p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"khoahre123"},"content":"            + \"- An applicant can have any number of tags (including 0). \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"khoahre123"},"content":"            + \"- DOB provided must be in format YYYY-MM-DD. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"khoahre123"},"content":"            + \"- Gender must be M/F. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"khoahre123"},"content":"            + \"app -a n/Max d/2000-01-01 g/M p/97123456 e/max@yahoo.com a/12 Kent Ridge Drive, 119243 t/Data Analyst\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"khoahre123"},"content":"            + \"\\n 2. Adding Interview: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027add -i n/CANDIDATE_INDEX d/DATE r/ROLE\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"khoahre123"},"content":"            + \"- Date provided must be in format YYYY-MM-DD HH:MM. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"khoahre123"},"content":"            + \"- Role must currently exist in position. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"khoahre123"},"content":"            + \"add -i n/1 d/2022-01-01 14:00 r/Senior Frontend Software Engineer \\n \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"khoahre123"},"content":"            + \"3. Adding positions: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027add -p POSITION_NAME n/NUM_OPENINGS [d/DESCRIPTION] [r/REQUIREMENTS]\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"khoahre123"},"content":"            + \"- Positions must have a unique name. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"khoahre123"},"content":"            + \"- Name provided is case-insensitive. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"khoahre123"},"content":"            + \"- Number of openings in the position must be 0 or more 0, 1, 2,… \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"khoahre123"},"content":"            + \"add -p Senior Software Engineer n/3 d/More than 5 years experience r/JavaScript r/HTML r/CSS\";","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"khoahre123"},"content":"    public static final String EDIT_COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"khoahre123"},"content":"            \"1. Editing an applicant: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027edit -a n/APPLICANT_NAME d/DOB g/GENDER p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"khoahre123"},"content":"            + \"- Edits the Applicant at the specified INDEX. The index refers to the index number shown in the \"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"khoahre123"},"content":"            + \"displayed Applicant list. The index must be a positive integer 1, 2, 3,…\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"khoahre123"},"content":"            + \"- At least one of the optional fields must be provided. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"khoahre123"},"content":"            + \"- Existing values will be updated to the input values. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"khoahre123"},"content":"            + \"- When editing tags, the existing tags of the applicant will be removed i.e \"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"khoahre123"},"content":"            + \"adding of tags is not cumulative.\"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"khoahre123"},"content":"            + \"- You can remove all the Applicant’s tags by typing t/ without specifying any tags after it.\"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"khoahre123"},"content":"            + \"edit -a 2 e/belle@yahoo.com a/13 Computing Drive 612345 t/\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"khoahre123"},"content":"            + \"Edits the name, DOB, gender and phone number of the 1st applicant to be Belle, 1960-03-04, \"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"khoahre123"},"content":"            + \"F and 81234567 respectively. \\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"khoahre123"},"content":"            + \"\\n 2. Editing an Interview: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027edit -i n/CANDIDATE_INDEX d/DATE r/ROLE\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"khoahre123"},"content":"            + \"- Edits the interview with CANDIDATE_INDEX and ROLE. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"khoahre123"},"content":"            + \"- At least one optional field must be provided. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"khoahre123"},"content":"            + \"- Existing attribute of the interview will be updated to the input value. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"khoahre123"},"content":"            + \"- When editing requirements, the existing requirements of the interview will be removed. i.e. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"khoahre123"},"content":"            + \"adding requirements is not cumulative.\"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"khoahre123"},"content":"            + \"edit -i 1 Senior Frontend Software Engineer d/2022-01-01 15:00 \\n \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"khoahre123"},"content":"            + \"3. Editing a positions: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027edit -p POSITION_NAME [n/NUM_OPENINGS] [d/DESCRIPTION] [r/REQUIREMENTS]\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"khoahre123"},"content":"            + \"- Edits the available position with POSITION_NAME. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"khoahre123"},"content":"            + \"- Position name provided is case-insensitive. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"khoahre123"},"content":"            + \"- At least one optional field must be provided. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"khoahre123"},"content":"            + \"- Existing attributes of the position will be updated to the input value. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"khoahre123"},"content":"            + \"- When editing requirements, the existing requirements of the position will be removed. i.e. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"khoahre123"},"content":"            + \"adding requirements is not cumulative. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"khoahre123"},"content":"            + \"- Requirements can be removed by providing an empty requirement field. i.e. r/ \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"khoahre123"},"content":"            + \"edit -p Senior Frontend Software Engineer r/JavaScript r/React\";","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"khoahre123"},"content":"    public static final String DELETE_COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"khoahre123"},"content":"            \"1. Deleting an applicant: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027del -a CANDIDATE_INDEX\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"khoahre123"},"content":"            + \"- Deletes the Applicant at the specified CANDIDATE_INDEX. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"khoahre123"},"content":"            + \"- The index refers to the index number shown in the displayed Applicant list. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"khoahre123"},"content":"            + \"- The index must be a positive integer 1, 2, 3,… \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"khoahre123"},"content":"            + \"\u0027find Betsy\u0027 followed by \u0027delete -a 1\u0027 deletes the 1st person in the results of the find command.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"khoahre123"},"content":"            + \"\\n 2. Deleting an Interview: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027del -i CANDIDATE_INDEX ROLE\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"khoahre123"},"content":"            + \"- Existing interview with the matching CANDIDATE_INDEX and ROLE is deleted. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"khoahre123"},"content":"            + \"- Role provided is case-insensitive. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"khoahre123"},"content":"            + \"del -i 1 Senior Frontend Software Engineer \\n \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"khoahre123"},"content":"            + \"3. Deleting positions: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027del -p ROLE\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"khoahre123"},"content":"            + \"- Existing position with the specified name is deleted. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"khoahre123"},"content":"            + \"- The position name has to match with the position that is to be deleted. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"khoahre123"},"content":"            + \"- Position name provided is case-insensitive. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"khoahre123"},"content":"            + \"del -p Senior Frontend Software Engineer\";","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"khoahre123"},"content":"    public static final String LIST_COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"khoahre123"},"content":"            \"1. List all applicants: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027list -a\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"khoahre123"},"content":"            + \"\\n 2. Listing all Interview for a candidate: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027list -i CANDIDATE_INDEX\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"khoahre123"},"content":"            + \"list -i 1 \\n \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"khoahre123"},"content":"            + \"3. Listing all positions: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027list -p\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"khoahre123"},"content":"            + \"Some notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"khoahre123"},"content":"            + \"- Existing position with the specified name is deleted. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"khoahre123"},"content":"            + \"- The position name has to match with the position that is to be deleted. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"khoahre123"},"content":"            + \"- Position name provided is case-insensitive. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"khoahre123"},"content":"            + \"del -p Senior Frontend Software Engineer\";","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"khoahre123"},"content":"    public static final String FILTER_COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"khoahre123"},"content":"        \"View different applicants, interviews and positions in HireLah through various filters. \"","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"khoahre123"},"content":"        + \"It alters the current display of HireLah and changes the index of the relevant data. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"khoahre123"},"content":"        + \"Format: \u0027filter DATA_TYPE b/FILTER_TYPE [ARGUMENT]\u0027 \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"khoahre123"},"content":"        + \"Notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"khoahre123"},"content":"        + \"Different data has different filters available, thus requiring different arguments, as such\"","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"khoahre123"},"content":"        + \"- Applicant (DATA_TYPE: appl): \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"khoahre123"},"content":"        + \" + FILTER_TYPE: name, ARGUMENT: n/KEYWORD: View applicants whose name contains the keyword \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"khoahre123"},"content":"        + \" + FILTER_TYPE: tag, ARGUMENT: t/TAG1, [t/TAG2, …]: View applicants who have all the tags specified \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"khoahre123"},"content":"        + \"- Interview (DATA_TYPE: intvw): \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"khoahre123"},"content":"        + \" + FILTER_TYPE: appl, ARGUMENT: n/NAME: View interviews for applicants whose name is specified \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"khoahre123"},"content":"        + \" + FILTER_TYPE: date, ARGUMENT: d/DATE: View interviews happening on the specified date \"","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"khoahre123"},"content":"        + \"(Date provided must be in format YYYY-MM-DD) \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"khoahre123"},"content":"        + \"- Position (DATA_TYPE: pos): \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"khoahre123"},"content":"        + \" + FILTER_TYPE: name, ARGUMENT: n/KEYWORD: View positions which has \"","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"khoahre123"},"content":"        + \"the specified keyword in the position name \\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"khoahre123"},"content":"        + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"khoahre123"},"content":"        + \"filter appl tag t/school t/friend \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"khoahre123"},"content":"        + \"filter intvw date d/2022-03-20\";","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"khoahre123"},"content":"    public static final String SORT_COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"khoahre123"},"content":"            \"Arranges applicants, interview and positions in HireLah according to their properties.\"","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"khoahre123"},"content":"            + \"It alters the current display of HireLah and changes the index of the relevant data. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027sort DATA_TYPE SORT_ORDER\u0027\"","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"khoahre123"},"content":"            + \"Notice: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"khoahre123"},"content":"            + \"User can specify the order of the sorted data by typing ASC (for ascending) or DSC (for descending) \"","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"khoahre123"},"content":"            + \"in the REVERSE part. \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"khoahre123"},"content":"            + \"Type of data and what the sorting based on\"","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"khoahre123"},"content":"            + \"- Applicant (DATA_TYPE: appl): \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"khoahre123"},"content":"            + \" + Sorting properties: Name \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"khoahre123"},"content":"            + \" + Description: \\tSort and view applicants based on their name \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"khoahre123"},"content":"            + \"- Interview (DATA_TYPE: intvw): \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"khoahre123"},"content":"            + \" + Sorting properties: Date \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"khoahre123"},"content":"            + \" + Description: Sort and view interviews based on their occurring date \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"khoahre123"},"content":"            + \"- Position (DATA_TYPE: pos): \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"khoahre123"},"content":"            + \" + Sorting properties: Name \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"khoahre123"},"content":"            + \" + Description: Sort and view positions based on the position name \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"khoahre123"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"khoahre123"},"content":"            + \"sort APPL ASC \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"khoahre123"},"content":"            + \"sort POS DSC\";","lastModifiedDate":"2022-03-14"},{"lineNumber":159,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"khoahre123"},"content":"    public static final String EXIT_COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"khoahre123"},"content":"            \"Well its an exit command, of course it going to terminate the program \\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"khoahre123"},"content":"            + \"Format: \u0027exit\u0027\";","lastModifiedDate":"2022-03-14"},{"lineNumber":163,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"khoahre123"},"content":"    public static final String COMMAND_NOT_FOUND_DESCRIPTION \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"khoahre123"},"content":"            \"Sorry, we don\u0027t have this command. Please try again.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"khoahre123"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"khoahre123":166}},{"path":"src/main/java/seedu/address/logic/commands/help/OverallHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khoahre123"},"content":"package seedu.address.logic.commands.help;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"khoahre123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"khoahre123"},"content":"public class OverallHelpCommand extends HelpCommand {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"khoahre123"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"khoahre123"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"khoahre123"},"content":"        return new CommandResult(HelpDescription.OVERALL_HELPING_DESCRIPTION, getCommandDataType(), true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"        return null;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"khoahre123"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":6,"khoahre123":11}},{"path":"src/main/java/seedu/address/logic/commands/interview/AddInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.logic.commands.interview;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.commands.add.AddCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"public class AddInterviewCommand extends AddCommand {","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -i: Adds an interview to the Hirelah application. \"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"            + \"Parameters: APPLICANT_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"            + PREFIX_POSITION + \"POSITION_INDEX\" + \"\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"            + \"Example: \" + COMMAND_WORD + \" -i \" + \"1 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"            + PREFIX_DATE + \"2022-01-01 12:00 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"            + PREFIX_POSITION + \"1\";","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New interview added: %1$s\";","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"This interview already exists in the address book\";","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"    private final Index applicantIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"    private final Index positionIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"goalfix"},"content":"     * Creates an AddApplicantCommand to add the specified {@code Interview}","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"goalfix"},"content":"    public AddInterviewCommand(Index applicantIndex, LocalDateTime date, Index positionIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"goalfix"},"content":"        requireNonNull(applicantIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"goalfix"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"goalfix"},"content":"        requireNonNull(positionIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"goalfix"},"content":"        this.applicantIndex \u003d applicantIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"goalfix"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"goalfix"},"content":"        this.positionIndex \u003d positionIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"goalfix"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"goalfix"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"        List\u003cApplicant\u003e lastShownApplicantList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"goalfix"},"content":"        if (applicantIndex.getZeroBased() \u003e\u003d lastShownApplicantList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"goalfix"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"goalfix"},"content":"        Applicant applicantInInterview \u003d lastShownApplicantList.get(applicantIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"goalfix"},"content":"        List\u003cPosition\u003e lastShownPositionList \u003d model.getFilteredPositionList();","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"goalfix"},"content":"        if (positionIndex.getZeroBased() \u003e\u003d lastShownPositionList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"goalfix"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_POSITION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"goalfix"},"content":"        Position positionInInterview \u003d lastShownPositionList.get(positionIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"goalfix"},"content":"        Interview interviewToAdd \u003d new Interview(applicantInInterview, date, positionInInterview);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"goalfix"},"content":"        if (model.hasInterview(interviewToAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"goalfix"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"goalfix"},"content":"        model.addInterview(interviewToAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, interviewToAdd), getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"likeabowx"},"content":"        return DataType.INTERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"goalfix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"goalfix"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"goalfix"},"content":"                || (other instanceof AddInterviewCommand // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"goalfix"},"content":"                \u0026\u0026 applicantIndex.equals(((AddInterviewCommand) other).applicantIndex)","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"goalfix"},"content":"                \u0026\u0026 date.equals(((AddInterviewCommand) other).date)","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"goalfix"},"content":"                \u0026\u0026 positionIndex.equals(((AddInterviewCommand) other).positionIndex));","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"goalfix":80,"likeabowx":7,"YiHern-Lee":1}},{"path":"src/main/java/seedu/address/logic/commands/list/ListApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.commands.list;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"public class ListApplicantCommand extends ListCommand {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants\";","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"        return DataType.APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"likeabowx":11,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/list/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.commands.list;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"    public abstract CommandResult execute(Model model);","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"likeabowx":12}},{"path":"src/main/java/seedu/address/logic/commands/position/AddPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.logic.commands.position;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUM_OPENINGS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REQUIREMENT;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.commands.add.AddCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":" * Adds a position in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"public class AddPositionCommand extends AddCommand {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" -p: Adds a position to the address book. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"            + PREFIX_NUM_OPENINGS + \"NUM_OPENINGS \"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"            + \"[\" + PREFIX_REQUIREMENT + \"REQUIREMENT]...\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"            + \"Example: \" + COMMAND_WORD + \" -p \"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"            + PREFIX_POSITION + \"Junior Back-end Software Engineer \"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"            + PREFIX_NUM_OPENINGS + \"3 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"            + PREFIX_DESCRIPTION + \"Must be able to work remotely. Teams are assigned during on-boarding process. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"            + PREFIX_REQUIREMENT + \"Computer Science Bachelors \"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"            + PREFIX_REQUIREMENT + \"Experience with SQL\";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New position added: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String MESSAGE_DUPLICATE_POSITION \u003d \"This position already exists in the address book\";","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"    private final Position toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"     * Creates an AddPositionCommand to add the specified {@code position}","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"    public AddPositionCommand(Position position) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"        toAdd \u003d position;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"        if (model.hasPosition(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"        model.addPosition(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"likeabowx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"likeabowx"},"content":"    public DataType getCommandDataType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"likeabowx"},"content":"        return DataType.POSITION;","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"YiHern-Lee"},"content":"                || (other instanceof AddPositionCommand // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 toAdd.equals(((AddPositionCommand) other).toAdd));","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"likeabowx":7,"YiHern-Lee":62}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_INTERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_POSITION;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.applicants.AddApplicantCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.parser.interview.AddInterviewCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.parser.position.AddPositionCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":" * Parses add command and calls the respective AddXCommandParsers according to the flag.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"     * Parses the given {@code String} of arguments in the context of the AddApplicantCommand,","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"     * calls the respective AddXCommandParsers according to the flag specified","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"     * and returns an AddApplicantCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"        char flag \u003d ArgumentTokenizer.getFlag(args.trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"        String argsWithoutFlag \u003d ArgumentTokenizer.removeFlag(args.trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"        if (flag \u003d\u003d FLAG_APPLICANT) {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"            return new AddApplicantCommandParser().parse(argsWithoutFlag);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"        } else if (flag \u003d\u003d FLAG_INTERVIEW) {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"            return new AddInterviewCommandParser().parse(argsWithoutFlag);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"        } else if (flag \u003d\u003d FLAG_POSITION) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"            return new AddPositionCommandParser().parse(argsWithoutFlag);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"        return null;","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"goalfix":2,"likeabowx":17,"YiHern-Lee":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.delete.DeleteCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.HelpCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.list.ListApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.list.ListCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.applicants.EditApplicantCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.parser.help.HelpCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"likeabowx"},"content":"            return new EditApplicantCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"likeabowx"},"content":"            return new ListApplicantCommand(); //TODO: Create list parser to call different ListCommands","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"khoahre123"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"likeabowx":7,"-":69,"khoahre123":3}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_INTERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_POSITION;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FLAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_FLAG;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":157,"author":{"gitId":"likeabowx"},"content":"     * Gets the type flag from the given argument.","lastModifiedDate":"2022-03-11"},{"lineNumber":158,"author":{"gitId":"likeabowx"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"likeabowx"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-03-11"},{"lineNumber":160,"author":{"gitId":"likeabowx"},"content":"     * @return The flag of the command","lastModifiedDate":"2022-03-11"},{"lineNumber":161,"author":{"gitId":"likeabowx"},"content":"     * @throws ParseException When a flag is not found or when the flag is invalid;","lastModifiedDate":"2022-03-11"},{"lineNumber":162,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":163,"author":{"gitId":"likeabowx"},"content":"    public static char getFlag(String argsString) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":164,"author":{"gitId":"goalfix"},"content":"        if (argsString.equals(\"\") || argsString.charAt(0) !\u003d \u0027-\u0027) {","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"likeabowx"},"content":"            throw new ParseException(MESSAGE_NO_FLAG);","lastModifiedDate":"2022-03-11"},{"lineNumber":166,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":167,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":168,"author":{"gitId":"likeabowx"},"content":"        char flag \u003d argsString.charAt(1);","lastModifiedDate":"2022-03-11"},{"lineNumber":169,"author":{"gitId":"goalfix"},"content":"        char whitespace \u003d argsString.length() \u003c\u003d 2 ? \u0027 \u0027 : argsString.charAt(2);","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":171,"author":{"gitId":"likeabowx"},"content":"        if (whitespace !\u003d \u0027 \u0027 || (flag !\u003d FLAG_APPLICANT \u0026\u0026 flag !\u003d FLAG_INTERVIEW \u0026\u0026 flag !\u003d FLAG_POSITION)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":172,"author":{"gitId":"likeabowx"},"content":"            throw new ParseException(MESSAGE_INVALID_FLAG);","lastModifiedDate":"2022-03-11"},{"lineNumber":173,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":174,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":175,"author":{"gitId":"likeabowx"},"content":"        return flag;","lastModifiedDate":"2022-03-11"},{"lineNumber":176,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":178,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":179,"author":{"gitId":"likeabowx"},"content":"     * Removes the type flag from the given argument.","lastModifiedDate":"2022-03-11"},{"lineNumber":180,"author":{"gitId":"likeabowx"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":181,"author":{"gitId":"likeabowx"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-03-11"},{"lineNumber":182,"author":{"gitId":"likeabowx"},"content":"     * @return The same argument without the type flag.","lastModifiedDate":"2022-03-11"},{"lineNumber":183,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":184,"author":{"gitId":"likeabowx"},"content":"    public static String removeFlag(String argsString) {","lastModifiedDate":"2022-03-11"},{"lineNumber":185,"author":{"gitId":"likeabowx"},"content":"        return argsString.substring(2);","lastModifiedDate":"2022-03-11"},{"lineNumber":186,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"goalfix":2,"likeabowx":37,"-":148}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"    // Applicant parser","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"ag/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    // Interview parser","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    // Position parser","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"    public static final Prefix PREFIX_NUM_OPENINGS \u003d new Prefix(\"o/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    public static final Prefix PREFIX_REQUIREMENT \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SethCKL":2,"goalfix":2,"YiHern-Lee":6,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_INTERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.commons.core.DataTypeFlags.FLAG_POSITION;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.delete.DeleteCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.applicants.DeleteApplicantCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":" * Parses delete command and calls the respective DeleteXCommandParsers according to the flag.","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteApplicantCommand,","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"     * calls the respective DeleteXCommandParsers according to the flag specified","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"     * and returns an DeleteApplicantCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"        char flag \u003d ArgumentTokenizer.getFlag(args.trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"        String argsWithoutFlag \u003d ArgumentTokenizer.removeFlag(args.trim());","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"        if (flag \u003d\u003d FLAG_APPLICANT) {","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"            return new DeleteApplicantCommandParser().parse(argsWithoutFlag);","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"        } else if (flag \u003d\u003d FLAG_INTERVIEW) {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"            // calls delete interview command parser","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"        } else if (flag \u003d\u003d FLAG_POSITION) {","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"            // calls delete position command parser","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"        return null;","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"likeabowx":20,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"SethCKL":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Age;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Gender;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionName;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionOpenings;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Requirement;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"SethCKL"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"SethCKL"},"content":"     * Parses a {@code String age} into a {@code age}.","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"SethCKL"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"SethCKL"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"SethCKL"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"SethCKL"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(age);","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"SethCKL"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"SethCKL"},"content":"        if (!Age.isValidAge(trimmedAge)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"SethCKL"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"SethCKL"},"content":"        return new Age(trimmedAge);","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"SethCKL"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"SethCKL"},"content":"     * Parses a {@code String gender} into a {@code age}.","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"SethCKL"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"SethCKL"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"SethCKL"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"SethCKL"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"SethCKL"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"SethCKL"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":159,"author":{"gitId":"SethCKL"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":161,"author":{"gitId":"SethCKL"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":163,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"goalfix"},"content":"     * Parses a {@code String date} into an {@code LocalDateTime}.","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"goalfix"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"goalfix"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"goalfix"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"goalfix"},"content":"    public static LocalDateTime parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"goalfix"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"goalfix"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"goalfix"},"content":"        // See whether date is valid","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"goalfix"},"content":"        // consider abstracting into a separate class in Interview","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"goalfix"},"content":"        try {","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"goalfix"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"goalfix"},"content":"            LocalDateTime dateParsed \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"goalfix"},"content":"            return dateParsed;","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"goalfix"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"goalfix"},"content":"            throw new ParseException(\"Date time format should be yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"YiHern-Lee"},"content":"     * Parses a {@code String positionName} into a {@code PositionName}.","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"YiHern-Lee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"YiHern-Lee"},"content":"     * @throws ParseException if the given {@code positionName} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"YiHern-Lee"},"content":"    public static PositionName parsePositionName(String positionName) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(positionName);","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"YiHern-Lee"},"content":"        String trimmedName \u003d positionName.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"YiHern-Lee"},"content":"        if (!PositionName.isValidPositionName(trimmedName)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"YiHern-Lee"},"content":"            throw new ParseException(PositionName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"YiHern-Lee"},"content":"        return new PositionName(trimmedName);","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"YiHern-Lee"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"YiHern-Lee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"YiHern-Lee"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"YiHern-Lee"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"YiHern-Lee"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"YiHern-Lee"},"content":"        if (!Description.isValidDescriptionText(trimmedDescription)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"YiHern-Lee"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"YiHern-Lee"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"YiHern-Lee"},"content":"     * Parses a {@code String openings} into a {@code PositionOpenings}.","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"YiHern-Lee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"YiHern-Lee"},"content":"     * @throws ParseException if the given {@code openings} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"YiHern-Lee"},"content":"    public static PositionOpenings parseOpenings(String openings) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(openings);","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"YiHern-Lee"},"content":"        String trimmedOpenings \u003d openings.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"YiHern-Lee"},"content":"        if (!PositionOpenings.isValidNumber(openings)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"YiHern-Lee"},"content":"            throw new ParseException(PositionOpenings.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"YiHern-Lee"},"content":"        return new PositionOpenings(trimmedOpenings);","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"YiHern-Lee"},"content":"     * Parses a {@code String requirement} into a {@code Requirement}.","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"YiHern-Lee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"YiHern-Lee"},"content":"     * @throws ParseException if the given {@code requirement} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"YiHern-Lee"},"content":"    public static Requirement parseRequirement(String requirement) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(requirement);","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"YiHern-Lee"},"content":"        String trimmedRequirement \u003d requirement.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"YiHern-Lee"},"content":"        if (!Requirement.isValidRequirementText(trimmedRequirement)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"YiHern-Lee"},"content":"            throw new ParseException(Requirement.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"YiHern-Lee"},"content":"        return new Requirement(trimmedRequirement);","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"YiHern-Lee"},"content":"     * Parses {@code Collection\u003cString\u003e requirements} into a {@code Set\u003cRequirement\u003e}.","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"YiHern-Lee"},"content":"    public static Set\u003cRequirement\u003e parseRequirements(Collection\u003cString\u003e requirements) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(requirements);","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"YiHern-Lee"},"content":"        final Set\u003cRequirement\u003e requirementSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":252,"author":{"gitId":"YiHern-Lee"},"content":"        for (String requirement : requirements) {","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"YiHern-Lee"},"content":"            requirementSet.add(parseRequirement(requirement));","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"YiHern-Lee"},"content":"        return requirementSet;","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"goalfix":25,"SethCKL":36,"YiHern-Lee":76,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/applicants/AddApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.parser.applicants;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Age;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":" * Parses input arguments and creates a new AddApplicantCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"public class AddApplicantCommandParser implements Parser\u003cAddApplicantCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"     * Parses the given {@code String} of arguments in the context of the AddApplicantCommand","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"     * and returns an AddApplicantCommand object for execution.","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"    public AddApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_AGE, PREFIX_ADDRESS, PREFIX_GENDER, PREFIX_PHONE,","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"                        PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"SethCKL"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_AGE, PREFIX_ADDRESS, PREFIX_GENDER, PREFIX_PHONE,","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"SethCKL"},"content":"                PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"SethCKL"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"SethCKL"},"content":"        Applicant applicant \u003d new Applicant(name, phone, email, age, address, gender, tagList);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"likeabowx"},"content":"        return new AddApplicantCommand(applicant);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"SethCKL":16,"likeabowx":14,"-":41}},{"path":"src/main/java/seedu/address/logic/parser/applicants/DeleteApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.parser.applicants;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.delete.DeleteApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":" * Parses input arguments and creates a new DeleteApplicantCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"public class DeleteApplicantCommandParser implements Parser\u003cDeleteApplicantCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteApplicantCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"     * and returns a DeleteApplicantCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"    public DeleteApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"            return new DeleteApplicantCommand(index);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"likeabowx":11,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/applicants/EditApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.logic.parser.applicants;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"public class EditApplicantCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"likeabowx":6,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/help/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khoahre123"},"content":"package seedu.address.logic.parser.help;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.DetailHelpCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.HelpCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.OverallHelpCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"khoahre123"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"khoahre123"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"khoahre123"},"content":"    public HelpCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"khoahre123"},"content":"        if (userInput.equals(\"\")) {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"khoahre123"},"content":"            return new OverallHelpCommand();","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"khoahre123"},"content":"        } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"khoahre123"},"content":"            return new DetailHelpCommand(userInput.replaceAll(\"\\\\s+\", \"\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"khoahre123"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"khoahre123"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"khoahre123":19}},{"path":"src/main/java/seedu/address/logic/parser/interview/AddInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.logic.parser.interview;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.commands.interview.AddInterviewCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":" * Parses input arguments and creates a new AddInterviewCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"public class AddInterviewCommandParser implements Parser\u003cAddInterviewCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterviewCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"     * and returns an AddInterviewCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"    public AddInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_POSITION);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"        Index applicantIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"        // Find applicant index, to be converted into actual applicant in AddInterviewCommand. This is because we need","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"goalfix"},"content":"        // the model class to help us match the index to the actual applicant","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"goalfix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"goalfix"},"content":"            applicantIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"goalfix"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"goalfix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"goalfix"},"content":"                    AddInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"goalfix"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_POSITION)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"goalfix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"goalfix"},"content":"        // Can find actual date and do error checking here","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"goalfix"},"content":"        LocalDateTime date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"goalfix"},"content":"        // Find position index, to be converted into actual position in AddInterviewCommand. This is because we need","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"goalfix"},"content":"        // the model class to help us match the index to the actual applicant","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"goalfix"},"content":"        Index positionIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"goalfix"},"content":"        return new AddInterviewCommand(applicantIndex, date, positionIndex);","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"goalfix"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"goalfix"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"goalfix"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"goalfix"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"goalfix":66}},{"path":"src/main/java/seedu/address/logic/parser/position/AddPositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.logic.parser.position;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUM_OPENINGS;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REQUIREMENT;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.commands.position.AddPositionCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionName;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionOpenings;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Requirement;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"public class AddPositionCommandParser implements Parser\u003cAddPositionCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPositionCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"     * and returns an AddPositionCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"    public AddPositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_POSITION, PREFIX_NUM_OPENINGS, PREFIX_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"                        PREFIX_REQUIREMENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_POSITION, PREFIX_NUM_OPENINGS, PREFIX_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"                PREFIX_REQUIREMENT) || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPositionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"        PositionName positionName \u003d ParserUtil.parsePositionName(argMultiMap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"        PositionOpenings positionOpenings \u003d ParserUtil.parseOpenings(argMultiMap.getValue(PREFIX_NUM_OPENINGS).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultiMap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"        Set\u003cRequirement\u003e requirements \u003d ParserUtil.parseRequirements(argMultiMap.getAllValues(PREFIX_REQUIREMENT));","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"        Position position \u003d new Position(positionName, description, positionOpenings, requirements);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"        return new AddPositionCommand(position);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"YiHern-Lee":61}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.UniquePersonList;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.UniquePositionList;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"    private final UniqueInterviewList interviews;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    private final UniquePositionList positions;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"        interviews \u003d new UniqueInterviewList();","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"        positions \u003d new UniquePositionList();","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"     * Replaces the contents of the applicant list with {@code applicants}.","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"SethCKL"},"content":"    public void setPersons(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"SethCKL"},"content":"        this.persons.setPersons(applicants);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"     * Replaces the contents of the position list with {@code positions}.","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"     * {@code positions} must not contain duplicate positions.","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"    public void setPositions(List\u003cPosition\u003e positions) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"        this.positions.setPositions(positions);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"goalfix"},"content":"     * Replaces the contents of the interview list with {@code interviews}.","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"goalfix"},"content":"     * {@code interviews} must not contain duplicate interviews.","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"goalfix"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"goalfix"},"content":"        this.interviews.setInterviews(interviews);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":81,"author":{"gitId":"YiHern-Lee"},"content":"        setPositions(newData.getPositionList());","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"goalfix"},"content":"        setInterviews(newData.getInterviewList());","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"SethCKL"},"content":"    //// applicant-level operations","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"SethCKL"},"content":"     * Returns true if a applicant with the same identity as {@code applicant} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"    public boolean hasPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"SethCKL"},"content":"        return persons.contains(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"SethCKL"},"content":"     * Adds a applicant to the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"     * The applicant must not already exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"SethCKL"},"content":"    public void addPerson(Applicant p) {","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"SethCKL"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"SethCKL"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"SethCKL"},"content":"     *  in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"SethCKL"},"content":"    public void setPerson(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"SethCKL"},"content":"        persons.setPerson(target, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"SethCKL"},"content":"    public void removePerson(Applicant key) {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"goalfix"},"content":"    //// interview-level operations","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"goalfix"},"content":"     * Returns true if an interview that is the same as {@code interview} exists in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"goalfix"},"content":"    public boolean hasInterview(Interview i) {","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"goalfix"},"content":"        requireNonNull(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"goalfix"},"content":"        return interviews.contains(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"goalfix"},"content":"     * Adds an interview to the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"goalfix"},"content":"     * The interview must not already exist in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"goalfix"},"content":"    public void addInterview(Interview i) {","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"goalfix"},"content":"        interviews.add(i);","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"YiHern-Lee"},"content":"    //// position-level operations","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if a position that is the same as {@code position} exists in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean hasPosition(Position position) {","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"YiHern-Lee"},"content":"        return positions.contains(position);","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"YiHern-Lee"},"content":"     * Adds a position to the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"YiHern-Lee"},"content":"     * The position must not already exist in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"YiHern-Lee"},"content":"    public void addPosition(Position position) {","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"YiHern-Lee"},"content":"        positions.add(position);","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":159,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":161,"author":{"gitId":"YiHern-Lee"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-13"},{"lineNumber":162,"author":{"gitId":"YiHern-Lee"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":163,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"YiHern-Lee"},"content":"    public void removePosition(Position key) {","lastModifiedDate":"2022-03-13"},{"lineNumber":165,"author":{"gitId":"YiHern-Lee"},"content":"        positions.remove(key);","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"SethCKL"},"content":"    public ObservableList\u003cApplicant\u003e getPersonList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":181,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"goalfix"},"content":"    public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"goalfix"},"content":"        return interviews.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"YiHern-Lee"},"content":"    public ObservableList\u003cPosition\u003e getPositionList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"YiHern-Lee"},"content":"        return positions.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SethCKL":22,"goalfix":34,"YiHern-Lee":45,"-":101}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"    Predicate\u003cApplicant\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"    Predicate\u003cInterview\u003e PREDICATE_SHOW_ALL_INTERVIEWS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"    Predicate\u003cPosition\u003e PREDICATE_SHOW_ALL_POSITIONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"SethCKL"},"content":"     * Returns true if a applicant with the same identity as {@code applicant} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"SethCKL"},"content":"    boolean hasPerson(Applicant applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"SethCKL"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"SethCKL"},"content":"     * The applicant must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"SethCKL"},"content":"    void deletePerson(Applicant target);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"SethCKL"},"content":"     * Adds the given applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"SethCKL"},"content":"     * {@code applicant} must not already exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"SethCKL"},"content":"    void addPerson(Applicant applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"SethCKL"},"content":"     * Replaces the given applicant {@code target} with {@code editedApplicant}.","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"SethCKL"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"SethCKL"},"content":"     * in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"SethCKL"},"content":"    void setPerson(Applicant target, Applicant editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"SethCKL"},"content":"    /** Returns an unmodifiable view of the filtered applicant list */","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"YiHern-Lee"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"SethCKL"},"content":"     * Updates the filter of the filtered applicant list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"    void updateFilteredPersonList(Predicate\u003cApplicant\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"goalfix"},"content":"     * Returns true if an interview already exists in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"goalfix"},"content":"    boolean hasInterview(Interview interview);","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"goalfix"},"content":"     * Adds the given interview.","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"goalfix"},"content":"     * {@code interview} must not already exist in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"goalfix"},"content":"    void addInterview(Interview interview);","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"goalfix"},"content":"    /** Returns an unmodifiable view of the filtered interview list */","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"goalfix"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"goalfix"},"content":"     * Updates the filter of the filtered interview list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"goalfix"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"goalfix"},"content":"    void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"YiHern-Lee"},"content":"     * Updates the filter of the filtered position list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"YiHern-Lee"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"YiHern-Lee"},"content":"    void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"YiHern-Lee"},"content":"     * Deletes the given position.","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"YiHern-Lee"},"content":"     * The position must exist in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"YiHern-Lee"},"content":"    void deletePosition(Position target);","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if a position already exists in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"YiHern-Lee"},"content":"    boolean hasPosition(Position position);","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"YiHern-Lee"},"content":"     * Adds the given position.","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"YiHern-Lee"},"content":"     * {@code position} must not already exist in the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"YiHern-Lee"},"content":"    void addPosition(Position position);","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"goalfix"},"content":"    /** Returns an unmodifiable view of the filtered position list */","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"goalfix"},"content":"    ObservableList\u003cPosition\u003e getFilteredPositionList();","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SethCKL":17,"goalfix":26,"YiHern-Lee":26,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    private final FilteredList\u003cApplicant\u003e filteredApplicants;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"    private final FilteredList\u003cInterview\u003e filteredInterviews;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"    private final FilteredList\u003cPosition\u003e filteredPositions;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"goalfix"},"content":"        filteredInterviews \u003d new FilteredList\u003c\u003e(this.addressBook.getInterviewList());","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.addressBook.getPositionList());","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"SethCKL"},"content":"    public boolean hasPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"        return addressBook.hasPerson(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"SethCKL"},"content":"    public void deletePerson(Applicant target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"SethCKL"},"content":"    public void addPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"SethCKL"},"content":"        addressBook.addPerson(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"SethCKL"},"content":"    public void setPerson(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"SethCKL"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"SethCKL"},"content":"        addressBook.setPerson(target, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"goalfix"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"goalfix"},"content":"        requireNonNull(interview);","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"goalfix"},"content":"        return addressBook.hasInterview(interview);","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"goalfix"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"goalfix"},"content":"        addressBook.addInterview(interview);","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"goalfix"},"content":"        updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean hasPosition(Position position) {","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"YiHern-Lee"},"content":"        return addressBook.hasPosition(position);","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"YiHern-Lee"},"content":"    public void addPosition(Position position) {","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"YiHern-Lee"},"content":"        addressBook.addPosition(position);","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"YiHern-Lee"},"content":"        updateFilteredPositionList(PREDICATE_SHOW_ALL_POSITIONS);","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"YiHern-Lee"},"content":"    public void deletePosition(Position target) {","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"YiHern-Lee"},"content":"        addressBook.removePosition(target);","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"SethCKL"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Applicant List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"SethCKL"},"content":"     * Returns an unmodifiable view of the list of {@code Applicant} backed by the internal list of","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"YiHern-Lee"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"SethCKL"},"content":"        return filteredApplicants;","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"SethCKL"},"content":"    public void updateFilteredPersonList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"SethCKL"},"content":"        filteredApplicants.setPredicate(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"goalfix"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Interview List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"goalfix"},"content":"     * Returns an unmodifiable view of the list of {@code Interview} backed by the internal list of","lastModifiedDate":"2022-03-14"},{"lineNumber":169,"author":{"gitId":"goalfix"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"goalfix"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"goalfix"},"content":"        return filteredInterviews;","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":176,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":177,"author":{"gitId":"goalfix"},"content":"    public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"goalfix"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"goalfix"},"content":"        filteredInterviews.setPredicate(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":181,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"YiHern-Lee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Position List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"YiHern-Lee"},"content":"    public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"YiHern-Lee"},"content":"        return filteredPositions;","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"YiHern-Lee"},"content":"    public void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"YiHern-Lee"},"content":"        filteredPositions.setPredicate(predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"YiHern-Lee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 filteredApplicants.equals(other.filteredApplicants);","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SethCKL":18,"goalfix":33,"YiHern-Lee":30,"-":132}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"    ObservableList\u003cApplicant\u003e getPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"     * Returns an unmodifiable view of the interview list.","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"     * This list will not contain any duplicate interviews.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"    ObservableList\u003cInterview\u003e getInterviewList();","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns an unmodifiable view of the position list.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"     * This list will not contain any duplicate positions.","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"    ObservableList\u003cPosition\u003e getPositionList();","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SethCKL":2,"goalfix":8,"YiHern-Lee":6,"-":15}},{"path":"src/main/java/seedu/address/model/applicant/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":" * Represents a Applicant\u0027s address in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":2,"-":55}},{"path":"src/main/java/seedu/address/model/applicant/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"SethCKL"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"public class Age {","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"            \"Age should only contain numbers, and it should be at least 2 digits long\";","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{2,}\";","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"    public final String value;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"     * Constructs an {@code age}.","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"     * @param age A valid age .","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"    public Age(String age) {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(age);","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"        this.value \u003d age;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"     * Returns true if a given string is a valid age.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 value.equals(((Age) other).value)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"SethCKL"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"SethCKL":48}},{"path":"src/main/java/seedu/address/model/applicant/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":" * Represents a Applicant in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"public class Applicant {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"    private final Age age;","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    private final Gender gender;","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"    public Applicant(Name name, Phone phone, Email email, Age age, Address address, Gender gender, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"SethCKL"},"content":"    public Age getAge() {","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"        return age;","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"SethCKL"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"SethCKL"},"content":"        return gender;","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"SethCKL"},"content":"    public boolean isSamePerson(Applicant otherApplicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"SethCKL"},"content":"        if (otherApplicant \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"SethCKL"},"content":"        return otherApplicant !\u003d null","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 otherApplicant.getName().equals(getName());","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"SethCKL"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"SethCKL"},"content":"        return otherApplicant.getName().equals(getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 otherApplicant.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 otherApplicant.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-10"},{"lineNumber":106,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 otherApplicant.getAge().equals(getAge())","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 otherApplicant.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 otherApplicant.getGender().equals(getGender())","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 otherApplicant.getTags().equals(getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"SethCKL"},"content":"        return Objects.hash(name, phone, email, age, address, gender, tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"SethCKL"},"content":"                .append(\"; Age: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"SethCKL"},"content":"                .append(getAge())","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"SethCKL"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"SethCKL"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"SethCKL"},"content":"                .append(getGender());","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":35,"-":106}},{"path":"src/main/java/seedu/address/model/applicant/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":" * Represents a Applicant\u0027s email in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":2,"-":69}},{"path":"src/main/java/seedu/address/model/applicant/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"SethCKL"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":" * Represents a Applicant\u0027s gender in the address book.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"public class Gender {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"            \"Gender should be exactly one character and only M or F (case sensitive)\";","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"    public static final String VALIDATION_REGEX \u003d \"M|F\";","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"    public final String value;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"        value \u003d gender;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"SethCKL"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"        return value;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"SethCKL"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"SethCKL"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"SethCKL"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"SethCKL":52,"likeabowx":1}},{"path":"src/main/java/seedu/address/model/applicant/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":" * Represents a Applicant\u0027s name in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":2,"-":57}},{"path":"src/main/java/seedu/address/model/applicant/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":" * Tests that a {@code Applicant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(applicant.getName().fullName, keyword));","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"SethCKL":5,"-":26}},{"path":"src/main/java/seedu/address/model/applicant/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":" * Represents a Applicant\u0027s phone number in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":2,"-":51}},{"path":"src/main/java/seedu/address/model/applicant/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":" * A applicant is considered unique by comparing using {@code Applicant#isSamePerson(Applicant)}. As such, adding and","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":" * updating of persons uses Applicant#isSamePerson(Applicant) for equality so as to ensure that the applicant being","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":" * added or updated is unique in terms of identity in the UniquePersonList. However, the removal of a applicant uses","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":" * Applicant#equals(Object) so as to ensure that the applicant with exactly the same fields will be removed.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":" * @see Applicant#isSamePerson(Applicant)","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"public class UniquePersonList implements Iterable\u003cApplicant\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"    private final ObservableList\u003cApplicant\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"    private final ObservableList\u003cApplicant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"     * Returns true if the list contains an equivalent applicant as the given argument.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"SethCKL"},"content":"    public boolean contains(Applicant toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"SethCKL"},"content":"     * Adds a applicant to the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"     * The applicant must not already exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"    public void add(Applicant toAdd) {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"     * Replaces the applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"SethCKL"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"    public void setPerson(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"SethCKL"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"SethCKL"},"content":"        if (!target.isSamePerson(editedApplicant) \u0026\u0026 contains(editedApplicant)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"SethCKL"},"content":"        internalList.set(index, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"SethCKL"},"content":"     * Removes the equivalent applicant from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"SethCKL"},"content":"     * The applicant must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"SethCKL"},"content":"    public void remove(Applicant toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"SethCKL"},"content":"     * Replaces the contents of this list with {@code applicants}.","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"SethCKL"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"    public void setPersons(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"SethCKL"},"content":"        requireAllNonNull(applicants);","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"SethCKL"},"content":"        if (!personsAreUnique(applicants)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"SethCKL"},"content":"        internalList.setAll(applicants);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"SethCKL"},"content":"    public ObservableList\u003cApplicant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"SethCKL"},"content":"    public Iterator\u003cApplicant\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"SethCKL"},"content":"     * Returns true if {@code applicants} contains only unique applicants.","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"SethCKL"},"content":"    private boolean personsAreUnique(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"SethCKL"},"content":"        for (int i \u003d 0; i \u003c applicants.size() - 1; i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"SethCKL"},"content":"            for (int j \u003d i + 1; j \u003c applicants.size(); j++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"SethCKL"},"content":"                if (applicants.get(i).isSamePerson(applicants.get(j))) {","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SethCKL":38,"-":99}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"SethCKL":1,"-":10}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"SethCKL"},"content":" * Signals that the operation is unable to find the specified applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"SethCKL":2,"-":4}},{"path":"src/main/java/seedu/address/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":" * Represents an Interview in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"public class Interview {","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"    //Data fields","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"    private final Applicant applicant;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"    private final Position position;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"    public Interview(Applicant applicant, LocalDateTime date, Position position) {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"        requireAllNonNull(applicant, date);","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"    public Applicant getApplicant() {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"        return applicant;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"goalfix"},"content":"        return date;","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"goalfix"},"content":"    public Position getPosition() {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"goalfix"},"content":"        return position;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"goalfix"},"content":"     * Returns true if both interviews have the same data fields.","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"goalfix"},"content":"     * This defines a stronger notion of equality between two interviews.","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"goalfix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"goalfix"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"goalfix"},"content":"            return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"goalfix"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"goalfix"},"content":"            return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"goalfix"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"goalfix"},"content":"        return otherInterview.getApplicant().equals(getApplicant())","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"goalfix"},"content":"                \u0026\u0026 otherInterview.getDate().equals(getDate())","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"goalfix"},"content":"                \u0026\u0026 otherInterview.getPosition().equals(getPosition());","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"goalfix"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"goalfix"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"goalfix"},"content":"        builder.append(applicant.getName())","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"goalfix"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"goalfix"},"content":"                .append(getDate())","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"goalfix"},"content":"                .append(\"; Position: \")","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"goalfix"},"content":"                .append(getPosition());","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"goalfix"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"goalfix":75}},{"path":"src/main/java/seedu/address/model/interview/UniqueInterviewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.exceptions.DuplicateInterviewException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":"public class UniqueInterviewList implements Iterable\u003cInterview\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"    private final ObservableList\u003cInterview\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"    private final ObservableList\u003cInterview\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"     * Returns true if the list contains an equivalent interview as the given argument.","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"    public boolean contains(Interview toCheck) {","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"     * Adds an interview to the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"     * The interview must not already exist in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"    public void add(Interview toAdd) {","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"goalfix"},"content":"     * Replaces the interview {@code target} in the list with {@code editedInterivew}.","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"goalfix"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"goalfix"},"content":"     * The interview {@code editedInterview} must not be the same as another existing interview in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"goalfix"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"goalfix"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"goalfix"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"goalfix"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"goalfix"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"goalfix"},"content":"        if (!target.equals(editedInterview) \u0026\u0026 contains(editedInterview)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"goalfix"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"goalfix"},"content":"        internalList.set(index, editedInterview);","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"goalfix"},"content":"     * Removes the equivalent interview from the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"goalfix"},"content":"     * The interview must exist in the list.","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"goalfix"},"content":"    public void remove(Interview toRemove) {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"goalfix"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"goalfix"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"goalfix"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"goalfix"},"content":"    public void setInterviews(UniqueInterviewList replacement) {","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"goalfix"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"goalfix"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"goalfix"},"content":"     * Replaces the contents of this list with {@code interview}.","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"goalfix"},"content":"     * {@code interview} must not contain duplicate interview.","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"goalfix"},"content":"    public void setInterviews(List\u003cInterview\u003e interview) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"goalfix"},"content":"        requireAllNonNull(interview);","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"goalfix"},"content":"        if (!interviewsAreUnique(interview)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"goalfix"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"goalfix"},"content":"        internalList.setAll(interview);","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"goalfix"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"goalfix"},"content":"    public ObservableList\u003cInterview\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"goalfix"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"goalfix"},"content":"    public Iterator\u003cInterview\u003e iterator() {","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"goalfix"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"goalfix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"goalfix"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"goalfix"},"content":"                || (other instanceof UniqueInterviewList // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"goalfix"},"content":"                \u0026\u0026 internalList.equals(((UniqueInterviewList) other).internalList));","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"goalfix"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"goalfix"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"goalfix"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"goalfix"},"content":"     * Returns true if {@code interviews} contains only unique interviews.","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"goalfix"},"content":"    private boolean interviewsAreUnique(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"goalfix"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"goalfix"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"goalfix"},"content":"                if (interviews.get(i).equals(interviews.get(j))) {","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"goalfix"},"content":"                    return false;","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"goalfix"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"goalfix"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"goalfix"},"content":"        return true;","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"goalfix":124}},{"path":"src/main/java/seedu/address/model/interview/exceptions/DuplicateInterviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"public class DuplicateInterviewException extends RuntimeException {","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"    public DuplicateInterviewException() {","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"        super(\"Operation would result in duplicate interviews\");","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"goalfix":7}},{"path":"src/main/java/seedu/address/model/interview/exceptions/InterviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":" * Signals that the operation is unable to find the specified Interview.","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"public class InterviewNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"goalfix":7}},{"path":"src/main/java/seedu/address/model/position/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":" * Represents a description of a {@code Position}. Description is a text that briefly describes the nature of the","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":" * position that is available for application.","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":" * Guarantees: immutable; description is valid as declared in {@link #isValidDescriptionText(String)}","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"public class Description {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description text should be alphanumeric\";","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"    /*","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"     * After the first non-whitespace character, all characters are valid, including newline character.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s][\\\\s\\\\S]*\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    public final String descriptionText;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"     * @param text A valid description text.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"    public Description(String text) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(text);","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        checkArgument(isValidDescriptionText(text), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        descriptionText \u003d text;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if a given string is a valid description text.","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"    public static boolean isValidDescriptionText(String test) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 descriptionText.equals(((Description) other).descriptionText)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"        return descriptionText.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"        return descriptionText;","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":58}},{"path":"src/main/java/seedu/address/model/position/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":" * Represent a Position in HireLah.","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"public class Position {","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"    // Identity fields","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    private final PositionName positionName;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"    private final Description description;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    // Data fields","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"    private final PositionOpenings positionOpenings;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    private final Set\u003cRequirement\u003e requirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"     * Every field must be present, not null and validated.","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"    public Position(PositionName positionName, Description description, PositionOpenings positionOpenings,","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"                    Set\u003cRequirement\u003e requirements) {","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        requireAllNonNull(positionName, description, positionOpenings, requirements);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        this.positionName \u003d positionName;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        this.positionOpenings \u003d positionOpenings;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"        this.requirements.addAll(requirements);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionName getPositionName() {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"        return positionName;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"        return description;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionOpenings getPositionOpenings() {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"        return positionOpenings;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns an immutable requirements set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"    public Set\u003cRequirement\u003e getRequirements() {","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"        return Collections.unmodifiableSet(requirements);","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if both positions have the same position name.","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"     * This defines a weaker notion of equality between two positions,","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"     * which allows for all positions to have a unique position name.","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean isSamePosition(Position otherPosition) {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"        if (otherPosition \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"        return otherPosition !\u003d null","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 otherPosition.positionName.equals(positionName);","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if both positions have the same identity and data fields.","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"YiHern-Lee"},"content":"     * This defines a stronger notion of equality between two positions.","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"YiHern-Lee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"YiHern-Lee"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"YiHern-Lee"},"content":"        if (!(other instanceof Position)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"YiHern-Lee"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"YiHern-Lee"},"content":"        Position otherPosition \u003d (Position) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"YiHern-Lee"},"content":"        return otherPosition.getPositionName().equals(getPositionName())","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 otherPosition.getDescription().equals(getDescription())","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 otherPosition.getPositionOpenings().equals(getPositionOpenings())","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 otherPosition.getRequirements().equals(getRequirements());","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"YiHern-Lee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"YiHern-Lee"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"YiHern-Lee"},"content":"        return Objects.hash(positionName, description, positionOpenings, requirements);","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"YiHern-Lee"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"YiHern-Lee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"YiHern-Lee"},"content":"        builder.append(getPositionName())","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"YiHern-Lee"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"YiHern-Lee"},"content":"                .append(getDescription())","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"YiHern-Lee"},"content":"                .append(\"; Openings: \")","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"YiHern-Lee"},"content":"                .append(getPositionOpenings());","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"YiHern-Lee"},"content":"        Set\u003cRequirement\u003e requirements \u003d getRequirements();","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"YiHern-Lee"},"content":"        if (!requirements.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"YiHern-Lee"},"content":"            builder.append(\"; Requirements: \");","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"YiHern-Lee"},"content":"            requirements.forEach(builder::append);","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"YiHern-Lee"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":112}},{"path":"src/main/java/seedu/address/model/position/PositionName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":" * Represents a Position\u0027s name in HireLah.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPositionName(String)}","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"public class PositionName {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"            \"Position name should start with an alphanumeric character, \"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"                    + \"can contain spaces and special characters, and it should not be blank\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"    /*","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"     * The first character of the position must not be a whitespace,","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?\u003d.*[\\\\p{Alnum}].*)([^\\\\s].*)\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    public final String positionName;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"     * Constructs a {@code PositionName}.","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"     * @param name A valid and unique position name.","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionName(String name) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        checkArgument(isValidPositionName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        positionName \u003d name;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if a given string is a valid position name.","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"     * @param test","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"     * @return","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"    public static boolean isValidPositionName(String test) {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"        return positionName;","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"                || (other instanceof PositionName // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 positionName.equals(((PositionName) other).positionName)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"        return positionName.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":63}},{"path":"src/main/java/seedu/address/model/position/PositionOpenings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":" * Represents the number of openings in a Position in HireLah.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":" * Guarantees: is non-negative","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"public class PositionOpenings {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"            \"Number of openings should be a valid non-negative integer.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"    /*","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"     * Number of openings must be a valid integer with 1 to 5 digits.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,5}\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    public final Integer numOfOpenings;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"     * Constructs a {@code PositionOpenings}","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"     * @param openings A valid non-negative integer that is between 1 and 3 digits.","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionOpenings(String openings) {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(openings);","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        checkArgument(isValidNumber(openings), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        numOfOpenings \u003d Integer.parseInt(openings);","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if a given string is a valid number for openings.","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"    public static boolean isValidNumber(String test) {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"        return numOfOpenings.toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"                || (other instanceof PositionOpenings // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 numOfOpenings.equals(((PositionOpenings) other).numOfOpenings)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"        return numOfOpenings.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":57}},{"path":"src/main/java/seedu/address/model/position/Requirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":" * Represents a Requirement in the address book. Requirement can denote a skill/experience that a candidate needs for","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":" * a job position.","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":" * Guarantees: immutable; requirement is valid as declared in {@link #isValidRequirementText(String)}","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"public class Requirement {","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"            \"Requirement text should be alphanumeric and contains 30 or less characters. If you need to fit more\"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"                    + \"information, consider breaking them up into different requirements.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    public static final int MAX_TEXT_LENGTH \u003d 30;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"            String.format(\"(?\u003d.*[\\\\p{Alnum}].*)([^\\\\s].*){1,%s}\", MAX_TEXT_LENGTH);","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"    public final String requirementText;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"     * Constructs a {@code Requirement}.","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"     * @param requirementText A valid requirement text.","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"    public Requirement(String requirementText) {","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(requirementText);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        checkArgument(isValidRequirementText(requirementText), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        this.requirementText \u003d requirementText;","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if a given string is a valid requirement text.","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"    public static boolean isValidRequirementText(String test) {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_TEXT_LENGTH;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"            || (other instanceof Requirement // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"            \u0026\u0026 requirementText.equals(((Requirement) other).requirementText)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"        return requirementText.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"     * Format requirement as text for viewing.","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"        return \u0027[\u0027 + requirementText + \u0027]\u0027;","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":60}},{"path":"src/main/java/seedu/address/model/position/UniquePositionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.exceptions.DuplicatePositionException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.exceptions.PositionNotFoundException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":" * A list of positions that enforces uniqueness between its elements and down not allow nulls.","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":" * A position is considered unique by comparing using {@code Position#isSamePosition(Position)}. As such, adding and","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":" * updating of positions uses Position#isSamePosition(Position) for equality so as to ensure that the Position being","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":" * added or updated is unique in terms of identity in the UniquePositionList. However, the removal of a position uses","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":" * Position#equals(Object) so as to ensure that the position with exactly the same fields will be removed.","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":" *","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":" *","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":" * @see Position#isSamePosition(Position)","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"public class UniquePositionList implements Iterable\u003cPosition\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"    private final ObservableList\u003cPosition\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"    private final ObservableList\u003cPosition\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if the list contains an equivalent position as the given argument.","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean contains(Position toCheck) {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePosition);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"     * Adds a position to the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"     * The position must not already exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"    public void add(Position toAdd) {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"     * Replaces the position {@code target} in the list with {@code editedPosition}.","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"     * The position identity of {@code editedPosition} must not be the same as another existing position in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"    public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"        requireAllNonNull(target, editedPosition);","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"            throw new PositionNotFoundException();","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"        if (!target.isSamePosition(editedPosition) \u0026\u0026 contains(editedPosition)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"YiHern-Lee"},"content":"        internalList.set(index, editedPosition);","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"YiHern-Lee"},"content":"     * Removes the equivalent position from the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"YiHern-Lee"},"content":"     * The position must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"YiHern-Lee"},"content":"    public void remove(Position toRemove) {","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"YiHern-Lee"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"YiHern-Lee"},"content":"            throw new PositionNotFoundException();","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"YiHern-Lee"},"content":"    public void setPositions(UniquePositionList replacement) {","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"YiHern-Lee"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"YiHern-Lee"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"YiHern-Lee"},"content":"     * Replaces the contents of this list with {@code positions}.","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"YiHern-Lee"},"content":"     * {@code positions} must not contain duplicate positions.","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"YiHern-Lee"},"content":"    public void setPositions(List\u003cPosition\u003e positions) {","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"YiHern-Lee"},"content":"        requireAllNonNull(positions);","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"YiHern-Lee"},"content":"        if (!positionsAreUnique(positions)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"YiHern-Lee"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"YiHern-Lee"},"content":"        internalList.setAll(positions);","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"YiHern-Lee"},"content":"    public ObservableList\u003cPosition\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"YiHern-Lee"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"YiHern-Lee"},"content":"    public Iterator\u003cPosition\u003e iterator() {","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"YiHern-Lee"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"YiHern-Lee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"YiHern-Lee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"YiHern-Lee"},"content":"            || (other instanceof UniquePositionList // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"YiHern-Lee"},"content":"                \u0026\u0026 internalList.equals(((UniquePositionList) other).internalList));","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"YiHern-Lee"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"YiHern-Lee"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"YiHern-Lee"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns true if {@code positions} contains only unique positions.","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"YiHern-Lee"},"content":"     * @param positions","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"YiHern-Lee"},"content":"     * @return","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"YiHern-Lee"},"content":"    private boolean positionsAreUnique(List\u003cPosition\u003e positions) {","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"YiHern-Lee"},"content":"        for (int i \u003d 0; i \u003c positions.size() - 1; i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"YiHern-Lee"},"content":"            for (int j \u003d i + 1; j \u003c positions.size(); j++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"YiHern-Lee"},"content":"                if (positions.get(i).isSamePosition(positions.get(j))) {","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"YiHern-Lee"},"content":"                    return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"YiHern-Lee"},"content":"                }","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"YiHern-Lee"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"YiHern-Lee"},"content":"        return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":139}},{"path":"src/main/java/seedu/address/model/position/exceptions/DuplicatePositionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position.exceptions;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":" * Signals that the operation will result in duplicate Positions (Positions are considered duplicates if they have the","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":" * same identity).","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"public class DuplicatePositionException extends RuntimeException {","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"    public DuplicatePositionException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"        super(\"Operation would result in duplicate positions\");","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":11}},{"path":"src/main/java/seedu/address/model/position/exceptions/PositionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position.exceptions;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"public class PositionNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionNotFoundException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"        super(\"Position is not found in the position list\");","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Age;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionName;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionOpenings;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Requirement;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"    public static Applicant[] getSamplePersons() {","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"        return new Applicant[]{","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"                    new Age(\"21\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Gender(\"M\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"                    new Age(\"22\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Gender(\"F\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"            new Applicant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"                    new Age(\"23\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Gender(\"F\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"            new Applicant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"                    new Age(\"24\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Gender(\"M\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"            new Applicant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"                    new Age(\"25\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Gender(\"M\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"SethCKL"},"content":"            new Applicant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"SethCKL"},"content":"                    new Age(\"26\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Gender(\"M\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"    public static Position[] getSamplePositions() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"        return new Position[]{","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"            new Position(new PositionName(\"Senior Software Developer\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"                    new Description(\"The highest paying job in the company\\nMore than 5 years experience\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"                    new PositionOpenings(\"3\"), getRequirementSet(\"Java\", \"C++\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"            new Position(new PositionName(\"Useless IT Intern\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"                    new Description(\"Need to hire to fill the quota\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"                    new PositionOpenings(\"1\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"                    getRequirementSet(\"Source Academy\", \"C\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"            new Position(new PositionName(\"Janitor\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"                    new Description(\"Arguably the most important job\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"                    new PositionOpenings(\"0\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"                    getRequirementSet(\"Sweep Floor\", \"Wipe Window\", \"Wash Toilet\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"YiHern-Lee"},"content":"            new Position(new PositionName(\"Admin Officer\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"YiHern-Lee"},"content":"                    new Description(\"Degree or Postgraduate holder with Major in Information Technology, \"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"YiHern-Lee"},"content":"                            + \"Computer Science, or other similar focus, and a cumulative GPA of 3.5 and above\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"YiHern-Lee"},"content":"                    new PositionOpenings(\"1\"), getRequirementSet(\"Hardworking\", \"Good with people\"))","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"YiHern-Lee"},"content":"        };","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"goalfix"},"content":"    public static Interview[] getSampleInterviews() {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"goalfix"},"content":"        Applicant[] samplePersons \u003d getSamplePersons();","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"goalfix"},"content":"        Position[] samplePositions \u003d getSamplePositions();","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"goalfix"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"goalfix"},"content":"        return new Interview[]{","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"goalfix"},"content":"            new Interview(samplePersons[0],","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"goalfix"},"content":"                    LocalDateTime.parse(\"2021-01-01 12:00\", formatter),","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"goalfix"},"content":"                    samplePositions[0]),","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"goalfix"},"content":"            new Interview(samplePersons[1],","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"goalfix"},"content":"                    LocalDateTime.parse(\"2021-05-05 05:00\", formatter),","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"goalfix"},"content":"                    samplePositions[1]),","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"goalfix"},"content":"            new Interview(samplePersons[2],","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"goalfix"},"content":"                    LocalDateTime.parse(\"2021-09-09 18:00\", formatter),","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"goalfix"},"content":"                    samplePositions[2]),","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"goalfix"},"content":"            new Interview(samplePersons[3],","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"goalfix"},"content":"                    LocalDateTime.parse(\"2021-12-20 19:00\", formatter),","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"goalfix"},"content":"                    samplePositions[3])","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":95,"author":{"gitId":"SethCKL"},"content":"        for (Applicant sampleApplicant : getSamplePersons()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"SethCKL"},"content":"            sampleAb.addPerson(sampleApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":98,"author":{"gitId":"YiHern-Lee"},"content":"        for (Position samplePosition : getSamplePositions()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"YiHern-Lee"},"content":"            sampleAb.addPosition(samplePosition);","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"goalfix"},"content":"        for (Interview sampleInterview : getSampleInterviews()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"goalfix"},"content":"            sampleAb.addInterview(sampleInterview);","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":116,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"YiHern-Lee"},"content":"     * Returns a requirement set containing the list of strings given.","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"YiHern-Lee"},"content":"    public static Set\u003cRequirement\u003e getRequirementSet(String... strings) {","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"YiHern-Lee"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"YiHern-Lee"},"content":"                .map(Requirement::new)","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"YiHern-Lee"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"goalfix":22,"SethCKL":23,"YiHern-Lee":36,"-":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Age;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":" * Jackson-friendly version of {@link Applicant}.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"    private final String age;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"SethCKL"},"content":"    private final String gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given applicant details.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"age\") String age,","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"SethCKL"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"     * Converts a given {@code Applicant} into this class for Jackson use.","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"SethCKL"},"content":"    public JsonAdaptedPerson(Applicant source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"SethCKL"},"content":"        age \u003d source.getAge().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"SethCKL"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"SethCKL"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Applicant} object.","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"SethCKL"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"SethCKL"},"content":"    public Applicant toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"SethCKL"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"SethCKL"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Age.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"SethCKL"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"SethCKL"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"SethCKL"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"SethCKL"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"SethCKL"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"SethCKL"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"SethCKL"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"SethCKL"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"SethCKL"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"SethCKL"},"content":"        return new Applicant(modelName, modelPhone, modelEmail, modelAge, modelAddress, modelGender, modelTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SethCKL":41,"-":94}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate applicant(s).\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"            Applicant applicant \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"            if (addressBook.hasPerson(applicant)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"SethCKL"},"content":"            addressBook.addPerson(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SethCKL":5,"-":55}},{"path":"src/main/java/seedu/address/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":" * An UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"    public final Applicant applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"    private HBox applicantCardPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"likeabowx"},"content":"    private Label gender;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"    private Label age;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"     * Creates a {@code ApplicantCard} with the given {@code Applicant} and index to display.","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"likeabowx"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"SethCKL"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"SethCKL"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"        phone.setText(applicant.getPhone().value);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"SethCKL"},"content":"        address.setText(applicant.getAddress().value);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"        email.setText(applicant.getEmail().value);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"likeabowx"},"content":"        gender.setText(applicant.getGender().value.equals(\"M\") ? \"Male\" : \"Female\");","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"likeabowx"},"content":"        age.setText(applicant.getAge().value + \" years old\");","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"SethCKL"},"content":"        applicant.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"likeabowx"},"content":"        if (!(other instanceof ApplicantCard)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"likeabowx"},"content":"        ApplicantCard card \u003d (ApplicantCard) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"SethCKL"},"content":"                \u0026\u0026 applicant.equals(card.applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SethCKL":10,"likeabowx":13,"-":60}},{"path":"src/main/java/seedu/address/ui/ApplicantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"public class ApplicantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"    private static final String FXML \u003d \"ApplicantListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicantListPanel.class);","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"    private ListView\u003cApplicant\u003e applicantListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"    public ApplicantListPanel(ObservableList\u003cApplicant\u003e applicantList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"        applicantListView.setItems(applicantList);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"        applicantListView.setCellFactory(listView -\u003e new ApplicantListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Applicant} using a {@code ApplicantCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"    class ApplicantListViewCell extends ListCell\u003cApplicant\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"        protected void updateItem(Applicant applicant, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"            super.updateItem(applicant, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"            if (empty || applicant \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"likeabowx"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"                setGraphic(new ApplicantCard(applicant, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":48}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103-w17-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"    private static final String USERGUIDE_MESSAGE \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"            \"Refer to the HireLah user guide for more information:\\n\" + USERGUIDE_URL;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"    private Label ugMessage;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"khoahre123"},"content":"    private String helpDescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"khoahre123"},"content":"    public HelpWindow(Stage root, String helpDescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"khoahre123"},"content":"        this.helpDescription \u003d helpDescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"khoahre123"},"content":"        helpMessage.setText(this.helpDescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"        ugMessage.setText(USERGUIDE_MESSAGE);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"khoahre123"},"content":"    public HelpWindow(String helpDescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"khoahre123"},"content":"        this(new Stage(), helpDescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"khoahre123"},"content":"    public void setHelpDescription(String helpDescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"khoahre123"},"content":"        this.helpDescription \u003d helpDescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"khoahre123"},"content":"        helpMessage.setText(this.helpDescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"likeabowx":7,"-":96,"khoahre123":13}},{"path":"src/main/java/seedu/address/ui/InterviewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":" * An UI component that displays information of a {@code Interview}.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"public class InterviewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"    private static final String FXML \u003d \"InterviewListCard.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEEE dd MMM yyyy, HH:mma\");","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"    public final Interview interview;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"    private Label id;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"    private Label date;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"    private Label role;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"    private Label name;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"    private Label interviewphone;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"    private Label interviewemail;","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"     * Creates a {@code InterviewCard} with the given {@code Interview} and index to display.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"    public InterviewCard(Interview interview, int displayedIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"likeabowx"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"likeabowx"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"likeabowx"},"content":"        date.setText(interview.getDate().format(formatter));","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"likeabowx"},"content":"        role.setText(interview.getPosition().getPositionName().positionName);","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"        Applicant applicant \u003d interview.getApplicant();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"likeabowx"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"likeabowx"},"content":"        interviewphone.setText(applicant.getPhone().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"likeabowx"},"content":"        interviewemail.setText(applicant.getEmail().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"likeabowx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"likeabowx"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"likeabowx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"likeabowx"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"likeabowx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"likeabowx"},"content":"        if (!(other instanceof InterviewCard)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"likeabowx"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"likeabowx"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"likeabowx"},"content":"        InterviewCard card \u003d (InterviewCard) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"likeabowx"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"likeabowx"},"content":"                \u0026\u0026 interview.equals(card.interview);","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":79}},{"path":"src/main/java/seedu/address/ui/InterviewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":" * Panel containing the list of interviews.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"public class InterviewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"    private static final String FXML \u003d \"InterviewListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PositionListPanel.class);","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"    private ListView\u003cInterview\u003e interviewListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"    public InterviewListPanel(ObservableList\u003cInterview\u003e interviewList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"        interviewListView.setItems(interviewList);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"        interviewListView.setCellFactory(listView -\u003e new InterviewListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Position} using a {@code PositionCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"    class InterviewListViewCell extends ListCell\u003cInterview\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"        protected void updateItem(Interview interview, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"            super.updateItem(interview, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"            if (empty || interview \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"likeabowx"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"                setGraphic(new InterviewCard(interview, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"goalfix":2,"likeabowx":47}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.SingleSelectionModel;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.DataType;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.HelpDescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"    private ApplicantListPanel applicantListPanel;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"    private PositionListPanel positionListPanel;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"    private InterviewListPanel interviewListPanel;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"likeabowx"},"content":"    private StackPane positionListPanelPlaceholder;","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"likeabowx"},"content":"    private StackPane interviewListPanelPlaceholder;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"likeabowx"},"content":"    private TabPane dataTypeTabs;","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"khoahre123"},"content":"        helpWindow \u003d new HelpWindow(HelpDescription.OVERALL_HELPING_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"YiHern-Lee"},"content":"        applicantListPanel \u003d new ApplicantListPanel(logic.getFilteredApplicantList());","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"likeabowx"},"content":"        personListPanelPlaceholder.getChildren().add(applicantListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"YiHern-Lee"},"content":"        positionListPanel \u003d new PositionListPanel(logic.getFilteredPositionList());","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"likeabowx"},"content":"        positionListPanelPlaceholder.getChildren().add(positionListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"YiHern-Lee"},"content":"        interviewListPanel \u003d new InterviewListPanel(logic.getFilteredInterviewList());","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"likeabowx"},"content":"        interviewListPanelPlaceholder.getChildren().add(interviewListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"khoahre123"},"content":"     * Handle help command based on command","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"khoahre123"},"content":"    private void handleHelp() {","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"khoahre123"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"khoahre123"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"khoahre123"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"khoahre123"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"khoahre123"},"content":"    public void handleHelpTab() {","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"khoahre123"},"content":"        helpWindow.setHelpDescription(HelpDescription.OVERALL_HELPING_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"khoahre123"},"content":"        handleHelp();","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":196,"author":{"gitId":"likeabowx"},"content":"    public ApplicantListPanel getPersonListPanel() {","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"likeabowx"},"content":"        return applicantListPanel;","lastModifiedDate":"2022-03-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"khoahre123"},"content":"                resultDisplay.setFeedbackToUser(\"Display help\");","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"khoahre123"},"content":"                helpWindow.setHelpDescription(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"likeabowx"},"content":"            SingleSelectionModel\u003cTab\u003e selectionModel \u003d dataTypeTabs.getSelectionModel();","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"likeabowx"},"content":"            if (commandResult.getDataType() \u003d\u003d DataType.APPLICANT) {","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"likeabowx"},"content":"                selectionModel.select(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"likeabowx"},"content":"            } else if (commandResult.getDataType() \u003d\u003d DataType.POSITION) {","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"likeabowx"},"content":"                selectionModel.select(1);","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"likeabowx"},"content":"            } else if (commandResult.getDataType() \u003d\u003d DataType.INTERVIEW) {","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"likeabowx"},"content":"                selectionModel.select(2);","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"likeabowx"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"likeabowx":31,"YiHern-Lee":3,"-":188,"khoahre123":15}},{"path":"src/main/java/seedu/address/ui/PositionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":" * An UI component that displays information of a {@code Position}.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"public class PositionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"    private static final String FXML \u003d \"PositionListCard.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"    public final Position position;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"    private HBox positionCardPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"    private Label name;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"    private Label id;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"    private Label description;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"    private Label openings;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"    private FlowPane requirements;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"     * Creates a {@code PositionCard} with the given {@code Position} and index to display.","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"    public PositionCard(Position position, int displayedIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"likeabowx"},"content":"        name.setText(position.getPositionName().positionName);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"likeabowx"},"content":"        description.setText(position.getDescription().descriptionText);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"likeabowx"},"content":"        int numofOpenings \u003d position.getPositionOpenings().numOfOpenings;","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"likeabowx"},"content":"        openings.setText(numofOpenings + (numofOpenings \u003c\u003d 1 ? \" opening\" : \" openings\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"likeabowx"},"content":"        if (numofOpenings \u003d\u003d 0) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"            openings.setStyle(\"-fx-text-fill: #ffa4a4\");","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"likeabowx"},"content":"        position.getRequirements().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"likeabowx"},"content":"                .sorted(Comparator.comparing(req -\u003e req.requirementText))","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"likeabowx"},"content":"                .forEach(req -\u003e requirements.getChildren().add(new Label(req.requirementText)));","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"likeabowx"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"likeabowx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"likeabowx"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"likeabowx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"likeabowx"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"likeabowx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"likeabowx"},"content":"        if (!(other instanceof PositionCard)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"likeabowx"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"likeabowx"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"likeabowx"},"content":"        PositionCard card \u003d (PositionCard) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"likeabowx"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"likeabowx"},"content":"                \u0026\u0026 position.equals(card.position);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":81}},{"path":"src/main/java/seedu/address/ui/PositionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":" * Panel containing the list of positions.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"public class PositionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"    private static final String FXML \u003d \"PositionListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PositionListPanel.class);","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"    private ListView\u003cPosition\u003e positionListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"     * Creates a {@code PositionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"    public PositionListPanel(ObservableList\u003cPosition\u003e positionList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"        positionListView.setItems(positionList);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"        positionListView.setCellFactory(listView -\u003e new PositionListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Position} using a {@code PositionCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"    class PositionListViewCell extends ListCell\u003cPosition\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"        protected void updateItem(Position position, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"            super.updateItem(position, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"likeabowx"},"content":"            if (empty || position \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"                setGraphic(new PositionCard(position, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"goalfix":1,"likeabowx":48,"YiHern-Lee":1}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/hirelah_icon.png\";","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"likeabowx":1,"-":87}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"\u003cHBox id\u003d\"applicantCardPane\" fx:id\u003d\"applicantCardPane\" styleClass\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"        \u003cInsets bottom\u003d\"10\" left\u003d\"15\" right\u003d\"5\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"20\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"               \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"               \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"likeabowx"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"likeabowx":15,"-":31}},{"path":"src/main/resources/view/ApplicantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"  \u003cListView fx:id\u003d\"applicantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"likeabowx":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"* {","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"    -fx-font-family: \u0027sans-serif\u0027;","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"likeabowx"},"content":".cell_medium_label {","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"likeabowx"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"likeabowx"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"likeabowx"},"content":".currently_displaying {","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"likeabowx"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: #b6b6b6;","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"likeabowx"},"content":".currently_displaying_pane {","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"likeabowx"},"content":"    -fx-padding: 0 0 10 0;","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"likeabowx"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"likeabowx"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"likeabowx"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2022-03-14"},{"lineNumber":306,"author":{"gitId":"likeabowx"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2022-03-14"},{"lineNumber":307,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":308,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":309,"author":{"gitId":"likeabowx"},"content":".tab-pane {","lastModifiedDate":"2022-03-14"},{"lineNumber":310,"author":{"gitId":"likeabowx"},"content":"    -fx-tab-min-width: 95px;","lastModifiedDate":"2022-03-14"},{"lineNumber":311,"author":{"gitId":"likeabowx"},"content":"    -fx-tab-min-height: 25px;","lastModifiedDate":"2022-03-14"},{"lineNumber":312,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":313,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":314,"author":{"gitId":"likeabowx"},"content":".tab-pane .tab {","lastModifiedDate":"2022-03-14"},{"lineNumber":315,"author":{"gitId":"likeabowx"},"content":"    -fx-background-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2022-03-14"},{"lineNumber":316,"author":{"gitId":"likeabowx"},"content":"    -fx-background-radius: 8 8 0 0;","lastModifiedDate":"2022-03-14"},{"lineNumber":317,"author":{"gitId":"likeabowx"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2022-03-14"},{"lineNumber":318,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":319,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":320,"author":{"gitId":"likeabowx"},"content":".tab-pane .tab:selected {","lastModifiedDate":"2022-03-14"},{"lineNumber":321,"author":{"gitId":"likeabowx"},"content":"    -fx-background-color: derive(#1d1d1d, 40%);","lastModifiedDate":"2022-03-14"},{"lineNumber":322,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":323,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":324,"author":{"gitId":"likeabowx"},"content":".tab-label {","lastModifiedDate":"2022-03-14"},{"lineNumber":325,"author":{"gitId":"likeabowx"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"likeabowx"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-14"},{"lineNumber":327,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: derive(#1d1d1d, 90%);","lastModifiedDate":"2022-03-14"},{"lineNumber":328,"author":{"gitId":"likeabowx"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-14"},{"lineNumber":329,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":330,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":331,"author":{"gitId":"likeabowx"},"content":".tab:selected .tab-label {","lastModifiedDate":"2022-03-14"},{"lineNumber":332,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-14"},{"lineNumber":333,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":334,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":361,"author":{"gitId":"likeabowx"},"content":".cardPane {","lastModifiedDate":"2022-03-14"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \"sans-serif\";","lastModifiedDate":"2022-03-12"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":405,"author":{"gitId":"likeabowx"},"content":"#requirements {","lastModifiedDate":"2022-03-14"},{"lineNumber":406,"author":{"gitId":"likeabowx"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-14"},{"lineNumber":407,"author":{"gitId":"likeabowx"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-14"},{"lineNumber":408,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":409,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":410,"author":{"gitId":"likeabowx"},"content":"#requirements .label {","lastModifiedDate":"2022-03-14"},{"lineNumber":411,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-14"},{"lineNumber":412,"author":{"gitId":"likeabowx"},"content":"    -fx-background-color: #3e914f;","lastModifiedDate":"2022-03-14"},{"lineNumber":413,"author":{"gitId":"likeabowx"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-14"},{"lineNumber":414,"author":{"gitId":"likeabowx"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-14"},{"lineNumber":415,"author":{"gitId":"likeabowx"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-14"},{"lineNumber":416,"author":{"gitId":"likeabowx"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-14"},{"lineNumber":417,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":418,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":419,"author":{"gitId":"likeabowx"},"content":"#openings {","lastModifiedDate":"2022-03-14"},{"lineNumber":420,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: #d0d0d0;","lastModifiedDate":"2022-03-14"},{"lineNumber":421,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":422,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":423,"author":{"gitId":"likeabowx"},"content":"#role {","lastModifiedDate":"2022-03-14"},{"lineNumber":424,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-14"},{"lineNumber":425,"author":{"gitId":"likeabowx"},"content":"    -fx-background-color: #9f8331;","lastModifiedDate":"2022-03-14"},{"lineNumber":426,"author":{"gitId":"likeabowx"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-14"},{"lineNumber":427,"author":{"gitId":"likeabowx"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-14"},{"lineNumber":428,"author":{"gitId":"likeabowx"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2022-03-14"},{"lineNumber":429,"author":{"gitId":"likeabowx"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-03-14"},{"lineNumber":430,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":431,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":432,"author":{"gitId":"likeabowx"},"content":"#interview_phone {","lastModifiedDate":"2022-03-14"},{"lineNumber":433,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: #d0d0d0;","lastModifiedDate":"2022-03-14"},{"lineNumber":434,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":435,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":436,"author":{"gitId":"likeabowx"},"content":"#interview_email {","lastModifiedDate":"2022-03-14"},{"lineNumber":437,"author":{"gitId":"likeabowx"},"content":"    -fx-text-fill: #d0d0d0;","lastModifiedDate":"2022-03-14"},{"lineNumber":438,"author":{"gitId":"likeabowx"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"goalfix":13,"likeabowx":87,"-":338}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"* {","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"    -fx-font-family: \u0027sans-serif\u0027;","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"#copyButton, #helpMessage, #ugMessage {","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"goalfix":4,"likeabowx":1,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"      \u003cVBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"15\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" prefWidth\u003d\"520\" style\u003d\"-fx-wrap-text: true\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"            \u003cBorderPane\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"                \u003cleft\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"                    \u003cLabel fx:id\u003d\"ugMessage\" BorderPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"                \u003c/left\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"                \u003cright\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" BorderPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"                \u003c/right\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"            \u003c/BorderPane\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"likeabowx":20,"-":19}},{"path":"src/main/resources/view/InterviewListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"\u003cHBox id\u003d\"interviewCardPane\" fx:id\u003d\"interviewCardPane\" styleClass\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"60\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"        \u003cInsets bottom\u003d\"10\" left\u003d\"15\" right\u003d\"5\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"      \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$name\"/\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"interviewphone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"interviewemail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":39}},{"path":"src/main/resources/view/InterviewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"  \u003cListView fx:id\u003d\"interviewListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"HireLah\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"    \u003cImage url\u003d\"@/images/hirelah_icon.png\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"khoahre123"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelpTab\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"likeabowx"},"content":"        \u003cStackPane minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"likeabowx"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"likeabowx"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"           \u003cTabPane fx:id\u003d\"dataTypeTabs\" minWidth\u003d\"340\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"likeabowx"},"content":"             \u003ctabs\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"likeabowx"},"content":"               \u003cTab fx:id\u003d\"applicantsTab\" text\u003d\"Applicants\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"likeabowx"},"content":"                    \u003ccontent\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"likeabowx"},"content":"                    \u003c/content\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"likeabowx"},"content":"               \u003c/Tab\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"likeabowx"},"content":"               \u003cTab fx:id\u003d\"positionsTab\" text\u003d\"Positions\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"likeabowx"},"content":"                 \u003ccontent\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"likeabowx"},"content":"                     \u003cStackPane fx:id\u003d\"positionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"likeabowx"},"content":"                 \u003c/content\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"likeabowx"},"content":"               \u003c/Tab\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"likeabowx"},"content":"                 \u003cTab fx:id\u003d\"interviewsTab\" text\u003d\"Interviews\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"likeabowx"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"likeabowx"},"content":"                         \u003cStackPane fx:id\u003d\"interviewListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"likeabowx"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"likeabowx"},"content":"                 \u003c/Tab\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"likeabowx"},"content":"             \u003c/tabs\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"likeabowx"},"content":"           \u003c/TabPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"likeabowx"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"likeabowx"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"likeabowx":36,"-":47,"khoahre123":1}},{"path":"src/main/resources/view/PositionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"likeabowx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"\u003cHBox id\u003d\"positionCardPane\" fx:id\u003d\"positionCardPane\" styleClass\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"        \u003cInsets bottom\u003d\"10\" left\u003d\"15\" right\u003d\"5\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"likeabowx"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"likeabowx"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"likeabowx"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"      \u003cFlowPane fx:id\u003d\"requirements\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$description\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"        \u003cLabel fx:id\u003d\"openings\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$openings\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"likeabowx"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"likeabowx"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":39}},{"path":"src/main/resources/view/PositionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"likeabowx"},"content":"  \u003cListView fx:id\u003d\"positionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"likeabowx":1,"-":7}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"likeabowx"},"content":"        assertNotNull(AppUtil.getImage(\"/images/hirelah_icon.png\"));","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"likeabowx":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FLAG_APPLICANT;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.list.ListApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"likeabowx"},"content":"        String deleteCommand \u003d \"delete -a 9\";","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"likeabowx"},"content":"        String listCommand \u003d ListApplicantCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"likeabowx"},"content":"        assertCommandSuccess(listCommand, ListApplicantCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"likeabowx"},"content":"        String addCommand \u003d AddApplicantCommand.COMMAND_WORD + FLAG_APPLICANT + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"SethCKL"},"content":"                + EMAIL_DESC_AMY + AGE_DESC_AMY + ADDRESS_DESC_AMY + GENDER_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"SethCKL"},"content":"        Applicant expectedApplicant \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"SethCKL"},"content":"        expectedModel.addPerson(expectedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"SethCKL":24,"likeabowx":7,"-":147}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":" * Contains integration tests (interaction with the Model) for {@code AddApplicantCommand}.","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"public class AddApplicantCommandIntegrationTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"        Applicant validApplicant \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"        expectedModel.addPerson(validApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"likeabowx"},"content":"        assertCommandSuccess(new AddApplicantCommand(validApplicant), model,","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"                String.format(AddApplicantCommand.MESSAGE_SUCCESS, validApplicant), expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"        Applicant applicantInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"        assertCommandFailure(new AddApplicantCommand(applicantInList), model,","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"likeabowx"},"content":"                AddApplicantCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"SethCKL":4,"likeabowx":8,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"public class AddApplicantCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddApplicantCommand(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"        Applicant validApplicant \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"        CommandResult commandResult \u003d new AddApplicantCommand(validApplicant).execute(modelStub);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"        assertEquals(String.format(AddApplicantCommand.MESSAGE_SUCCESS, validApplicant),","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"        assertEquals(Arrays.asList(validApplicant), modelStub.personsAdded);","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"        Applicant validApplicant \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"likeabowx"},"content":"        AddApplicantCommand addApplicantCommand \u003d new AddApplicantCommand(validApplicant);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"likeabowx"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"likeabowx"},"content":"                AddApplicantCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addApplicantCommand.execute(modelStub));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"SethCKL"},"content":"        Applicant alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"SethCKL"},"content":"        Applicant bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"likeabowx"},"content":"        AddApplicantCommand addAliceCommand \u003d new AddApplicantCommand(alice);","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"likeabowx"},"content":"        AddApplicantCommand addBobCommand \u003d new AddApplicantCommand(bob);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"likeabowx"},"content":"        AddApplicantCommand addAliceCommandCopy \u003d new AddApplicantCommand(alice);","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"SethCKL"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"SethCKL"},"content":"        public void addPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"SethCKL"},"content":"        public boolean hasPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"SethCKL"},"content":"        public void deletePerson(Applicant target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"SethCKL"},"content":"        public void setPerson(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"YiHern-Lee"},"content":"        public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"goalfix"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"goalfix"},"content":"        public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"goalfix"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"goalfix"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"goalfix"},"content":"        public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"goalfix"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":159,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":160,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"SethCKL"},"content":"        public void updateFilteredPersonList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":166,"author":{"gitId":"goalfix"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":167,"author":{"gitId":"goalfix"},"content":"        public void addInterview(Interview interview) {","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"goalfix"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"goalfix"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"goalfix"},"content":"        public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"goalfix"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"YiHern-Lee"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"YiHern-Lee"},"content":"        public void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"YiHern-Lee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"YiHern-Lee"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"YiHern-Lee"},"content":"        public void deletePosition(Position target) {","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"YiHern-Lee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"YiHern-Lee"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"YiHern-Lee"},"content":"        public boolean hasPosition(Position position) {","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"YiHern-Lee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"YiHern-Lee"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"YiHern-Lee"},"content":"        public void addPosition(Position position) {","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"YiHern-Lee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"YiHern-Lee"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"goalfix"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"goalfix"},"content":"        public boolean hasInterview(Interview interview) {","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"goalfix"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"SethCKL"},"content":"     * A Model stub that contains a single applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"SethCKL"},"content":"        private final Applicant applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"SethCKL"},"content":"        ModelStubWithPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"SethCKL"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"SethCKL"},"content":"            this.applicant \u003d applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"SethCKL"},"content":"        public boolean hasPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"SethCKL"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"SethCKL"},"content":"            return this.applicant.isSamePerson(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"SethCKL"},"content":"     * A Model stub that always accept the applicant being added.","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"SethCKL"},"content":"        final ArrayList\u003cApplicant\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"SethCKL"},"content":"        public boolean hasPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"SethCKL"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"SethCKL"},"content":"            return personsAdded.stream().anyMatch(applicant::isSamePerson);","lastModifiedDate":"2022-03-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"SethCKL"},"content":"        public void addPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":235,"author":{"gitId":"SethCKL"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":236,"author":{"gitId":"SethCKL"},"content":"            personsAdded.add(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"SethCKL":29,"goalfix":28,"likeabowx":12,"YiHern-Lee":21,"-":155}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"likeabowx"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", null);","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", null)));","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", null, false, false)));","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"likeabowx"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", null)));","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", null, true, false)));","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", null, false, true)));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", null);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"likeabowx"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\", null).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\", null).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"likeabowx"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", null, true, false).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"likeabowx"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", null, false, true).hashCode());","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"likeabowx":11,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"    public static final String VALID_AGE_AMY \u003d \"77\";","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"    public static final String VALID_AGE_BOB \u003d \"88\";","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_POSITION_NAME_JR_SWE \u003d \"Junior Software Engineer\";","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_POSITION_NAME_SR_FE_SWE \u003d \"Senior Front-end Software Engineer\";","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_DESCRIPTION_NAME_JR_SWE \u003d \"Flexible role. Must be hardworking.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_DESCRIPTION_NAME_SR_FE_SWE \u003d \"In-charged of managing an entire frontend feature.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_POSITION_OPENINGS_JR_SWE \u003d \"6\";","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_POSITION_OPENINGS_SR_FE_SWE \u003d \"2\";","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_REQUIREMENT_EXPERIENCE \u003d \"\u003e\u003d5 years of experience\";","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String VALID_REQUIREMENT_SKILL \u003d \"Expert in JavaScript\";","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"SethCKL"},"content":"    public static final String AGE_DESC_AMY \u003d \" \" + PREFIX_AGE + VALID_AGE_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"SethCKL"},"content":"    public static final String AGE_DESC_BOB \u003d \" \" + PREFIX_AGE + VALID_AGE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"SethCKL"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"SethCKL"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"SethCKL"},"content":"    public static final String INVALID_AGE_DESC \u003d \" \" + PREFIX_AGE + \"twenty\"; // characters not allowed in age","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"SethCKL"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"T\"; // \u0027T is not a valid gender\u0027","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"likeabowx"},"content":"    public static final String FLAG_APPLICANT \u003d \" -a \";","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"likeabowx"},"content":"    public static final String FLAG_POSITION \u003d \" -p \";","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"likeabowx"},"content":"    public static final String FLAG_INTERVIEW \u003d \" -i \";","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"likeabowx"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"likeabowx"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, command.getCommandDataType());","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"SethCKL"},"content":"     * - the address book, filtered applicant list and selected applicant in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"YiHern-Lee"},"content":"        List\u003cApplicant\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredApplicantList());","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"YiHern-Lee"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredApplicantList());","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"SethCKL"},"content":"     * Updates {@code model}\u0027s filtered list to show only the applicant at the given {@code targetIndex} in the","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredApplicantList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"YiHern-Lee"},"content":"        Applicant applicant \u003d model.getFilteredApplicantList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"SethCKL"},"content":"        final String[] splitName \u003d applicant.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"YiHern-Lee"},"content":"        assertEquals(1, model.getFilteredApplicantList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"SethCKL":17,"likeabowx":5,"YiHern-Lee":14,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/DeleteApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.delete.DeleteApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"likeabowx"},"content":" * {@code DeleteApplicantCommand}.","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"public class DeleteApplicantCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand deleteApplicantCommand \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"likeabowx"},"content":"        String expectedMessage \u003d String.format(DeleteApplicantCommand.MESSAGE_DELETE_PERSON_SUCCESS, applicantToDelete);","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"        expectedModel.deletePerson(applicantToDelete);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"        assertCommandSuccess(deleteApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand deleteApplicantCommand \u003d new DeleteApplicantCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"likeabowx"},"content":"        assertCommandFailure(deleteApplicantCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand deleteApplicantCommand \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"likeabowx"},"content":"        String expectedMessage \u003d String.format(DeleteApplicantCommand.MESSAGE_DELETE_PERSON_SUCCESS, applicantToDelete);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"SethCKL"},"content":"        expectedModel.deletePerson(applicantToDelete);","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"likeabowx"},"content":"        assertCommandSuccess(deleteApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand deleteApplicantCommand \u003d new DeleteApplicantCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"likeabowx"},"content":"        assertCommandFailure(deleteApplicantCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand deleteFirstCommand \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand deleteSecondCommand \u003d new DeleteApplicantCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand deleteFirstCommandCopy \u003d new DeleteApplicantCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(model.getFilteredApplicantList().isEmpty());","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"SethCKL":4,"likeabowx":16,"YiHern-Lee":4,"-":86}},{"path":"src/test/java/seedu/address/logic/commands/DetailHelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khoahre123"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"khoahre123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"khoahre123"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"khoahre123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.DetailHelpCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.HelpDescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"khoahre123"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"khoahre123"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"khoahre123"},"content":"public class DetailHelpCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"khoahre123"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"khoahre123"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"khoahre123"},"content":"    public void execute_addHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.ADD_COMMAND_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new DetailHelpCommand(\"add\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"khoahre123"},"content":"    public void execute_deleteHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.DELETE_COMMAND_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new DetailHelpCommand(\"delete\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"khoahre123"},"content":"    public void execute_editHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.EDIT_COMMAND_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new DetailHelpCommand(\"edit\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"khoahre123"},"content":"    public void execute_listHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.LIST_COMMAND_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new DetailHelpCommand(\"list\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"khoahre123"},"content":"    public void execute_filterHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.FILTER_COMMAND_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new DetailHelpCommand(\"filter\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"khoahre123"},"content":"    public void execute_sortHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.SORT_COMMAND_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new DetailHelpCommand(\"sort\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"khoahre123"},"content":"    public void execute_exitHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.EXIT_COMMAND_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new DetailHelpCommand(\"exit\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"khoahre123"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"khoahre123"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"khoahre123"},"content":"    public void execute_invalidHelpCommand_throwsCommandException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"khoahre123"},"content":"        assertCommandFailure(new DetailHelpCommand(\"wrong command somehow\"), model,","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"khoahre123"},"content":"                HelpDescription.COMMAND_NOT_FOUND_DESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"khoahre123"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"khoahre123"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"khoahre123":72}},{"path":"src/test/java/seedu/address/logic/commands/EditApplicantDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"public class EditApplicantDescriptorTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"SethCKL":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"SethCKL"},"content":"        Applicant editedApplicant \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedApplicant).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"SethCKL"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"    */","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"        Applicant lastApplicant \u003d model.getFilteredApplicantList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"SethCKL"},"content":"        Applicant editedApplicant \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"SethCKL"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"SethCKL"},"content":"        expectedModel.setPerson(lastApplicant, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"YiHern-Lee"},"content":"        Applicant editedApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"SethCKL"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"YiHern-Lee"},"content":"        Applicant applicantInFilteredList \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"        Applicant editedApplicant \u003d new PersonBuilder(applicantInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"SethCKL"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedApplicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"YiHern-Lee"},"content":"        expectedModel.setPerson(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"YiHern-Lee"},"content":"        Applicant firstApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"SethCKL"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstApplicant).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"SethCKL"},"content":"        // edit applicant in filtered list into a duplicate in address book","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"SethCKL"},"content":"        Applicant applicantInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"SethCKL"},"content":"                new EditPersonDescriptorBuilder(applicantInList).build());","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"YiHern-Lee"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"SethCKL":18,"YiHern-Lee":7,"-":150}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, null, false, true);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"likeabowx":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"SethCKL"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicantList());","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"YiHern-Lee"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"SethCKL":2,"YiHern-Lee":2,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/ListApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.list.ListApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"likeabowx"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListApplicantCommand.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"likeabowx"},"content":"public class ListApplicantCommandTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"        assertCommandSuccess(new ListApplicantCommand(), model, ListApplicantCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"likeabowx"},"content":"        assertCommandSuccess(new ListApplicantCommand(), model, ListApplicantCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"likeabowx":5,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/OverallHelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.HelpDescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.OverallHelpCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"khoahre123"},"content":"public class OverallHelpCommandTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"khoahre123"},"content":"    public void execute_overallHelp_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"khoahre123"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpDescription.OVERALL_HELPING_DESCRIPTION,","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"khoahre123"},"content":"                null, true, false);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"khoahre123"},"content":"        assertCommandSuccess(new OverallHelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"khoahre123":7}},{"path":"src/test/java/seedu/address/logic/parser/AddApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FLAG_APPLICANT;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AGE_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Age;","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"likeabowx"},"content":"public class AddApplicantCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"likeabowx"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"SethCKL"},"content":"        Applicant expectedApplicant \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"likeabowx"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"likeabowx"},"content":"                PREAMBLE_WHITESPACE + FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"SethCKL"},"content":"                + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"SethCKL"},"content":"                        + EMAIL_DESC_BOB + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"SethCKL"},"content":"                        + EMAIL_DESC_BOB + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"SethCKL"},"content":"                        + EMAIL_DESC_BOB + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"SethCKL"},"content":"        // multiple ages - last age accepted","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_AMY + ADDRESS_DESC_BOB + AGE_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"SethCKL"},"content":"                        + ADDRESS_DESC_AMY + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"SethCKL"},"content":"        // multiple genders - last gender accepted","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"SethCKL"},"content":"                        + ADDRESS_DESC_BOB + AGE_DESC_BOB + GENDER_DESC_AMY + GENDER_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"SethCKL"},"content":"        Applicant expectedApplicantMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":101,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"SethCKL"},"content":"                + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"SethCKL"},"content":"                new AddApplicantCommand(expectedApplicantMultipleTags));","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"SethCKL"},"content":"        Applicant expectedApplicant \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"SethCKL"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_AMY + ADDRESS_DESC_AMY + GENDER_DESC_AMY,","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"likeabowx"},"content":"                new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"likeabowx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"SethCKL"},"content":"        // missing age prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"SethCKL"},"content":"                        + VALID_AGE_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + VALID_ADDRESS_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"SethCKL"},"content":"        // missing gender prefix","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"SethCKL"},"content":"                + AGE_DESC_BOB + ADDRESS_DESC_BOB + VALID_GENDER_BOB, expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":145,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_AGE_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"SethCKL"},"content":"                        + VALID_ADDRESS_BOB + VALID_GENDER_BOB, expectedMessage);","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":153,"author":{"gitId":"likeabowx"},"content":"                FLAG_APPLICANT + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-11"},{"lineNumber":154,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-14"},{"lineNumber":155,"author":{"gitId":"SethCKL"},"content":"                        + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":159,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":160,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"SethCKL"},"content":"                        + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":165,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-14"},{"lineNumber":167,"author":{"gitId":"SethCKL"},"content":"                        + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"SethCKL"},"content":"        // invalid age","lastModifiedDate":"2022-03-14"},{"lineNumber":170,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-14"},{"lineNumber":171,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":172,"author":{"gitId":"SethCKL"},"content":"                        + INVALID_AGE_DESC + ADDRESS_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-14"},{"lineNumber":173,"author":{"gitId":"SethCKL"},"content":"                        + TAG_DESC_FRIEND, Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":174,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":177,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":178,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + INVALID_ADDRESS_DESC + GENDER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-14"},{"lineNumber":179,"author":{"gitId":"SethCKL"},"content":"                        + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"SethCKL"},"content":"        // invalid gender","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"SethCKL"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-14"},{"lineNumber":183,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":184,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + INVALID_GENDER_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"SethCKL"},"content":"                        + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":189,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":190,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + INVALID_TAG_DESC","lastModifiedDate":"2022-03-14"},{"lineNumber":191,"author":{"gitId":"SethCKL"},"content":"                        + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"SethCKL"},"content":"                FLAG_APPLICANT + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":196,"author":{"gitId":"SethCKL"},"content":"                        + AGE_DESC_BOB + INVALID_ADDRESS_DESC + GENDER_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"SethCKL"},"content":"                        + EMAIL_DESC_BOB + AGE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"SethCKL"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"likeabowx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"SethCKL":121,"likeabowx":17,"-":67}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.delete.DeleteApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"khoahre123"},"content":"import seedu.address.logic.commands.help.HelpCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.list.ListApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"        Applicant applicant \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"likeabowx"},"content":"        AddApplicantCommand command \u003d (AddApplicantCommand) parser.parseCommand(PersonUtil.getAddCommand(applicant));","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"likeabowx"},"content":"        assertEquals(new AddApplicantCommand(applicant), command);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"likeabowx"},"content":"        DeleteApplicantCommand command \u003d (DeleteApplicantCommand) parser.parseCommand(","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"likeabowx"},"content":"                DeleteApplicantCommand.COMMAND_WORD + \" -a \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"likeabowx"},"content":"        assertEquals(new DeleteApplicantCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"SethCKL"},"content":"        Applicant applicant \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"SethCKL"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(applicant).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"likeabowx"},"content":"        assertTrue(parser.parseCommand(ListApplicantCommand.COMMAND_WORD) instanceof ListApplicantCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"likeabowx"},"content":"        assertTrue(parser.parseCommand(ListApplicantCommand.COMMAND_WORD + \" 3\") instanceof ListApplicantCommand);","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"},{"lineNumber":103,"author":{"gitId":"SethCKL"},"content":" */","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"SethCKL":7,"likeabowx":10,"-":85,"khoahre123":1}},{"path":"src/test/java/seedu/address/logic/parser/DeleteApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"likeabowx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FLAG_APPLICANT;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.delete.DeleteApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"likeabowx"},"content":" * outside of the DeleteApplicantCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"likeabowx"},"content":" * same path through the DeleteApplicantCommand, and therefore we test only one of them.","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"likeabowx"},"content":"public class DeleteApplicantCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"likeabowx"},"content":"        assertParseSuccess(parser, FLAG_APPLICANT + \"1\", new DeleteApplicantCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"likeabowx"},"content":"        assertParseFailure(parser, FLAG_APPLICANT + \"a\",","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"likeabowx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"likeabowx":8,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/EditApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.parser.applicants.EditApplicantCommandParser;","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"likeabowx"},"content":"public class EditApplicantCommandParserTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"likeabowx"},"content":"    private EditApplicantCommandParser parser \u003d new EditApplicantCommandParser();","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Applicant} being edited,","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"SethCKL":5,"likeabowx":3,"-":204}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"SethCKL":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"SethCKL":4,"-":192}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"        // Two applicants with the same identity fields","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"        Applicant editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"SethCKL"},"content":"        List\u003cApplicant\u003e newApplicants \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"SethCKL"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newApplicants);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"SethCKL"},"content":"        Applicant editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"SethCKL"},"content":"     * A stub ReadOnlyAddressBook whose applicants list can violate interface constraints.","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"SethCKL"},"content":"        private final ObservableList\u003cApplicant\u003e applicants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"goalfix"},"content":"        private final ObservableList\u003cInterview\u003e interviews \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"YiHern-Lee"},"content":"        private final ObservableList\u003cPosition\u003e positions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"SethCKL"},"content":"        AddressBookStub(Collection\u003cApplicant\u003e applicants) {","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"SethCKL"},"content":"            this.applicants.setAll(applicants);","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"YiHern-Lee"},"content":"            // Add positions to constructor for unit testing","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"SethCKL"},"content":"        public ObservableList\u003cApplicant\u003e getPersonList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"SethCKL"},"content":"            return applicants;","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"goalfix"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"goalfix"},"content":"        public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"goalfix"},"content":"            return interviews;","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"goalfix"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"YiHern-Lee"},"content":"        @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"YiHern-Lee"},"content":"        public ObservableList\u003cPosition\u003e getPositionList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"YiHern-Lee"},"content":"            return positions;","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"SethCKL":13,"goalfix":7,"YiHern-Lee":7,"-":90}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredApplicantList().remove(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"SethCKL":1,"YiHern-Lee":1,"-":130}},{"path":"src/test/java/seedu/address/model/applicant/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"SethCKL":1,"-":35}},{"path":"src/test/java/seedu/address/model/applicant/ApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"public class ApplicantTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"        Applicant applicant \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e applicant.getTags().remove(0));","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"        Applicant editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"        Applicant editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"        Applicant aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"SethCKL"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"SethCKL"},"content":"        Applicant editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"SethCKL":9,"-":82}},{"path":"src/test/java/seedu/address/model/applicant/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"SethCKL":1,"-":67}},{"path":"src/test/java/seedu/address/model/applicant/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"SethCKL":2,"-":73}},{"path":"src/test/java/seedu/address/model/applicant/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"SethCKL":1,"-":39}},{"path":"src/test/java/seedu/address/model/applicant/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"SethCKL":1,"-":39}},{"path":"src/test/java/seedu/address/model/applicant/UniqueApplicantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"SethCKL"},"content":"public class UniqueApplicantListTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"        Applicant editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"SethCKL"},"content":"        Applicant editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"SethCKL"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cApplicant\u003e) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"SethCKL"},"content":"        List\u003cApplicant\u003e applicantList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"SethCKL"},"content":"        uniquePersonList.setPersons(applicantList);","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"SethCKL"},"content":"        List\u003cApplicant\u003e listWithDuplicateApplicants \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"SethCKL"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicateApplicants));","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"SethCKL":11,"-":159}},{"path":"src/test/java/seedu/address/model/interview/InterviewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalInterviews.QA_ENGINEER_INTERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPositions.JR_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPositions.SR_FE_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":"import seedu.address.testutil.InterviewBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"public class InterviewTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"        Interview qaEngineerCopy \u003d new InterviewBuilder(QA_ENGINEER_INTERVIEW).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"        assertTrue(QA_ENGINEER_INTERVIEW.equals(qaEngineerCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"        assertTrue(QA_ENGINEER_INTERVIEW.equals(QA_ENGINEER_INTERVIEW));","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"        assertFalse(QA_ENGINEER_INTERVIEW.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"        assertFalse(QA_ENGINEER_INTERVIEW.equals(ALICE));","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"        Interview editedQaEngineer \u003d new InterviewBuilder(QA_ENGINEER_INTERVIEW).withApplicant(ALICE).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"        assertFalse(QA_ENGINEER_INTERVIEW.equals(editedQaEngineer));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"goalfix"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"goalfix"},"content":"        editedQaEngineer \u003d new InterviewBuilder(QA_ENGINEER_INTERVIEW)","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"goalfix"},"content":"                .withDate(LocalDateTime.of(2000, 01, 01, 12, 0)).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"goalfix"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(editedQaEngineer));","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"goalfix"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"goalfix"},"content":"        editedQaEngineer \u003d new InterviewBuilder(QA_ENGINEER_INTERVIEW).withPosition(SR_FE_SOFTWARE_ENGINEER)","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"goalfix"},"content":"                .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"goalfix"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(editedQaEngineer));","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"goalfix":47}},{"path":"src/test/java/seedu/address/model/position/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Requirement(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"        String invalidDescription \u003d \" \";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"        String invalidDescription2 \u003d \"\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"        String invalidDescription3 \u003d \" Hello\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription2));","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription3));","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"    public void isValidDescription() {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"        // null description","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescriptionText(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        // invalid descriptions","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Description.isValidDescriptionText(\"\")); // empty string","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Description.isValidDescriptionText(\" \")); // spaces only","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Description.isValidDescriptionText(\"   great job\")); // string starting with spaces","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"        // valid descriptions","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Description.isValidDescriptionText(\"Job is a remote; May require duty on the weekends\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Description.isValidDescriptionText(\"-\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Description.isValidDescriptionText(\"Part-timers only. \\nMust have flexible work time\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":41}},{"path":"src/test/java/seedu/address/model/position/PositionNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"public class PositionNameTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PositionName(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_invalidPositioName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PositionName(\"\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PositionName(\" \"));","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    public void isValidPositionName() {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"        // null name","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e PositionName.isValidPositionName(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"        // invalid name","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionName.isValidPositionName(\"\")); // empty string","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionName.isValidPositionName(\" \")); // only space","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionName.isValidPositionName(\" software engineer\")); // start with space","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionName.isValidPositionName(\"^#$#\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionName.isValidPositionName(\"*    \")); // special characters and spaces","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"        // valid name","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionName.isValidPositionName(\"software engineer\")); // alphabets only","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionName.isValidPositionName(\"5000\")); // numbers only","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionName.isValidPositionName(\"Quality Assurance Engineer\")); // with capital letters","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionName.isValidPositionName(\"Software Engineer - 2IC\")); // special chars with alphanumeric","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionName.isValidPositionName(\"!software eng\")); // start with special character","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":41}},{"path":"src/test/java/seedu/address/model/position/PositionOpeningsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"public class PositionOpeningsTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PositionOpenings(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_invalidPositionOpenings_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PositionOpenings(\"\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PositionOpenings(\" \"));","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PositionOpenings(\"abc\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    public void isValidPositionOpenings() {","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"        // null position openings","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e PositionOpenings.isValidNumber(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"        // invalid position openings","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionOpenings.isValidNumber(\"\")); // empty string","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionOpenings.isValidNumber(\" \")); // white space only","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionOpenings.isValidNumber(\"abc\")); // non-numeric","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionOpenings.isValidNumber(\"-1\")); // integer less than 0","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionOpenings.isValidNumber(\"9999999999999\")); // integer too large","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(PositionOpenings.isValidNumber(\"234.2131\")); // floating point number","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"        // valid position openings","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionOpenings.isValidNumber(\"0\")); // integer 0","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionOpenings.isValidNumber(\"10\")); // integer 10","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionOpenings.isValidNumber(\"99999\")); // integer 99999","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(PositionOpenings.isValidNumber(\"234\")); // integer 235","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":42}},{"path":"src/test/java/seedu/address/model/position/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_NAME_SR_FE_SWE;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_NAME_SR_FE_SWE;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_OPENINGS_SR_FE_SWE;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REQUIREMENT_EXPERIENCE;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.TypicalPositions.JR_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.TypicalPositions.SR_FE_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.testutil.PositionBuilder;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"public class PositionTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"        Position position \u003d new PositionBuilder().build();","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e position.getRequirements().remove(0));","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"    public void isSamePosition() {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"        // same object -\u003e true","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(JR_SOFTWARE_ENGINEER.isSamePosition(JR_SOFTWARE_ENGINEER));","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        // null -\u003e false","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.isSamePosition(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"        // same position name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(JR_SOFTWARE_ENGINEER.isSamePosition(new PositionBuilder(JR_SOFTWARE_ENGINEER)","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"                .withDescription(VALID_DESCRIPTION_NAME_SR_FE_SWE)","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"                .build()));","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"        Position editedJrSwe \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER).withPositionName(VALID_POSITION_NAME_SR_FE_SWE)","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"                .build();","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.isSamePosition(editedJrSwe));","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"        // name differs in case, all attributes same -\u003e returns False","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"        Position editedJrSwe2 \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER)","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"                .withPositionName(VALID_POSITION_NAME_SR_FE_SWE.toLowerCase())","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"                .build();","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.isSamePosition(editedJrSwe2));","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"        // name has trailing space, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"        Position editedJrSwe3 \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER)","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"                .withPositionName(VALID_POSITION_NAME_SR_FE_SWE + \" \")","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"                .build();","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.isSamePosition(editedJrSwe3));","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"    public void equals() {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"        Position jrSweCopy \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(JR_SOFTWARE_ENGINEER.equals(jrSweCopy));","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(JR_SOFTWARE_ENGINEER.equals(JR_SOFTWARE_ENGINEER));","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"YiHern-Lee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"YiHern-Lee"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(ALICE));","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"YiHern-Lee"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(SR_FE_SOFTWARE_ENGINEER));","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"YiHern-Lee"},"content":"        // different position name -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"YiHern-Lee"},"content":"        Position editedJrSwe \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER).withPositionName(VALID_POSITION_NAME_SR_FE_SWE)","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"YiHern-Lee"},"content":"                .build();","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(editedJrSwe));","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"YiHern-Lee"},"content":"        // different number of openings -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"YiHern-Lee"},"content":"        editedJrSwe \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER).withPositionOpenings(VALID_POSITION_OPENINGS_SR_FE_SWE)","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"YiHern-Lee"},"content":"                .build();","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(editedJrSwe));","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"YiHern-Lee"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"YiHern-Lee"},"content":"        editedJrSwe \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER).withDescription(VALID_DESCRIPTION_NAME_SR_FE_SWE)","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"YiHern-Lee"},"content":"                .build();","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(editedJrSwe));","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"YiHern-Lee"},"content":"        // different requirements -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"YiHern-Lee"},"content":"        editedJrSwe \u003d new PositionBuilder(JR_SOFTWARE_ENGINEER).withRequirements(VALID_REQUIREMENT_EXPERIENCE)","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"YiHern-Lee"},"content":"                .build();","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(JR_SOFTWARE_ENGINEER.equals(editedJrSwe));","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":95}},{"path":"src/test/java/seedu/address/model/position/RequirementTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.model.position;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"public class RequirementTest {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Requirement(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"    public void constructor_invalidRequirement_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Requirement(\"\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Requirement(\" \"));","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    public void isValidRequirement() {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"        // null requirement","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"        assertThrows(NullPointerException.class, () -\u003e Requirement.isValidRequirementText(null));","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"        // invalid requirements","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Requirement.isValidRequirementText(\"\")); // empty string","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Requirement.isValidRequirementText(\" \")); // only whitespace","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Requirement.isValidRequirementText(\"*!@#\")); // special characters only","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Requirement.isValidRequirementText(\" asdas\")); // start with whitespaces","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"        assertFalse(Requirement.isValidRequirementText(","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"                \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\")); // more than 20 characters","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"        // valid requirements","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Requirement.isValidRequirementText(\"2\")); // only numbers","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Requirement.isValidRequirementText(\"abc\")); // only alphabets","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Requirement.isValidRequirementText(\"5.0 GPA\")); // alphanumeric with special characters","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Requirement.isValidRequirementText(\"HTML \u0026 CSS\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Requirement.isValidRequirementText(\"\u003e\u003d5 years of experience\")); // start with special characters","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"        assertTrue(Requirement.isValidRequirementText(\"Master at Golang\")); // upper and lower cases","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":43}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"SethCKL"},"content":"public class JsonAdaptedApplicantTest {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"    private static final String INVALID_AGE \u003d \"twenty\";","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    private static final String INVALID_GENDER \u003d \"O\";","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"    private static final String VALID_AGE \u003d BENSON.getAge().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"SethCKL"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_AGE, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"SethCKL"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_AGE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"                VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"SethCKL"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_AGE, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"SethCKL"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"SethCKL"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_AGE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"SethCKL"},"content":"                VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"SethCKL"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_AGE, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"SethCKL"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"SethCKL"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_AGE, VALID_ADDRESS,","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"SethCKL"},"content":"                VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"SethCKL"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_AGE, INVALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"SethCKL"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"SethCKL"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_AGE, null,","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"SethCKL"},"content":"                VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"SethCKL"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_AGE, VALID_ADDRESS, VALID_GENDER,","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"SethCKL"},"content":"                        invalidTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"SethCKL"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"SethCKL":30,"-":96}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"SethCKL":3,"-":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":" */","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"SethCKL":4,"-":46}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"/*","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"SethCKL"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"SethCKL"},"content":"*/","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"SethCKL":5,"-":68}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"     * Adds a new {@code Applicant} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    public AddressBookBuilder withPerson(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"SethCKL"},"content":"        addressBook.addPerson(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SethCKL":4,"-":30}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code applicant}\u0027s details","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"    public EditPersonDescriptorBuilder(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"        descriptor.setName(applicant.getName());","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"        descriptor.setPhone(applicant.getPhone());","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"        descriptor.setEmail(applicant.getEmail());","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"        descriptor.setAddress(applicant.getAddress());","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"        descriptor.setTags(applicant.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"SethCKL":12,"-":75}},{"path":"src/test/java/seedu/address/testutil/InterviewBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPositions.JR_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":"public class InterviewBuilder {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"    public static final Applicant DEFAULT_APPLICANT \u003d ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"    public static final LocalDateTime DEFAULT_DATE \u003d LocalDateTime.parse(\"2022-01-01 12:00\", FORMATTER);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"    public static final Position DEFAULT_POSITION \u003d JR_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"    // Data fields","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"    private Applicant applicant;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"    private LocalDateTime date;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"    private Position position;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"     * Creates a {@code InterviewBuilder} with the default details.","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"    public InterviewBuilder() {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"        applicant \u003d DEFAULT_APPLICANT;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"        date \u003d DEFAULT_DATE;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"        position \u003d DEFAULT_POSITION;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"     * Initializes the InterviewBuilder with the data of {@code interviewToCopy}.","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"goalfix"},"content":"    public InterviewBuilder(Interview interviewToCopy) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"goalfix"},"content":"        applicant \u003d interviewToCopy.getApplicant();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"goalfix"},"content":"        date \u003d interviewToCopy.getDate();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"goalfix"},"content":"        position \u003d interviewToCopy.getPosition();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"goalfix"},"content":"     * Sets the {@code applicant} of the {@code Interview} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"goalfix"},"content":"    public InterviewBuilder withApplicant(Applicant interviewApplicant) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"goalfix"},"content":"        this.applicant \u003d interviewApplicant;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"goalfix"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"goalfix"},"content":"     * Sets the {@code date} of the {@code Interview} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"goalfix"},"content":"    public InterviewBuilder withDate(LocalDateTime date) {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"goalfix"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"goalfix"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"goalfix"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"goalfix"},"content":"     * Sets the {@code position} of the {@code Interview} that we are building.","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"goalfix"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"goalfix"},"content":"    public InterviewBuilder withPosition(Position position) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"goalfix"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"goalfix"},"content":"        return this;","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"goalfix"},"content":"    public Interview build() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"goalfix"},"content":"        return new Interview(applicant, date, position);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"goalfix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"goalfix":71}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Age;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"SethCKL"},"content":" * A utility class to help with building Applicant objects.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"    public static final String DEFAULT_AGE \u003d \"77\";","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"    private Age age;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"    private Gender gender;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"     * Initializes the PersonBuilder with the data of {@code applicantToCopy}.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"    public PersonBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"SethCKL"},"content":"        name \u003d applicantToCopy.getName();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"SethCKL"},"content":"        phone \u003d applicantToCopy.getPhone();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"SethCKL"},"content":"        email \u003d applicantToCopy.getEmail();","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"        age \u003d applicantToCopy.getAge();","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"SethCKL"},"content":"        address \u003d applicantToCopy.getAddress();","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"        gender \u003d applicantToCopy.getGender();","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"SethCKL"},"content":"        tags \u003d new HashSet\u003c\u003e(applicantToCopy.getTags());","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"SethCKL"},"content":"     * Sets the {@code Name} of the {@code Applicant} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"SethCKL"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Applicant} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"SethCKL"},"content":"     * Sets the {@code Age} of the {@code Applicant} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"SethCKL"},"content":"    public PersonBuilder withAge(String age) {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"SethCKL"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"SethCKL"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"SethCKL"},"content":"     * Sets the {@code Address} of the {@code Applicant} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"SethCKL"},"content":"     * Sets the {@code Gender} of the {@code Applicant} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"SethCKL"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"SethCKL"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"SethCKL"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"SethCKL"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"SethCKL"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"SethCKL"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"SethCKL"},"content":"     * Sets the {@code Phone} of the {@code Applicant} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"SethCKL"},"content":"     * Sets the {@code Email} of the {@code Applicant} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"SethCKL"},"content":"    public Applicant build() {","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"SethCKL"},"content":"        return new Applicant(name, phone, email, age, address, gender, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"SethCKL":44,"-":78}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"likeabowx"},"content":"import seedu.address.logic.commands.add.AddApplicantCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"SethCKL"},"content":" * A utility class for Applicant.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"SethCKL"},"content":"     * Returns an add command string for adding the {@code applicant}.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":"    public static String getAddCommand(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"likeabowx"},"content":"        return AddApplicantCommand.COMMAND_WORD + \" -a \" + getPersonDetails(applicant);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"     * Returns the part of command string for the given {@code applicant}\u0027s details.","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"SethCKL"},"content":"    public static String getPersonDetails(Applicant applicant) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"        sb.append(PREFIX_NAME + applicant.getName().fullName + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"        sb.append(PREFIX_PHONE + applicant.getPhone().value + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"SethCKL"},"content":"        sb.append(PREFIX_EMAIL + applicant.getEmail().value + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"        sb.append(PREFIX_AGE + applicant.getAge().value + \" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"        sb.append(PREFIX_ADDRESS + applicant.getAddress().value + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"SethCKL"},"content":"        sb.append(PREFIX_GENDER + applicant.getGender().value + \" \");","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"        applicant.getTags().stream().forEach(","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"SethCKL"},"content":"        descriptor.getAge().ifPresent(age -\u003e sb.append(PREFIX_AGE).append(age.value).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"SethCKL"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"SethCKL":17,"likeabowx":2,"-":49}},{"path":"src/test/java/seedu/address/testutil/PositionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionName;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.PositionOpenings;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Requirement;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":" * A utility class to help with building Position objects.","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"public class PositionBuilder {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String DEFAULT_POSITION_NAME \u003d \"Senior Front-End Engineer\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Job is remote with great medical benefits!\";","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"    public static final String DEFAULT_POSITION_OPENINGS \u003d \"3\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"    // Identity fields","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"    private PositionName positionName;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    private Description description;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"    // Data fields","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"    private PositionOpenings positionOpenings;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"    private Set\u003cRequirement\u003e requirements;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"     * Creates a {@code PositionBuilder} with the default details.","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionBuilder() {","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"        positionName \u003d new PositionName(DEFAULT_POSITION_NAME);","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"        positionOpenings \u003d new PositionOpenings(DEFAULT_POSITION_OPENINGS);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiHern-Lee"},"content":"        requirements \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiHern-Lee"},"content":"     * Initializes the PositionBuilder with the data of {@code positionToCopy}.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionBuilder(Position positionToCopy) {","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiHern-Lee"},"content":"        positionName \u003d positionToCopy.getPositionName();","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiHern-Lee"},"content":"        description \u003d positionToCopy.getDescription();","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"        positionOpenings \u003d positionToCopy.getPositionOpenings();","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiHern-Lee"},"content":"        requirements \u003d new HashSet\u003c\u003e(positionToCopy.getRequirements());","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiHern-Lee"},"content":"     * Sets the {@code PositionName} of the {@code Position} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionBuilder withPositionName(String positionName) {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiHern-Lee"},"content":"        this.positionName \u003d new PositionName(positionName);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"YiHern-Lee"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"YiHern-Lee"},"content":"     * Parses the {@code requirements} into a {@code Set\u003cRequirement\u003e} and set it to the {@code Position}","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"YiHern-Lee"},"content":"     * that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionBuilder withRequirements(String... requirements) {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"YiHern-Lee"},"content":"        this.requirements \u003d SampleDataUtil.getRequirementSet(requirements);","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"YiHern-Lee"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"YiHern-Lee"},"content":"     * Sets the {@code Description} of the {@code Position} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionBuilder withDescription(String description) {","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"YiHern-Lee"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"YiHern-Lee"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"YiHern-Lee"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"YiHern-Lee"},"content":"     * Sets the {@code PositionOpenings} of the {@code Position} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"YiHern-Lee"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"YiHern-Lee"},"content":"    public PositionBuilder withPositionOpenings(String positionOpenings) {","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"YiHern-Lee"},"content":"        this.positionOpenings \u003d new PositionOpenings(positionOpenings);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"YiHern-Lee"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"YiHern-Lee"},"content":"    public Position build() {","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"YiHern-Lee"},"content":"        return new Position(positionName, description, positionOpenings, requirements);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":86}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"SethCKL"},"content":"     * Returns the middle index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"YiHern-Lee"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size() / 2);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"     * Returns the last index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"YiHern-Lee"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"SethCKL"},"content":"     * Returns the applicant in the {@code model}\u0027s applicant list at {@code index}.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"    public static Applicant getPerson(Model model, Index index) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"YiHern-Lee"},"content":"        return model.getFilteredApplicantList().get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SethCKL":5,"YiHern-Lee":3,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalInterviews.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"goalfix"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPositions.JR_PROJECT_MANAGER;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPositions.JR_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPositions.QA_ENGINEER;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"goalfix"},"content":"import static seedu.address.testutil.TypicalPositions.SR_FE_SOFTWARE_ENGINEER;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"goalfix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"goalfix"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"goalfix"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"goalfix"},"content":"public class TypicalInterviews {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"goalfix"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"goalfix"},"content":"    public static final Interview JR_SWE_INTERVIEW \u003d new InterviewBuilder().withApplicant(ALICE)","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"goalfix"},"content":"            .withDate(LocalDateTime.parse(\"2022-01-01 12:00\", FORMATTER)).withPosition(JR_SOFTWARE_ENGINEER)","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"goalfix"},"content":"            .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"goalfix"},"content":"    public static final Interview SR_FE_INTERVIEW \u003d new InterviewBuilder().withApplicant(BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"goalfix"},"content":"            .withDate(LocalDateTime.parse(\"2022-12-31 12:00\", FORMATTER)).withPosition(SR_FE_SOFTWARE_ENGINEER)","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"goalfix"},"content":"            .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"goalfix"},"content":"    public static final Interview JR_PROJECT_MANAGER_INTERVIEW \u003d new InterviewBuilder().withApplicant(CARL)","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"goalfix"},"content":"            .withDate(LocalDateTime.parse(\"2023-01-01 12:00\", FORMATTER)).withPosition(JR_PROJECT_MANAGER)","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"goalfix"},"content":"            .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"goalfix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"goalfix"},"content":"    public static final Interview QA_ENGINEER_INTERVIEW \u003d new InterviewBuilder().withApplicant(DANIEL)","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"goalfix"},"content":"            .withDate(LocalDateTime.parse(\"2023-12-31 12:00\", FORMATTER)).withPosition(QA_ENGINEER)","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"goalfix"},"content":"            .build();","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"goalfix"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"goalfix":36}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"SethCKL"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"SethCKL"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"SethCKL"},"content":" * A utility class containing a list of {@code Applicant} objects to be used in tests.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withAge(\"21\")","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"SethCKL"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withGender(\"F\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withAge(\"22\")","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"SethCKL"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withGender(\"M\")","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"SethCKL"},"content":"            .withEmail(\"heinz@example.com\").withAge(\"23\").withAddress(\"wall street\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"SethCKL"},"content":"            .withEmail(\"cornelia@example.com\").withAge(\"24\").withAddress(\"10th street\").withGender(\"M\")","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"SethCKL"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"SethCKL"},"content":"            .withEmail(\"werner@example.com\").withAge(\"25\").withAddress(\"michegan ave\").withGender(\"F\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"SethCKL"},"content":"            .withEmail(\"lydia@example.com\").withAge(\"26\").withAddress(\"little tokyo\").withGender(\"F\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"SethCKL"},"content":"            .withEmail(\"anna@example.com\").withAge(\"27\").withAddress(\"4th street\").withGender(\"M\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"SethCKL"},"content":"            .withEmail(\"stefan@example.com\").withAge(\"18\").withAddress(\"little india\").withGender(\"M\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"SethCKL"},"content":"            .withEmail(\"hans@example.com\").withAge(\"19\").withAddress(\"chicago ave\").withGender(\"F\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"SethCKL"},"content":"    // Manually added - Applicant\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"SethCKL"},"content":"            .withEmail(VALID_EMAIL_AMY).withAge(VALID_AGE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"SethCKL"},"content":"            .withGender(VALID_GENDER_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"SethCKL"},"content":"    public static final Applicant BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"SethCKL"},"content":"            .withEmail(VALID_EMAIL_BOB).withAge(VALID_AGE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"SethCKL"},"content":"            .withGender(VALID_GENDER_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"SethCKL"},"content":"        for (Applicant applicant : getTypicalPersons()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"SethCKL"},"content":"            ab.addPerson(applicant);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"SethCKL"},"content":"    public static List\u003cApplicant\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"SethCKL":35,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalPositions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiHern-Lee"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiHern-Lee"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiHern-Lee"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiHern-Lee"},"content":"public class TypicalPositions {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiHern-Lee"},"content":"    public static final Position JR_SOFTWARE_ENGINEER \u003d new PositionBuilder()","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionName(\"Junior Software Engineer\").withDescription(\"Flexible role. Must be hardworking.\")","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionOpenings(\"6\").withRequirements(\"New graduate\", \"2nd class and above\", \"Java\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiHern-Lee"},"content":"    public static final Position SR_FE_SOFTWARE_ENGINEER \u003d new PositionBuilder()","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionName(\"Senior Front-end Software Engineer\")","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiHern-Lee"},"content":"            .withDescription(\"In-charged of managing an entire frontend feature.\")","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionOpenings(\"2\").withRequirements(\"\u003e\u003d5 years of experience\",","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiHern-Lee"},"content":"                    \"Experienced with React\", \"Expert in JavaScript\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiHern-Lee"},"content":"    public static final Position JR_PROJECT_MANAGER \u003d new PositionBuilder()","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionName(\"Junior Project Manager\")","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiHern-Lee"},"content":"            .withDescription(\"Manage and ensure smooth project workflow. Flexible with working overtime.\")","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionOpenings(\"4\").withRequirements(\"\u003e2 years exp in e-commerce\",","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiHern-Lee"},"content":"                    \"Basic programming skills\", \"Good communicator\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiHern-Lee"},"content":"    public static final Position QA_ENGINEER \u003d new PositionBuilder()","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionName(\"Quality Assurance Engineer\")","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiHern-Lee"},"content":"            .withDescription(\"Performance testing to ensure SLA is met.\")","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiHern-Lee"},"content":"            .withPositionOpenings(\"1\").withRequirements(\"\u003e2 years exp\",","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiHern-Lee"},"content":"                    \"Creative thinker\", \"Excellent debugger\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiHern-Lee"},"content":"    private TypicalPositions() {} // prevents instantiation","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiHern-Lee"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiHern-Lee"},"content":"    public static List\u003cPosition\u003e getTypicalPositions() {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiHern-Lee"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(JR_SOFTWARE_ENGINEER, SR_FE_SOFTWARE_ENGINEER,","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiHern-Lee"},"content":"                JR_PROJECT_MANAGER, QA_ENGINEER));","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiHern-Lee"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiHern-Lee"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiHern-Lee":36}}]
