[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"## HRConnect","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W11-2/tp/actions)","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W11-2/tp/branch/master/graph/badge.svg?token\u003dNLSR34Z1Y2)](https://codecov.io/gh/AY2122S2-CS2103T-W11-2/tp)","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"![demo screenshot](docs/images/Ui.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"This product is for tech HR recruiters who prefer to use CLI to store contacts of job applicants and their respective interviews as well as keep track of the status of each applicant through the application process.","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"eman-kom":6,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"    archiveName \u003d \u0027HRConnect.jar\u0027","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"eman-kom":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"rcjj98"},"content":"You can reach us at the email `e0544350@comp.nus.edu.sg`","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"### Brigitte Puteri Santoso","lastModifiedDate":"2022-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"\u003cimg src\u003d\"images/brigittesantoso.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"[[github](https://github.com/brigittesantoso)]","lastModifiedDate":"2022-02-28"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"[[portfolio](team/brigittesantoso.md)]","lastModifiedDate":"2022-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"* Role: Developer","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"* Responsibilities: Job and Stage fields, Interview features and Types","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"rcjj98"},"content":"### Ryan Chang","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"rcjj98"},"content":"\u003cimg src\u003d\"images/rcjj98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"rcjj98"},"content":"[[github](http://github.com/rcjj98)]","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"rcjj98"},"content":"[[portfolio](team/rcjj98.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"rcjj98"},"content":"* Responsibilities: Export and edit feature.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"### Emmanuel Mok","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"\u003cimg src\u003d\"images/eman-kom.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"[[github](http://github.com/eman-kom)]","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"[[portfolio](team/eman-kom.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"* Responsibilities: Find and Import Feature","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"### Imraj Singh Sandhu","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"\u003cimg src\u003d\"images/imrajsinghsandhu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"[[github](http://github.com/imrajsinghsandhu)]","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"[[portfolio](team/imrajsinghsandhu.md)]","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"* Responsibilities: Task feature","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"brigittesantoso":6,"imrajsinghsandhu":2,"eman-kom":8,"-":29,"rcjj98":6}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"brigittesantoso":1,"-":79}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"* Built upon and referenced from [AB-3](https://github.com/nus-cs2103-AY2122S2/tp)","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103T-W11-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete [p] 1`.","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `InterviewListPanel`, `TaskListPanel`,`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"* depends on some classes in the `Model` component, as it displays `Person`, `Interview`, `Task` objects residing in the `Model`.","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `HelpCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-04-09"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add an applicant).","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"imrajsinghsandhu"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete [p] 1\")` API call.","lastModifiedDate":"2022-04-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"imrajsinghsandhu"},"content":"![Interactions Inside the Logic Component for the `delete [p] 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-04-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"* All `XYZCommandParser` (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-04-10"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"* All `XYZTYPECommandParser` classes (`XYZ` refers to the specific command, and `TYPE` refers to either `Person`, `Task` or `Interview` objects e.g., `AddTaskCommandParser`, `DeletePersonCommandParser`, ...) are created by the `XYZCommandParser` classes, which return an `XYZTYPECommand` (`XYZTYPECommand` referring to the specific command e.g. `AddPersonCommand`, `DeleteTaskCommand`, ...).","lastModifiedDate":"2022-04-10"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"* `XYZCommand` like `AddCommand` and `DeleteCommand` are abstract classes, which inherits from the abstract `Command` class, so they may be treated similarly where possible. However `XYZCommand` like `HelpCommand` and `ExitCommand` are non-abstract classes but also inherits from abstract class Command.","lastModifiedDate":"2022-04-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"* stores the HRConnect data i.e., all `Person` objects (which are contained in a `UniquePersonList` object), all `Interview` objects (which are contained in a `UniqueInterviewList` object), all `Task` objects (which are contained in a `UniqueTaskList` object).","lastModifiedDate":"2022-04-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"* stores the currently \u0027selected\u0027 `Interview` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cInterview\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-04-06"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-04-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below for `Person`, `Interview` and `Task` separately. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-W11-2/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-04-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"* can save both HRConnect data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-04-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2022-04-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"eman-kom"},"content":"### Export Feature","lastModifiedDate":"2022-04-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"The export feature takes the current HRConnect data stored in memory and exports the job applicants data into a user-specified","lastModifiedDate":"2022-04-10"},{"lineNumber":177,"author":{"gitId":"eman-kom"},"content":"csv file that is tab-delimited.","lastModifiedDate":"2022-04-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":179,"author":{"gitId":"eman-kom"},"content":"The structure for the csv file is defined as follows:","lastModifiedDate":"2022-04-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":181,"author":{"gitId":"eman-kom"},"content":"name | phone number | email | address | job position | stage","lastModifiedDate":"2022-04-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":183,"author":{"gitId":"eman-kom"},"content":"#### Implementation","lastModifiedDate":"2022-04-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":185,"author":{"gitId":"eman-kom"},"content":"The export feature is facilitated by the `ExportCommand` while the necessary checks for the export","lastModifiedDate":"2022-04-06"},{"lineNumber":186,"author":{"gitId":"eman-kom"},"content":"feature is facilitated by the `ExportCommandParser`.","lastModifiedDate":"2022-04-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":188,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":190,"author":{"gitId":"eman-kom"},"content":"Given below is an example usage scenario and how the export mechanism behaves at each step.","lastModifiedDate":"2022-04-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":192,"author":{"gitId":"eman-kom"},"content":"Step 1. User enters `export ./mydata.csv` into the application.","lastModifiedDate":"2022-04-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"eman-kom"},"content":"Step 2. The file path is passed to `ExportCommandParser#parse()` and `ExportCommandParser#checkFilePath()` checks the validity of the file path.","lastModifiedDate":"2022-04-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":196,"author":{"gitId":"eman-kom"},"content":"Step 3. After checking that the file path is valid, the data type of the file path is converted from its *string* representation into a *Path* representation.","lastModifiedDate":"2022-04-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":198,"author":{"gitId":"eman-kom"},"content":"Step 4. A new `ExportCommand` object is created with the file path as its parameter.","lastModifiedDate":"2022-04-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":200,"author":{"gitId":"eman-kom"},"content":"Step 5. The `ExportCommand#execute()` method is called, and it calls `Model#getFilteredPersonList()` to get the current list of job applicants.","lastModifiedDate":"2022-04-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":202,"author":{"gitId":"eman-kom"},"content":"Step 6. For each person in the persons list, the *string* representation of each field is obtained and concatenated into","lastModifiedDate":"2022-04-06"},{"lineNumber":203,"author":{"gitId":"eman-kom"},"content":"the aformentioned format above, then it is written into the user-specified csv file.","lastModifiedDate":"2022-04-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":205,"author":{"gitId":"eman-kom"},"content":"Step 7. A new `CommandResult` object is returned signifying that the command has executed successfully.","lastModifiedDate":"2022-04-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":207,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":209,"author":{"gitId":"eman-kom"},"content":"The following sequence diagram summarises how `export ./mydata.csv` works.","lastModifiedDate":"2022-04-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":211,"author":{"gitId":"eman-kom"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":212,"author":{"gitId":"eman-kom"},"content":"  \u003cimg src\u003d\"images/ExportSequenceDiagram.png\" alt\u003d\"Interactions for Export Command\"/\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":213,"author":{"gitId":"eman-kom"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":217,"author":{"gitId":"eman-kom"},"content":"### Import Feature","lastModifiedDate":"2022-04-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":219,"author":{"gitId":"brigittesantoso"},"content":"The import feature takes in a csv file and adds all the job applicants stored in the csv file back into the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":221,"author":{"gitId":"eman-kom"},"content":"The csv file structure needs to follow the file structure as defined by the [export feature](#export-feature).","lastModifiedDate":"2022-04-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":223,"author":{"gitId":"eman-kom"},"content":"#### Implementation","lastModifiedDate":"2022-04-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":225,"author":{"gitId":"eman-kom"},"content":"The import feature is facilitated by the `ImportCommand` while the necessary checks for the import feature is facilitated by the `ImportCommandParser`.","lastModifiedDate":"2022-04-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":227,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-06"},{"lineNumber":228,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":229,"author":{"gitId":"eman-kom"},"content":"Given below is an example usage scenario and how the import mechanism behaves at each step.","lastModifiedDate":"2022-04-06"},{"lineNumber":230,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":231,"author":{"gitId":"eman-kom"},"content":"Step 1. User enters `import ./mydata.csv` into the application.","lastModifiedDate":"2022-04-10"},{"lineNumber":232,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":233,"author":{"gitId":"eman-kom"},"content":"Step 2. The file path is passed to `ImportCommandParser#parse()` and `ImportCommandParser#checkFilePath()` checks the validity of the file path.","lastModifiedDate":"2022-04-06"},{"lineNumber":234,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":235,"author":{"gitId":"eman-kom"},"content":"Step 3. After checking that the file path is valid, the data type of the file path is converted from its *string* representation into a *Path* representation.","lastModifiedDate":"2022-04-06"},{"lineNumber":236,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":237,"author":{"gitId":"eman-kom"},"content":"Step 4. The `ImportCommandParser#readCsv()` is called to parse the csv file. From there, 3 methods are called to ensure the correctness of the csv file.","lastModifiedDate":"2022-04-06"},{"lineNumber":238,"author":{"gitId":"eman-kom"},"content":" * `ImportCommandParser#getFields()`: ensures that the number of fields in each line matches the number of fields required by the application","lastModifiedDate":"2022-04-06"},{"lineNumber":239,"author":{"gitId":"eman-kom"},"content":" * `ImportCommandParser#createPerson()`: ensures that each field is valid and correct and converts the line into a person object.","lastModifiedDate":"2022-04-06"},{"lineNumber":240,"author":{"gitId":"eman-kom"},"content":" * `ImportCommandParser#updatePersons()`: ensures that each person in the csv file is unique with regards to the csv file.","lastModifiedDate":"2022-04-06"},{"lineNumber":241,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":242,"author":{"gitId":"eman-kom"},"content":"Step 5. The newly created person is added to a temporary list.","lastModifiedDate":"2022-04-06"},{"lineNumber":243,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":244,"author":{"gitId":"eman-kom"},"content":"Step 6. A new `ImportCommand` object is created with the aforementioned temporary list as its parameter.","lastModifiedDate":"2022-04-06"},{"lineNumber":245,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":246,"author":{"gitId":"brigittesantoso"},"content":"Step 7. The `ImportCommand#execute()` method is called. It checks that there are no persons in the temporary list that already exists in the current HRConnect before adding each person into the current HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":248,"author":{"gitId":"eman-kom"},"content":"Step 8. A new `CommandResult` object is returned signifying that the command has executed successfully.","lastModifiedDate":"2022-04-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":250,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-06"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":252,"author":{"gitId":"eman-kom"},"content":"The following sequence diagram summarises how `import ./mydata.csv` works.","lastModifiedDate":"2022-04-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":254,"author":{"gitId":"eman-kom"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":255,"author":{"gitId":"eman-kom"},"content":"  \u003cimg src\u003d\"images/ImportSequenceDiagram.png\" alt\u003d\"Interactions for Import Command\"/\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":256,"author":{"gitId":"eman-kom"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":257,"author":{"gitId":"eman-kom"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"eman-kom"},"content":"  \u003cimg src\u003d\"images/ImportCheckSequenceDiagram.png\" alt\u003d\"Interactions for Import checking Command\"/\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":259,"author":{"gitId":"eman-kom"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":261,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":263,"author":{"gitId":"eman-kom"},"content":"### Find Feature","lastModifiedDate":"2022-04-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":265,"author":{"gitId":"eman-kom"},"content":"The find feature finds all data within a specified section (Person/Interview/Task) such that it matches the search criteria.","lastModifiedDate":"2022-04-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":267,"author":{"gitId":"eman-kom"},"content":"#### Implementation","lastModifiedDate":"2022-04-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":269,"author":{"gitId":"eman-kom"},"content":"The find feature is facilitated by the subclasses of the `FindCommand` while the necessary validity checks for the find feature is facilitated by the subclasses of `FindCommandParser`. The actual filtering is faciliated by the `{Section}ContainsKeywordsPredicate`","lastModifiedDate":"2022-04-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":271,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-06"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":273,"author":{"gitId":"eman-kom"},"content":"Given below is an example usage scenario and how the find mechanism behaves at each step.","lastModifiedDate":"2022-04-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":275,"author":{"gitId":"eman-kom"},"content":"Step 1. User enters `find [t] g/i/update` into the application.","lastModifiedDate":"2022-04-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":277,"author":{"gitId":"eman-kom"},"content":"Step 2. The input is passed to `FindCommandParser#parse()` and its section is determined.","lastModifiedDate":"2022-04-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":279,"author":{"gitId":"eman-kom"},"content":"Step 3. Next, the input is parsed and checked for any invalid groups.","lastModifiedDate":"2022-04-10"},{"lineNumber":280,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":281,"author":{"gitId":"eman-kom"},"content":"Step 4. The list of groups are then passed into `FindTaskCommandParser#parse()` to check for any invalid flags or formats.","lastModifiedDate":"2022-04-10"},{"lineNumber":282,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":283,"author":{"gitId":"eman-kom"},"content":"Step 5. A new `TaskContainsKeywordsPredicate` predicate object is created using the list of groups as its parameter.","lastModifiedDate":"2022-04-10"},{"lineNumber":284,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":285,"author":{"gitId":"eman-kom"},"content":"Step 6. A new `FindTaskCommand` object is created with the aforementioned predicate object as its parameter.","lastModifiedDate":"2022-04-10"},{"lineNumber":286,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":287,"author":{"gitId":"brigittesantoso"},"content":"Step 7. The `FindTaskCommand#execute()` method is called. It filters the current HRConnect such that it satisfies the predicate object and displays it on the screen.","lastModifiedDate":"2022-04-10"},{"lineNumber":288,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":289,"author":{"gitId":"eman-kom"},"content":"Step 8. A new `CommandResult` object is returned signifying that the command has executed successfully.","lastModifiedDate":"2022-04-10"},{"lineNumber":290,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":291,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":292,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-06"},{"lineNumber":293,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":294,"author":{"gitId":"eman-kom"},"content":"The following sequence diagram summarises how `find [t] g/i/update` works","lastModifiedDate":"2022-04-10"},{"lineNumber":295,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":296,"author":{"gitId":"eman-kom"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":297,"author":{"gitId":"eman-kom"},"content":"  \u003cimg src\u003d\"images/FindCommandSequenceDiagram.png\" alt\u003d\"Interactions for Find Task Command\"/\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":298,"author":{"gitId":"eman-kom"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":299,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":300,"author":{"gitId":"eman-kom"},"content":"#### Design Considerations","lastModifiedDate":"2022-04-06"},{"lineNumber":301,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":302,"author":{"gitId":"eman-kom"},"content":"* **Alternative 1:** Using AND, OR, NOT operators (i.e. `find john AND tom OR (gmail.com AND NOT 111)`).","lastModifiedDate":"2022-04-06"},{"lineNumber":303,"author":{"gitId":"eman-kom"},"content":"  * Pros: More intuitive to the technically inclined and more control over the search results.","lastModifiedDate":"2022-04-06"},{"lineNumber":304,"author":{"gitId":"eman-kom"},"content":"  * Cons: Harder to parse and implement.","lastModifiedDate":"2022-04-06"},{"lineNumber":305,"author":{"gitId":"eman-kom"},"content":"* **Alternative 2** Using free text queries (i.e. `find john tom gmail.com`)","lastModifiedDate":"2022-04-06"},{"lineNumber":306,"author":{"gitId":"eman-kom"},"content":"  * Pros: More intuitive as user expects queried person to contain all the search terms.","lastModifiedDate":"2022-04-06"},{"lineNumber":307,"author":{"gitId":"eman-kom"},"content":"  * Cons: Lacks the flexibility provided by AND and OR operators.","lastModifiedDate":"2022-04-06"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"brigittesantoso"},"content":"**Target user profile**: Tech HR Recruiters","lastModifiedDate":"2022-02-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"rcjj98"},"content":"* Required to manage a significant number of contacts.","lastModifiedDate":"2022-04-08"},{"lineNumber":329,"author":{"gitId":"rcjj98"},"content":"* Prefer desktop apps over other types.","lastModifiedDate":"2022-04-08"},{"lineNumber":330,"author":{"gitId":"rcjj98"},"content":"* Proficient typists.","lastModifiedDate":"2022-04-08"},{"lineNumber":331,"author":{"gitId":"rcjj98"},"content":"* Prefers typing to mouse interactions.","lastModifiedDate":"2022-04-08"},{"lineNumber":332,"author":{"gitId":"rcjj98"},"content":"* Reasonably comfortable using CLI apps.","lastModifiedDate":"2022-04-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"brigittesantoso"},"content":"**Value proposition**:","lastModifiedDate":"2022-02-28"},{"lineNumber":335,"author":{"gitId":"rcjj98"},"content":"* Manage contacts more efficiently using CLI as compared to a typical mouse/GUI driven app.","lastModifiedDate":"2022-04-08"},{"lineNumber":336,"author":{"gitId":"rcjj98"},"content":"* Find applicants based on their details, e.g. name, position applied, stage of application.","lastModifiedDate":"2022-04-08"},{"lineNumber":337,"author":{"gitId":"brigittesantoso"},"content":"* Archive/Retrieve applicants\u0027 details for long term storage/ easy transfer of data into HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":338,"author":{"gitId":"rcjj98"},"content":"* Keep track of applicant\u0027s upcoming and past interviews.","lastModifiedDate":"2022-04-08"},{"lineNumber":339,"author":{"gitId":"rcjj98"},"content":"* A task list to keep track of miscellaneous tasks.","lastModifiedDate":"2022-04-09"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                     | So that I can…​                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"brigittesantoso"},"content":"|----------|-------------------|--------------------------------------------------|-----------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":349,"author":{"gitId":"brigittesantoso"},"content":"| `* * *`  | Tech HR Recruiter | add applicants to my HRConnect                   | record their details                                |","lastModifiedDate":"2022-04-10"},{"lineNumber":350,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | take note of scheduled interviews for applicants | keep track of their interview dates                 |","lastModifiedDate":"2022-04-08"},{"lineNumber":351,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | record miscellaneous task                        | keep track of any important details                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":352,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | view the details of all contacts                 | see all my contacts at a glance                     |","lastModifiedDate":"2022-04-08"},{"lineNumber":353,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | view all scheduled interviews                    | see all upcoming and past interviews                |","lastModifiedDate":"2022-04-08"},{"lineNumber":354,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | view all recorded miscellaneous task             | see all important tasks at a glance                 |","lastModifiedDate":"2022-04-09"},{"lineNumber":355,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | remove any applicant from my contact list        | delete any applicant that is no longer of interest  |","lastModifiedDate":"2022-04-08"},{"lineNumber":356,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | remove a scheduled interview                     | delete any interview that is cancelled              |","lastModifiedDate":"2022-04-08"},{"lineNumber":357,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | remove any recorded tasks                        | delete tasks off my task list                       |","lastModifiedDate":"2022-04-09"},{"lineNumber":358,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | update any applicant\u0027s details                   | edit any mistakes in the applicant\u0027s detail         |","lastModifiedDate":"2022-04-09"},{"lineNumber":359,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | update the details of a scheduled interview      | edit any mistakes in the scheduled interview        |","lastModifiedDate":"2022-04-09"},{"lineNumber":360,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | update any task details                          | edit any mistakes in the miscellaneous tasks        |","lastModifiedDate":"2022-04-09"},{"lineNumber":361,"author":{"gitId":"brigittesantoso"},"content":"| `* *`    | Tech HR Recruiter | find an applicant in my HRConnect                | locate them easily                                  |","lastModifiedDate":"2022-04-10"},{"lineNumber":362,"author":{"gitId":"rcjj98"},"content":"| `* *`    | Tech HR Recruiter | find a scheduled interview                       | locate a specific interview                         |","lastModifiedDate":"2022-04-09"},{"lineNumber":363,"author":{"gitId":"rcjj98"},"content":"| `* *`    | Tech HR Recruiter | find specific tasks I recorded                   | locate the quickly                                  |","lastModifiedDate":"2022-04-09"},{"lineNumber":364,"author":{"gitId":"brigittesantoso"},"content":"| `* * *`  | Tech HR Recruiter | clear all applicants from my HRConnect           | easily empty my HRConnect                           |","lastModifiedDate":"2022-04-10"},{"lineNumber":365,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | clear all schedule interviews                    | easily remove all schedule interviews               |","lastModifiedDate":"2022-04-09"},{"lineNumber":366,"author":{"gitId":"rcjj98"},"content":"| `* * *`  | Tech HR Recruiter | clear all recorded miscellaneous task            | easily remove all recorded tasks                    |","lastModifiedDate":"2022-04-09"},{"lineNumber":367,"author":{"gitId":"rcjj98"},"content":"| `* *`    | Tech HR Recruiter | export details of all applicants                 | archive the data for future reference               |","lastModifiedDate":"2022-04-09"},{"lineNumber":368,"author":{"gitId":"brigittesantoso"},"content":"| `* *`    | Tech HR Recruiter | import details of applicants                     | easily transfer applicant details into my HRConnect |","lastModifiedDate":"2022-04-10"},{"lineNumber":369,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":374,"author":{"gitId":"rcjj98"},"content":"For all use cases below, the **System** is the `HRConnect` and the **Actor** is the `Tech HR Recruiter`, unless specified otherwise.","lastModifiedDate":"2022-04-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"rcjj98"},"content":"**Use case: UC1 - Add an applicant**","lastModifiedDate":"2022-04-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to add an applicant in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":382,"author":{"gitId":"brigittesantoso"},"content":"2. HRConnect adds the applicant to applicant list.","lastModifiedDate":"2022-04-09"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"rcjj98"},"content":"* 1a. The type provided is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"rcjj98"},"content":"  * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":391,"author":{"gitId":"rcjj98"},"content":"  * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":392,"author":{"gitId":"rcjj98"},"content":"  Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":393,"author":{"gitId":"rcjj98"},"content":"  Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":395,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":397,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":398,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":399,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":400,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":402,"author":{"gitId":"rcjj98"},"content":"**Use case: UC2 - Add an interview**","lastModifiedDate":"2022-04-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":404,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-02-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":406,"author":{"gitId":"rcjj98"},"content":"1. User requests to add an interview to the interview list.","lastModifiedDate":"2022-04-08"},{"lineNumber":407,"author":{"gitId":"rcjj98"},"content":"2. HRConnect adds the interview to interview list.","lastModifiedDate":"2022-04-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":409,"author":{"gitId":"brigittesantoso"},"content":"   Use case ends.","lastModifiedDate":"2022-02-28"},{"lineNumber":410,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":411,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":412,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":413,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-02-28"},{"lineNumber":414,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":415,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":416,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":417,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":418,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":419,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":420,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":421,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":422,"author":{"gitId":"rcjj98"},"content":"* 1b. The INDEX is out of bounds.","lastModifiedDate":"2022-04-08"},{"lineNumber":423,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":424,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for a valid INDEX.","lastModifiedDate":"2022-04-08"},{"lineNumber":425,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new INDEX. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":426,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the INDEX entered is valid. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":427,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":428,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":429,"author":{"gitId":"rcjj98"},"content":"**Use case: UC3 - Add a task**","lastModifiedDate":"2022-04-08"},{"lineNumber":430,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":431,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":432,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":433,"author":{"gitId":"rcjj98"},"content":"1. User requests to add a task to the task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":434,"author":{"gitId":"rcjj98"},"content":"2. HRConnect adds the task to task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":435,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":436,"author":{"gitId":"rcjj98"},"content":"   Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":437,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":438,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":439,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":440,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":441,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":442,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":443,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":444,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":445,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":446,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":447,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":448,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":449,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":450,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":451,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":452,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":453,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":454,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":455,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":456,"author":{"gitId":"rcjj98"},"content":"**Use case: UC4 - Delete an applicant**","lastModifiedDate":"2022-04-08"},{"lineNumber":457,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":458,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":459,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":460,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to delete an applicant from the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":461,"author":{"gitId":"brigittesantoso"},"content":"2. HRConnect deletes the applicant from the applicant list.","lastModifiedDate":"2022-04-09"},{"lineNumber":462,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":463,"author":{"gitId":"brigittesantoso"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":464,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":465,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":466,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":467,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":468,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":469,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":470,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":471,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":472,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":473,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":474,"author":{"gitId":"rcjj98"},"content":"* 1b. The INDEX is out of bounds.","lastModifiedDate":"2022-04-08"},{"lineNumber":475,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":476,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for a valid INDEX.","lastModifiedDate":"2022-04-08"},{"lineNumber":477,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new INDEX. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":478,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the INDEX entered is valid. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":479,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":480,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":481,"author":{"gitId":"rcjj98"},"content":"* 1c. The given applicant has an interview.","lastModifiedDate":"2022-04-08"},{"lineNumber":482,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":483,"author":{"gitId":"rcjj98"},"content":"    * 1c1. HRConnect requests for the user to delete the interview.","lastModifiedDate":"2022-04-08"},{"lineNumber":484,"author":{"gitId":"rcjj98"},"content":"    * 1c2. User deletes interview. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":485,"author":{"gitId":"rcjj98"},"content":"    Steps 1c1-1c2 are repeated until the correct interview has been deleted. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":486,"author":{"gitId":"rcjj98"},"content":"    Use case resumes from step 2.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":487,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":488,"author":{"gitId":"rcjj98"},"content":"**Use case: UC5 - Delete an interview**","lastModifiedDate":"2022-04-08"},{"lineNumber":489,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":490,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":491,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":492,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to delete a interview in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":493,"author":{"gitId":"rcjj98"},"content":"2. AddressBook deletes the interview from the interview list.","lastModifiedDate":"2022-04-08"},{"lineNumber":494,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":495,"author":{"gitId":"rcjj98"},"content":"   Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":496,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":497,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":498,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":499,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":500,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":501,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":502,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":503,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":504,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":505,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":506,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":507,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":508,"author":{"gitId":"rcjj98"},"content":"* 1b. The INDEX is out of bounds.","lastModifiedDate":"2022-04-08"},{"lineNumber":509,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":510,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for a valid INDEX.","lastModifiedDate":"2022-04-08"},{"lineNumber":511,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new INDEX. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":512,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the INDEX entered is valid. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":513,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":514,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":515,"author":{"gitId":"rcjj98"},"content":"**Use case: UC6 - Delete a task**","lastModifiedDate":"2022-04-08"},{"lineNumber":516,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":517,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":518,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":519,"author":{"gitId":"rcjj98"},"content":"1. User requests to delete a task from the task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":520,"author":{"gitId":"rcjj98"},"content":"2. HRConnect deletes the task from the task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":521,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":522,"author":{"gitId":"brigittesantoso"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":523,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":524,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":525,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":526,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":527,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":528,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":529,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":530,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":531,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":532,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":533,"author":{"gitId":"rcjj98"},"content":"* 1b. The INDEX is out of bounds.","lastModifiedDate":"2022-04-08"},{"lineNumber":534,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":535,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for a valid INDEX.","lastModifiedDate":"2022-04-08"},{"lineNumber":536,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new INDEX. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":537,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the INDEX entered is valid. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":538,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":539,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":540,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":541,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":542,"author":{"gitId":"rcjj98"},"content":"**Use case: UC7 - List applicant list**","lastModifiedDate":"2022-04-08"},{"lineNumber":543,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":544,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":545,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":546,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to list all applicants in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":547,"author":{"gitId":"rcjj98"},"content":"2. HRConnect displays list of applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":548,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":549,"author":{"gitId":"rcjj98"},"content":"   Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":550,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":551,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":552,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":553,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":554,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":555,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":556,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":557,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":558,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":559,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":560,"author":{"gitId":"rcjj98"},"content":"**Use case: UC8 - List interview list**","lastModifiedDate":"2022-04-08"},{"lineNumber":561,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":562,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":563,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":564,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to see all scheduled interviews in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":565,"author":{"gitId":"brigittesantoso"},"content":"2. HRConnect displays list of interviews.","lastModifiedDate":"2022-04-09"},{"lineNumber":566,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":567,"author":{"gitId":"brigittesantoso"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":568,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":569,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":570,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":571,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":572,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":573,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":574,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":575,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":576,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":577,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":578,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":579,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":580,"author":{"gitId":"rcjj98"},"content":"**Use case: UC9 - List task list**","lastModifiedDate":"2022-04-08"},{"lineNumber":581,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":582,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":583,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":584,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to see all tasks in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":585,"author":{"gitId":"brigittesantoso"},"content":"2. HRConnect displays list of tasks.","lastModifiedDate":"2022-04-09"},{"lineNumber":586,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":587,"author":{"gitId":"rcjj98"},"content":"   Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":588,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":589,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":590,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":591,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":592,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":593,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":594,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":595,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":596,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":597,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":598,"author":{"gitId":"rcjj98"},"content":"**Use case: UC10 - Clear applicant list**","lastModifiedDate":"2022-04-08"},{"lineNumber":599,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":600,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":601,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":602,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to clear all applicants in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":603,"author":{"gitId":"brigittesantoso"},"content":"2. HRConnect clears all applicants from applicant list.","lastModifiedDate":"2022-04-09"},{"lineNumber":604,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":605,"author":{"gitId":"brigittesantoso"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":606,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":607,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":608,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":609,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":610,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":611,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":612,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":613,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":614,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":615,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":616,"author":{"gitId":"brigittesantoso"},"content":"* 1b. The interview list is not empty.","lastModifiedDate":"2022-04-09"},{"lineNumber":617,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":618,"author":{"gitId":"brigittesantoso"},"content":"    * 1c1. HRConnect requests for the user to clear the interview list.","lastModifiedDate":"2022-04-09"},{"lineNumber":619,"author":{"gitId":"brigittesantoso"},"content":"    * 1c2. User clears interview list. \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":620,"author":{"gitId":"brigittesantoso"},"content":"      Steps 1c1-1c2 are repeated until the interview list has been cleared. \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":621,"author":{"gitId":"brigittesantoso"},"content":"      Use case resumes from step 2.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":622,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":623,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":624,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":625,"author":{"gitId":"rcjj98"},"content":"**Use case: UC11 - Clear interview list**","lastModifiedDate":"2022-04-08"},{"lineNumber":626,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":627,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":628,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":629,"author":{"gitId":"brigittesantoso"},"content":"1. User requests to clear all scheduled interviews in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":630,"author":{"gitId":"rcjj98"},"content":"2. HRConnect clears all interviews from interview list.","lastModifiedDate":"2022-04-08"},{"lineNumber":631,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":632,"author":{"gitId":"brigittesantoso"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":633,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":634,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":635,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":636,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":637,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":638,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":639,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":640,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":641,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":642,"author":{"gitId":"brigittesantoso"},"content":"    ","lastModifiedDate":"2022-03-23"},{"lineNumber":643,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":644,"author":{"gitId":"rcjj98"},"content":"**Use case: UC12 - Clear task list**","lastModifiedDate":"2022-04-08"},{"lineNumber":645,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":646,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":647,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":648,"author":{"gitId":"rcjj98"},"content":"1. User requests to clear all tasks from the task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":649,"author":{"gitId":"brigittesantoso"},"content":"2. HRConnect clears all tasks from task list.","lastModifiedDate":"2022-04-09"},{"lineNumber":650,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":651,"author":{"gitId":"brigittesantoso"},"content":"   Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":652,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":653,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":654,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":655,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":656,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":657,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":658,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":659,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":660,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":661,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":662,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":663,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":664,"author":{"gitId":"rcjj98"},"content":"**Use case: UC13 - Edit an applicant\u0027s particulars**","lastModifiedDate":"2022-04-08"},{"lineNumber":665,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":666,"author":{"gitId":"brigittesantoso"},"content":"**MSS**","lastModifiedDate":"2022-03-23"},{"lineNumber":667,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":668,"author":{"gitId":"rcjj98"},"content":"1.  User requests to update a specific applicants\u0027 details.","lastModifiedDate":"2022-04-08"},{"lineNumber":669,"author":{"gitId":"rcjj98"},"content":"2.  HRConnect shows applicant with their updated details.","lastModifiedDate":"2022-04-08"},{"lineNumber":670,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":671,"author":{"gitId":"brigittesantoso"},"content":"    Use case ends.","lastModifiedDate":"2022-03-23"},{"lineNumber":672,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":673,"author":{"gitId":"brigittesantoso"},"content":"**Extensions**","lastModifiedDate":"2022-03-23"},{"lineNumber":674,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":675,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":676,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":677,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":678,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":679,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":680,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":681,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":682,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":683,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":684,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":685,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":686,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":687,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":688,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":689,"author":{"gitId":"brigittesantoso"},"content":"* 1c. The given applicant has an interview.","lastModifiedDate":"2022-04-09"},{"lineNumber":690,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":691,"author":{"gitId":"brigittesantoso"},"content":"    * 1c1. HRConnect requests for the user to delete the interview.","lastModifiedDate":"2022-04-09"},{"lineNumber":692,"author":{"gitId":"brigittesantoso"},"content":"    * 1c2. User deletes interview. \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":693,"author":{"gitId":"brigittesantoso"},"content":"      Steps 1c1-1c2 are repeated until the correct interview has been deleted. \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":694,"author":{"gitId":"brigittesantoso"},"content":"      Use case resumes from step 2.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":695,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":696,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":697,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":698,"author":{"gitId":"rcjj98"},"content":"**Use case: UC14 - Edit an interview**","lastModifiedDate":"2022-04-08"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"rcjj98"},"content":"1.  User requests to update a specific interview.","lastModifiedDate":"2022-04-08"},{"lineNumber":703,"author":{"gitId":"rcjj98"},"content":"2.  HRConnect shows interview with it\u0027s updated details","lastModifiedDate":"2022-04-08"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":712,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":713,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":714,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":719,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":720,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":721,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":722,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":723,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":724,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":725,"author":{"gitId":"rcjj98"},"content":"**Use case: UC15 - Edit a task**","lastModifiedDate":"2022-04-08"},{"lineNumber":726,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":727,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":728,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":729,"author":{"gitId":"rcjj98"},"content":"1.  User requests to update a specific task.","lastModifiedDate":"2022-04-08"},{"lineNumber":730,"author":{"gitId":"rcjj98"},"content":"2.  HRConnect shows task with it\u0027s updated details","lastModifiedDate":"2022-04-08"},{"lineNumber":731,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":732,"author":{"gitId":"rcjj98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":733,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":734,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":735,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":736,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":737,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":738,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":739,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":740,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":741,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":742,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":743,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":744,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":745,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":746,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":747,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":748,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":749,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":750,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":751,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":752,"author":{"gitId":"rcjj98"},"content":"**Use case: UC16 - Find an applicant**","lastModifiedDate":"2022-04-08"},{"lineNumber":753,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":754,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":755,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":756,"author":{"gitId":"rcjj98"},"content":"1.  User requests to find a specific applicant.","lastModifiedDate":"2022-04-08"},{"lineNumber":757,"author":{"gitId":"rcjj98"},"content":"2.  HRConnect shows applicant with the specified details.","lastModifiedDate":"2022-04-08"},{"lineNumber":758,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":759,"author":{"gitId":"rcjj98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":760,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":761,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":762,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":763,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":764,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":765,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":766,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":767,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":768,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":769,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":770,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":771,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":772,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":773,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":774,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":775,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":776,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":777,"author":{"gitId":"rcjj98"},"content":"**Use case: UC17 - Find a scheduled interview**","lastModifiedDate":"2022-04-08"},{"lineNumber":778,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":779,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":780,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":781,"author":{"gitId":"rcjj98"},"content":"1.  User requests to find a specific interview.","lastModifiedDate":"2022-04-08"},{"lineNumber":782,"author":{"gitId":"rcjj98"},"content":"2.  HRConnect shows interview with the specified details","lastModifiedDate":"2022-04-08"},{"lineNumber":783,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":784,"author":{"gitId":"rcjj98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":785,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":786,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":787,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":788,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":790,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":792,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":793,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":794,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":795,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":796,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":797,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":798,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":799,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":800,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":801,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":802,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":803,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":804,"author":{"gitId":"rcjj98"},"content":"**Use case: UC18 - Find a task**","lastModifiedDate":"2022-04-08"},{"lineNumber":805,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":806,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":807,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":808,"author":{"gitId":"rcjj98"},"content":"1.  User requests to find a specific task.","lastModifiedDate":"2022-04-08"},{"lineNumber":809,"author":{"gitId":"rcjj98"},"content":"2.  HRConnect shows task with the specified details","lastModifiedDate":"2022-04-08"},{"lineNumber":810,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":811,"author":{"gitId":"rcjj98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":812,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":813,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":814,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":815,"author":{"gitId":"rcjj98"},"content":"* 1a. The type is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":816,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":817,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the correct type.","lastModifiedDate":"2022-04-08"},{"lineNumber":818,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new type. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":819,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":820,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":821,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":822,"author":{"gitId":"rcjj98"},"content":"* 1b. The details for some field(s) provided are invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":823,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":824,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for valid details.","lastModifiedDate":"2022-04-08"},{"lineNumber":825,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new details for field(s). \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":826,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the data entered are correct. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":827,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":828,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":829,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":830,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":831,"author":{"gitId":"brigittesantoso"},"content":"**Use case: UC19 - Export data from HRConnect**","lastModifiedDate":"2022-04-10"},{"lineNumber":832,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":833,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":834,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":835,"author":{"gitId":"rcjj98"},"content":"1.  User requests to export data.","lastModifiedDate":"2022-04-08"},{"lineNumber":836,"author":{"gitId":"rcjj98"},"content":"2.  HRConnect exports data to specified csv file.","lastModifiedDate":"2022-04-08"},{"lineNumber":837,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":838,"author":{"gitId":"rcjj98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":839,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":840,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":841,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":842,"author":{"gitId":"rcjj98"},"content":"* 1a. The filepath to csv file is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":843,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":844,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the valid filepath.","lastModifiedDate":"2022-04-08"},{"lineNumber":845,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new filepath. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":846,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the filepath entered is valid. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":847,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":848,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":849,"author":{"gitId":"rcjj98"},"content":"* 1b. The filename is missing a .csv file extension.","lastModifiedDate":"2022-04-08"},{"lineNumber":850,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":851,"author":{"gitId":"rcjj98"},"content":"    * 1b1. HRConnect requests for a valid filename with the correct file extension.","lastModifiedDate":"2022-04-08"},{"lineNumber":852,"author":{"gitId":"rcjj98"},"content":"    * 1b2. User enters new filename. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":853,"author":{"gitId":"rcjj98"},"content":"      Steps 1b1-1b2 are repeated until the filename entered is valid. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":854,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":855,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":856,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":857,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":858,"author":{"gitId":"brigittesantoso"},"content":"**Use case: UC20 - Import data to HRConnect**","lastModifiedDate":"2022-04-10"},{"lineNumber":859,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":860,"author":{"gitId":"rcjj98"},"content":"**MSS**","lastModifiedDate":"2022-04-08"},{"lineNumber":861,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":862,"author":{"gitId":"rcjj98"},"content":"1.  User requests to import data.","lastModifiedDate":"2022-04-08"},{"lineNumber":863,"author":{"gitId":"brigittesantoso"},"content":"2.  HRConnect shows all applicants imported into the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":864,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":865,"author":{"gitId":"rcjj98"},"content":"    Use case ends.","lastModifiedDate":"2022-04-08"},{"lineNumber":866,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":867,"author":{"gitId":"rcjj98"},"content":"**Extensions**","lastModifiedDate":"2022-04-08"},{"lineNumber":868,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":869,"author":{"gitId":"rcjj98"},"content":"* 1a. The filepath is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":870,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":871,"author":{"gitId":"rcjj98"},"content":"    * 1a1. HRConnect requests for the valid filepath.","lastModifiedDate":"2022-04-08"},{"lineNumber":872,"author":{"gitId":"rcjj98"},"content":"    * 1a2. User enters new filepath. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":873,"author":{"gitId":"rcjj98"},"content":"      Steps 1a1-1a2 are repeated until the filepath entered is valid. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":874,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":875,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":876,"author":{"gitId":"brigittesantoso"},"content":"* 1b. Duplicate applicant found in HRConnect","lastModifiedDate":"2022-04-10"},{"lineNumber":877,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":878,"author":{"gitId":"brigittesantoso"},"content":"    * 1a1. HRConnect alerts user that applicant is already in HRConnect and aborts the import.","lastModifiedDate":"2022-04-10"},{"lineNumber":879,"author":{"gitId":"brigittesantoso"},"content":"    * 1b1. User deletes applicant from HRConnect. (UC4)","lastModifiedDate":"2022-04-10"},{"lineNumber":880,"author":{"gitId":"rcjj98"},"content":"      Use case resumes from step 1. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"rcjj98"},"content":"* **Applicant**: A person who is applying for a job position in the company.","lastModifiedDate":"2022-04-09"},{"lineNumber":893,"author":{"gitId":"rcjj98"},"content":"* **Tech HR Recruiters**: A Human Resource employee that assists in the proper staffing of technical positions within an organization.","lastModifiedDate":"2022-04-09"},{"lineNumber":894,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"brigittesantoso"},"content":"* **CLI**: Command Line Interface, a text interface for your computer device","lastModifiedDate":"2022-04-11"},{"lineNumber":896,"author":{"gitId":"brigittesantoso"},"content":"* **GUI**: Graphic User Interface","lastModifiedDate":"2022-04-11"},{"lineNumber":897,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":900,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":928,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":929,"author":{"gitId":"eman-kom"},"content":"### Adding a Task","lastModifiedDate":"2022-04-06"},{"lineNumber":930,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":931,"author":{"gitId":"rcjj98"},"content":"1. Adding a Task into the task list. \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":932,"author":{"gitId":"brigittesantoso"},"content":"   1. Test case: `add [t] h/Update applicant statuses d/2021-05-06 t/10:10 i/Update statuses of all applicants from last week interviews` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":933,"author":{"gitId":"rcjj98"},"content":"    Expected: The task specified is added to the task list. Details of the added tasks shown in a message. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":934,"author":{"gitId":"rcjj98"},"content":"   ","lastModifiedDate":"2022-04-09"},{"lineNumber":935,"author":{"gitId":"brigittesantoso"},"content":"   2. Test case: `add [t] h/Update applicant statuses d/6th May 2021 t/10:10 i/Update statuses of all applicants from last week interviews` \u003cbr\u003e ","lastModifiedDate":"2022-04-09"},{"lineNumber":936,"author":{"gitId":"rcjj98"},"content":"   Expected: No task is added. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":937,"author":{"gitId":"rcjj98"},"content":"   ","lastModifiedDate":"2022-04-09"},{"lineNumber":938,"author":{"gitId":"brigittesantoso"},"content":"   3. Test case: `add [t] h/Update applicant statuses d/2021-05-06 t/10:10pm i/Update statuses of all applicants from last week interviews`","lastModifiedDate":"2022-04-09"},{"lineNumber":939,"author":{"gitId":"rcjj98"},"content":"   Expected: No task is added. Error details shown in the status message  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":940,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":941,"author":{"gitId":"brigittesantoso"},"content":"   4. Test case: `add [t] h/Update applicant statuses d/2021-05-06 t/10:10`","lastModifiedDate":"2022-04-09"},{"lineNumber":942,"author":{"gitId":"rcjj98"},"content":"      Expected: No task is added. Error details shown in the status message  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":943,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":944,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":945,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":946,"author":{"gitId":"eman-kom"},"content":"### Editing an Interview","lastModifiedDate":"2022-04-06"},{"lineNumber":947,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":948,"author":{"gitId":"rcjj98"},"content":"1. Editing an Interview in the interview list. \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":949,"author":{"gitId":"rcjj98"},"content":"    1. Test case: `edit [i] 1 d/2021-05-06 t/10:30` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":950,"author":{"gitId":"rcjj98"},"content":"       Expected: The interview specified is edited. Details of the edited interview shown in a message. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":951,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":952,"author":{"gitId":"rcjj98"},"content":"    2. Test case: `edit [i] 1 d/6th May 2021 t/10:30` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":953,"author":{"gitId":"rcjj98"},"content":"       Expected: No task is added. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":954,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":955,"author":{"gitId":"rcjj98"},"content":"    3. Test case: `edit [i] 1 d/2021-05-06 t/10:30pm` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":956,"author":{"gitId":"rcjj98"},"content":"       Expected: No task is added. Error details shown in the status message  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":957,"author":{"gitId":"rcjj98"},"content":"   ","lastModifiedDate":"2022-04-09"},{"lineNumber":958,"author":{"gitId":"rcjj98"},"content":"    4. Test case: `edit [i] 1 d/2021-05-06` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":959,"author":{"gitId":"rcjj98"},"content":"       Expected: No task is added. Error details shown in the status message  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":960,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":961,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":962,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":963,"author":{"gitId":"rcjj98"},"content":"### Deleting a job applicant with a scheduled interview","lastModifiedDate":"2022-04-09"},{"lineNumber":964,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":965,"author":{"gitId":"brigittesantoso"},"content":"1. Add an applicant to an empty HRConnect","lastModifiedDate":"2022-04-10"},{"lineNumber":966,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":967,"author":{"gitId":"rcjj98"},"content":"    1a. `add [p] n/John Doe p/01234567 e/johnd@example.com a/Pasir Ris BLK121 j/Software Engineer s/INPROGRESS`","lastModifiedDate":"2022-04-09"},{"lineNumber":968,"author":{"gitId":"rcjj98"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":969,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":970,"author":{"gitId":"rcjj98"},"content":"2. Schedule an interview for John Doe","lastModifiedDate":"2022-04-09"},{"lineNumber":971,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":972,"author":{"gitId":"rcjj98"},"content":"   2a. `add [i] 1 d/2021-05-06 t/10:30`","lastModifiedDate":"2022-04-09"},{"lineNumber":973,"author":{"gitId":"rcjj98"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":974,"author":{"gitId":"rcjj98"},"content":"    ","lastModifiedDate":"2022-04-09"},{"lineNumber":975,"author":{"gitId":"brigittesantoso"},"content":"3. Delete John Doe from HRConnect","lastModifiedDate":"2022-04-10"},{"lineNumber":976,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":977,"author":{"gitId":"rcjj98"},"content":"   3a. Test case: Do 3a1 then 3a2 \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":978,"author":{"gitId":"rcjj98"},"content":"       3a1. `delete [i] 1` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":979,"author":{"gitId":"rcjj98"},"content":"       3a2.`delete [p] 1` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":980,"author":{"gitId":"brigittesantoso"},"content":"       Expected: John Doe removed from HRConnect. Details of deleted applicant shown in the status message.  ","lastModifiedDate":"2022-04-10"},{"lineNumber":981,"author":{"gitId":"rcjj98"},"content":"       \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":982,"author":{"gitId":"rcjj98"},"content":"   3b. Test case:`delete [p] 1` \u003cbr\u003e ","lastModifiedDate":"2022-04-09"},{"lineNumber":983,"author":{"gitId":"brigittesantoso"},"content":"    Expected: No applicant deleted from HRConnect. Error details shown in the status message  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":984,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":985,"author":{"gitId":"eman-kom"},"content":"### Clearing all Job Applicants ","lastModifiedDate":"2022-04-06"},{"lineNumber":986,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":987,"author":{"gitId":"brigittesantoso"},"content":"1. Clear all applicants in HRConnect with 0 scheduled interviews in interview list.","lastModifiedDate":"2022-04-10"},{"lineNumber":988,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":989,"author":{"gitId":"rcjj98"},"content":"    1a. Test case: `clear [p]`  \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":990,"author":{"gitId":"brigittesantoso"},"content":"    Expected: All applicants cleared from HRConnect. Message indicating successful clearing of all applicants shown in status window","lastModifiedDate":"2022-04-10"},{"lineNumber":991,"author":{"gitId":"rcjj98"},"content":"       \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":992,"author":{"gitId":"rcjj98"},"content":"    ","lastModifiedDate":"2022-04-09"},{"lineNumber":993,"author":{"gitId":"brigittesantoso"},"content":"2. Clear all applicants in HRConnect with 1 or more interview(s) in interview list.","lastModifiedDate":"2022-04-10"},{"lineNumber":994,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":995,"author":{"gitId":"rcjj98"},"content":"    2a. Test case: `clear [p]` \u003cbr\u003e ","lastModifiedDate":"2022-04-09"},{"lineNumber":996,"author":{"gitId":"brigittesantoso"},"content":"    Expected: No applicants cleared from HRConnect. Error details shown in the status message  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":997,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":998,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":999,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1000,"author":{"gitId":"rcjj98"},"content":"### Finding a Job Applicant","lastModifiedDate":"2022-04-09"},{"lineNumber":1001,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1002,"author":{"gitId":"rcjj98"},"content":"1. Finding all applicants in the ACCEPTED stage. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1003,"author":{"gitId":"rcjj98"},"content":"    1a. Test case: `find [p] g/ s/ACCEPTED` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1004,"author":{"gitId":"rcjj98"},"content":"       Expected: All applicants in the ACCEPTED stage are listed. Details of found applicants shown in status message. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1005,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":1006,"author":{"gitId":"rcjj98"},"content":"    1b. Test case: `find [p] g/ ACCEPTED` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1007,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"rcjj98"},"content":"    1c. Test case: `find [p] s/ACCEPTED`","lastModifiedDate":"2022-04-09"},{"lineNumber":1010,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1012,"author":{"gitId":"rcjj98"},"content":"    1d. Test case: `find g/ s/ACCEPTED`","lastModifiedDate":"2022-04-09"},{"lineNumber":1013,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"rcjj98"},"content":"2. Finding all applicants applying for Computer System Analyst job position **and** in the ACCEPTED stage. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1017,"author":{"gitId":"rcjj98"},"content":"    2a. Test case: `find [p] g/ j/Computer System Analyst s/ACCEPTED` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1018,"author":{"gitId":"rcjj98"},"content":"       Expected: All applicants in the ACCEPTED stage are listed. Details of found applicants shown in status message. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1020,"author":{"gitId":"rcjj98"},"content":"    2b. Test case: `find [p] g/ Computer System Analyst s/ACCEPTED` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1021,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"rcjj98"},"content":"    2c. Test case: `find [p] j/Computer System Analyst s/ACCEPTED`","lastModifiedDate":"2022-04-09"},{"lineNumber":1024,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1026,"author":{"gitId":"rcjj98"},"content":"    2d. Test case: `find g/ j/Computer System Analyst s/ACCEPTED`","lastModifiedDate":"2022-04-09"},{"lineNumber":1027,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1030,"author":{"gitId":"rcjj98"},"content":"3. Finding all applicants applying for Computer Systems Analyst job position **or** in the ACCEPTED stage. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1031,"author":{"gitId":"rcjj98"},"content":"    3a. Test case: `find [p] g/ j/Computer Systems Analyst g/ s/ACCEPTED` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1032,"author":{"gitId":"rcjj98"},"content":"       Expected: All applicants in the ACCEPTED stage are listed. Details of found applicants shown in status message. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1034,"author":{"gitId":"rcjj98"},"content":"    3b. Test case: `find [p] g/ Computer Systems Analyst g/ s/ACCEPTED` \u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1035,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1037,"author":{"gitId":"rcjj98"},"content":"    3c. Test case: `find [p] j/Computer Systems Analyst s/ACCEPTED`","lastModifiedDate":"2022-04-09"},{"lineNumber":1038,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1040,"author":{"gitId":"rcjj98"},"content":"    3d. Test case: `find g/ j/Computer Systems Analyst g/ s/ACCEPTED`","lastModifiedDate":"2022-04-09"},{"lineNumber":1041,"author":{"gitId":"rcjj98"},"content":"       Expected: No applicant found. Error details shown in the status message \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-09"}],"authorContributionMap":{"brigittesantoso":234,"imrajsinghsandhu":6,"eman-kom":103,"-":286,"rcjj98":412}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [HRConnect’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"brigittesantoso":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"HRConnect is a desktop application for managing the contacts of job applicants. \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"It can also be used to keep track of: \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"* stage progress of each applicant during the application process","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"* interviews with each applicant","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"* miscellaneous tasks that need to be completed","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"![combined](images/alltogether.PNG)","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"\u003ch1\u003eTable Of Contents\u003c/h1\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"# Quick Start","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"1. Ensure you have `Java 11` or above installed in your computer.","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"2. Download the latest `HRConnect.jar` from \u003ca href\u003d\"https://github.com/AY2122S2-CS2103T-W11-2/tp/releases\"\u003ehere\u003c/a\u003e","lastModifiedDate":"2022-04-03"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your HRConnect.","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data. \u003cbr\u003e ![Ui](images/Ui.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"5. Type your command into the command box and press `Enter` to execute it.\u003cbr\u003e Some sample commands to try:","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"rcjj98"},"content":"    * `add [p] n/Bob Tan p/98765876 e/bot@gmail.com a/262 Serangoon Central Drive 1-125","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"      j/Software Developer s/INPROGRESS`: Adds a new applicant, Bob Tan, to the applicant list","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"    * `list [p]`: Lists all applicants","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    * `delete [i] 1`: Deletes interview index 1 from the interview list","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    * `clear [i]`: Clear all interviews","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    * `exit`: Exits the app","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"6. Refer to [Features](#features) section directly below for details on each command.","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"# Features","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"**:information_source: Notes about the command format regarding Features:**\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"* Items in angle brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"rcjj98"},"content":"  e.g n/NAME \u003cp/PHONE_NUMBER\u003e can be used as n/John Doe p/PHONE_NUMBER or as n/John Doe.","lastModifiedDate":"2022-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"  e.g. in add n/NAME, NAME is a parameter which can be used as add n/John Doe.","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"* Items with ellipsis (...) after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"rcjj98"},"content":"  e.g. \u003ca/ADDRESS\u003e... can be used as   (i.e. 0 times), a/ADDRESS, a/ADDRESS etc.","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"* Parameters can be supplied in any order.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"rcjj98"},"content":"  e.g. if the command requires n/NAME p/PHONE_NUMBER, \u003cbr\u003e p/PHONE_NUMBER n/NAME is also acceptable.","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"  e.g. if you specify p/12341234 p/56785678, only p/56785678 will be taken.","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"## General Features","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"----------","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"**:information_source: Notes about the command format regarding General Features:**\u003cbr\u003e","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"* Extraneous parameters for commands that do not take in parameters (e.g. `help` and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"### Viewing Help: `help`","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"Shows a message explaining how to access the help page and the basic flags.","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"Format: `help`","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"Exits the program.","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"Format: `exit`","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"## Applicant Features","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"----------","lastModifiedDate":"2022-04-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"**:information_source: Notes about the Applicant List:**\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"* Applicant list is sorted in order in which the applicant was added into the list.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"  e.g If Alex Tan was added before Alex Wong, Alex Tan would be listed before Alex Wong.","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":101,"author":{"gitId":"rcjj98"},"content":"### Adding a new job applicant: `add [p]`","lastModifiedDate":"2022-04-01"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"Adds a new job applicant to the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"rcjj98"},"content":"Format: `add [p] n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS j/JOB_POSITION s/STAGE`","lastModifiedDate":"2022-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"* Duplicate applicants **cannot** be added. Applicants are considered to be duplicates if they share the **same name (case-insensitive)**. \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"e.g. `Alex Tan` and `alex tan` are duplicate applicants.","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"* If the `NAME` input contain empty spaces, it will be trimmed and each applicant will be considered as a duplicate even if their names differ in the amount of empty spaces. Let `(space)` denote an empty space. \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"e.g. `Alex(space)Tan` and `Alex(space)(space)Tan` are duplicate applicants. \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"e.g. `Alex(space)Tan` and `AlexTan` are NOT duplicate applicants as `AlexTan` does not have any empty spaces.","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":116,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"imrajsinghsandhu"},"content":"`add [p] n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 j/Software Developer s/INPROGRESS`","lastModifiedDate":"2022-04-06"},{"lineNumber":118,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":119,"author":{"gitId":"eman-kom"},"content":"![add-applicant](images/add-applicant.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"rcjj98"},"content":"### Editing a job applicant: `edit [p]`","lastModifiedDate":"2022-04-01"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"Edits an existing job applicant in the HRConnect","lastModifiedDate":"2022-04-10"},{"lineNumber":124,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":":exclamation: **Take note: Cannot edit an applicant if he/she has an interview scheduled.**","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"Format: `edit [p] INDEX \u003cn/NAME\u003e \u003cp/PHONE_NUMBER\u003e \u003ce/EMAIL\u003e \u003ca/ADDRESS\u003e \u003cj/JOB_POSITION\u003e \u003cs/STAGE\u003e`","lastModifiedDate":"2022-04-10"},{"lineNumber":128,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"* Edits the applicant at the specified `INDEX`. `INDEX` refers to the numerical position of the **applicant in the applicant list**. `INDEX` **must** be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-04-08"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"* At least **one** of the optional fields must be provided.","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"* Existing values will be updated to the input values. If input value is same as existing value, success message will still be shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"`edit [p] 2 n/Amanda Tan j/Software Developer s/INPROGRESS` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"Before","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"![edit](images/before-edit-contact-3.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":142,"author":{"gitId":"brigittesantoso"},"content":"After","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"![edit](images/after-edit-contact-3.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":147,"author":{"gitId":"rcjj98"},"content":"### Deleting job applicant: `delete [p]`","lastModifiedDate":"2022-04-01"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"Deletes an existing job applicant from the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":149,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":":exclamation: **Take note: Cannot delete an applicant if he/she has an interview scheduled.**","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"Format: `delete [p] INDEX`","lastModifiedDate":"2022-04-01"},{"lineNumber":153,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"* Deletes the applicant at the specified `INDEX`. `INDEX` refers to the numerical position of the **applicant in the applicant list**.`INDEX` **must** be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-04-08"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":156,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"`delete [p] 1`","lastModifiedDate":"2022-04-10"},{"lineNumber":158,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"### Listing all job applicants: `list [p]`","lastModifiedDate":"2022-04-01"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"Shows a list of all job applicants in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":163,"author":{"gitId":"rcjj98"},"content":"Format: `list [p]`","lastModifiedDate":"2022-04-05"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"### Clearing all job applicants: `clear [p]`","lastModifiedDate":"2022-04-01"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"Clears all job applicants from the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":":exclamation: **Take note: Cannot clear applicant list if interview list is not empty.**","lastModifiedDate":"2022-04-08"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"Format: `clear [p]`","lastModifiedDate":"2022-04-01"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"* Clear command does not throw an error even if applicant list is already empty and success message will still be shown.","lastModifiedDate":"2022-04-08"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":177,"author":{"gitId":"eman-kom"},"content":"### Finding job applicant(s) by search terms: `find [p]`","lastModifiedDate":"2022-04-10"},{"lineNumber":178,"author":{"gitId":"eman-kom"},"content":"Finds job applicants with data containing any of the specified search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":179,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":180,"author":{"gitId":"eman-kom"},"content":"Use `g/` flags to find job applicants whose data contain **all** the search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":181,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"eman-kom"},"content":":bulb: Tip: Use multiple `g/` flags as an **OR** command (e.g. `find [p] g/n/alex g/j/software developer g/s/INPROGRESS`)","lastModifiedDate":"2022-04-03"},{"lineNumber":183,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":184,"author":{"gitId":"eman-kom"},"content":"Format: `find [p] g/SEARCH_TERM \u003cSEARCH_TERM\u003e... \u003cg/SEARCH_TERM \u003cSEARCH_TERM\u003e...\u003e...`","lastModifiedDate":"2022-04-10"},{"lineNumber":185,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":186,"author":{"gitId":"eman-kom"},"content":"* `find [p]` **is required** to start with a `g/` flag.","lastModifiedDate":"2022-04-10"},{"lineNumber":187,"author":{"gitId":"eman-kom"},"content":"* Finding job applicants `[p]` **only** accepts `g/`, `n/`, `p/`, `e/`, `a/`, `j/`, and `s/` flags.","lastModifiedDate":"2022-04-10"},{"lineNumber":188,"author":{"gitId":"eman-kom"},"content":"* If a SEARCH_TERM without a flag (e.g. `find [p] g/alex`) is used, an error will be raised.","lastModifiedDate":"2022-04-10"},{"lineNumber":189,"author":{"gitId":"eman-kom"},"content":"* SEARCH_TERMs are still required to follow the format as defined as by their respective flags.","lastModifiedDate":"2022-04-10"},{"lineNumber":190,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":192,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":193,"author":{"gitId":"imrajsinghsandhu"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":194,"author":{"gitId":"brigittesantoso"},"content":"`find [p] g/s/ACCEPTED g/n/John Doe` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":195,"author":{"gitId":"eman-kom"},"content":"`find [p] s/ACCEPTED OR n/John Doe`  \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":196,"author":{"gitId":"rcjj98"},"content":"![find](images/find-applicant-OR-example.png) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":197,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":198,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":199,"author":{"gitId":"brigittesantoso"},"content":"`find [p] g/j/Software Developer s/REJECTED` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":200,"author":{"gitId":"brigittesantoso"},"content":"`find [p] j/Software Developer AND s/REJECTED` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":201,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-applicant-AND-example.png) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":202,"author":{"gitId":"brigittesantoso"},"content":"`find [p] g/j/Software Developer s/REJECTED g/n/John Doe` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":203,"author":{"gitId":"eman-kom"},"content":"`find [p] (j/Software Developer AND s/REJECTED) OR n/John Doe` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":204,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-applicant-AND-OR-example.png) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":205,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":206,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":207,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":208,"author":{"gitId":"rcjj98"},"content":"## Interview Features","lastModifiedDate":"2022-04-01"},{"lineNumber":209,"author":{"gitId":"eman-kom"},"content":"----------","lastModifiedDate":"2022-04-06"},{"lineNumber":210,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":211,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":212,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":213,"author":{"gitId":"brigittesantoso"},"content":"**:information_source: Notes about the Interview List:**\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":214,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"brigittesantoso"},"content":"* Interview list is sorted in date time chronological order.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":216,"author":{"gitId":"brigittesantoso"},"content":"  e.g An interview scheduled on 29 March 2020 is listed before an interview scheduled on 2 April 2020.","lastModifiedDate":"2022-04-08"},{"lineNumber":217,"author":{"gitId":"brigittesantoso"},"content":"* Interview list can contain interviews with date and time before the current date and time. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":218,"author":{"gitId":"brigittesantoso"},"content":"  e.g. If current date time is 4 April 2022, interview list can still contain interview with date 30 March 2022.","lastModifiedDate":"2022-04-06"},{"lineNumber":219,"author":{"gitId":"brigittesantoso"},"content":"* Interview list can contain interviews with applicants in any stages. \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":220,"author":{"gitId":"brigittesantoso"},"content":"  e.g. A rejected applicant can still be scheduled for an interview.","lastModifiedDate":"2022-04-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":224,"author":{"gitId":"rcjj98"},"content":"### Adding a new interview slot for a job applicant: `add [i]`","lastModifiedDate":"2022-04-01"},{"lineNumber":225,"author":{"gitId":"brigittesantoso"},"content":"Adds a new job interview slot to the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":227,"author":{"gitId":"brigittesantoso"},"content":":exclamation: **Take note: Only can add an interview for an applicant that is present in applicant list.**","lastModifiedDate":"2022-04-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":229,"author":{"gitId":"brigittesantoso"},"content":"Format: `add [i] INDEX d/DATE t/TIME`","lastModifiedDate":"2022-04-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":231,"author":{"gitId":"brigittesantoso"},"content":"* `INDEX` refers to the numerical position of the **applicant in the applicant list**. `INDEX` **must** be a positive integer 1, 2, 3, …​\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":232,"author":{"gitId":"brigittesantoso"},"content":"* `TIME` refers to the start time of the interview. Duration of each interview is not fixed so a minute time gap between interviews is also allowed.","lastModifiedDate":"2022-04-08"},{"lineNumber":233,"author":{"gitId":"brigittesantoso"},"content":"* Duplicate interviews **cannot** be added. Interviews are considered to be duplicates if they share the **same date AND time**. \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":234,"author":{"gitId":"brigittesantoso"},"content":"e.g. `add [i] 1 d/2021-06-25 t/17:30` and `add [i] 2 d/2021-06-25 t/17:30` are adding duplicate interviews. \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":235,"author":{"gitId":"brigittesantoso"},"content":"e.g. `add [i] 1 d/2021-06-25 t/17:30` and `add [i] 1 d/2021-06-30 t/12:30` are **NOT** adding duplicate interviews as the same applicant can have more than 1 interview as long as it is not the same date and time.","lastModifiedDate":"2022-04-10"},{"lineNumber":236,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":237,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":238,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":239,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":240,"author":{"gitId":"imrajsinghsandhu"},"content":"`add [i] 1 d/2021-06-25 t/17:30`","lastModifiedDate":"2022-04-06"},{"lineNumber":241,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":242,"author":{"gitId":"rcjj98"},"content":"![add-interview](images/add-interview.png)","lastModifiedDate":"2022-04-01"},{"lineNumber":243,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":244,"author":{"gitId":"rcjj98"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":245,"author":{"gitId":"rcjj98"},"content":"### Editing an existing interview slot: `edit [i]`","lastModifiedDate":"2022-04-01"},{"lineNumber":246,"author":{"gitId":"brigittesantoso"},"content":"Edits an existing interview slot in the HRConnect","lastModifiedDate":"2022-04-10"},{"lineNumber":247,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":248,"author":{"gitId":"brigittesantoso"},"content":"Format: `edit [i] INDEX \u003cd/DATE\u003e \u003ct/TIME\u003e`","lastModifiedDate":"2022-04-10"},{"lineNumber":249,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":250,"author":{"gitId":"brigittesantoso"},"content":"* Edits the interview at the specified `INDEX`. `INDEX` refers to the numerical position of the **interview in the interview list**. `INDEX` **must** be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-04-08"},{"lineNumber":251,"author":{"gitId":"brigittesantoso"},"content":"* `TIME` refers to the start time of the interview. Duration of each interview is not fixed so a minute time gap between interviews is also allowed.","lastModifiedDate":"2022-04-08"},{"lineNumber":252,"author":{"gitId":"brigittesantoso"},"content":"* At least **one** of the optional fields must be provided. ","lastModifiedDate":"2022-04-08"},{"lineNumber":253,"author":{"gitId":"brigittesantoso"},"content":"* Existing values will be updated to the input values. If input value is same as existing value, success message will still be shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":255,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":256,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":258,"author":{"gitId":"brigittesantoso"},"content":"Example: \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":259,"author":{"gitId":"rcjj98"},"content":"`edit [i] 1 d/2021-12-30 t/10:30` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":261,"author":{"gitId":"brigittesantoso"},"content":"Before","lastModifiedDate":"2022-04-07"},{"lineNumber":262,"author":{"gitId":"brigittesantoso"},"content":"![edit-interview](images/edit-interview-1.PNG)","lastModifiedDate":"2022-04-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":264,"author":{"gitId":"brigittesantoso"},"content":"After","lastModifiedDate":"2022-04-07"},{"lineNumber":265,"author":{"gitId":"brigittesantoso"},"content":"![edit-interview](images/edit-interview.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":266,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":267,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":268,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":269,"author":{"gitId":"rcjj98"},"content":"### Deleting an interview slot: `delete [i]`","lastModifiedDate":"2022-04-01"},{"lineNumber":270,"author":{"gitId":"brigittesantoso"},"content":"Deletes an existing interview slot in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":271,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":272,"author":{"gitId":"rcjj98"},"content":"Format: `delete [i] INDEX`","lastModifiedDate":"2022-04-01"},{"lineNumber":273,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":274,"author":{"gitId":"brigittesantoso"},"content":"* Deletes the interview at the specified `INDEX`. `INDEX` refers to the numerical position of the **interview in the interview list**. `INDEX` **must** be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-04-08"},{"lineNumber":275,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":276,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":277,"author":{"gitId":"imrajsinghsandhu"},"content":"`delete [i] 1`","lastModifiedDate":"2022-04-06"},{"lineNumber":278,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":279,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":280,"author":{"gitId":"brigittesantoso"},"content":"### Listing all scheduled interviews: `list [i]`","lastModifiedDate":"2022-04-01"},{"lineNumber":281,"author":{"gitId":"brigittesantoso"},"content":"Shows a list of all scheduled interviews in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":282,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":283,"author":{"gitId":"rcjj98"},"content":"Format: `list [i]`","lastModifiedDate":"2022-04-05"},{"lineNumber":284,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":285,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":286,"author":{"gitId":"brigittesantoso"},"content":"### Clearing all interviews: `clear [i]`","lastModifiedDate":"2022-04-01"},{"lineNumber":287,"author":{"gitId":"brigittesantoso"},"content":"Clears all interviews from the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":288,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":289,"author":{"gitId":"brigittesantoso"},"content":"Format: `clear [i]`","lastModifiedDate":"2022-04-01"},{"lineNumber":290,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":291,"author":{"gitId":"brigittesantoso"},"content":"* Clear command does not throw an error even if interview list is already empty and success message will still be shown.","lastModifiedDate":"2022-04-08"},{"lineNumber":292,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":293,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":294,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":295,"author":{"gitId":"eman-kom"},"content":"### Finding scheduled interview slot(s) by search terms: `find [i]`","lastModifiedDate":"2022-04-10"},{"lineNumber":296,"author":{"gitId":"eman-kom"},"content":"Finds interview slots with data containing any of the specified search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":297,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":298,"author":{"gitId":"eman-kom"},"content":"Use `g/` flags to find interview slot(s) with data containing **all** the search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":299,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":300,"author":{"gitId":"eman-kom"},"content":":bulb: Hint: Use multiple `g/` flags to simulate an **OR** command (e.g. `find [i] g/n/alex g/d/2022-01-20 g/t/15:03`)","lastModifiedDate":"2022-04-10"},{"lineNumber":301,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":302,"author":{"gitId":"eman-kom"},"content":"Format: `find [i] g/SEARCH_TERM \u003cSEARCH_TERM\u003e... \u003cg/SEARCH_TERM \u003cSEARCH_TERM\u003e...\u003e...`","lastModifiedDate":"2022-04-10"},{"lineNumber":303,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":304,"author":{"gitId":"eman-kom"},"content":"* `find [i]` **is required** to start with a `g/` flag.","lastModifiedDate":"2022-04-10"},{"lineNumber":305,"author":{"gitId":"eman-kom"},"content":"* Finding interviews `[i]` **only** accepts `g/`, `n/`, `d/`, `t/`, and `j/` flags.","lastModifiedDate":"2022-04-11"},{"lineNumber":306,"author":{"gitId":"eman-kom"},"content":"* If a SEARCH_TERM without a flag (e.g. `find [i] g/alex`) is used, an error will be raised.","lastModifiedDate":"2022-04-10"},{"lineNumber":307,"author":{"gitId":"eman-kom"},"content":"* SEARCH_TERMs are still required to follow the format as defined as by their respective flags.","lastModifiedDate":"2022-04-10"},{"lineNumber":308,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":309,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":310,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":311,"author":{"gitId":"imrajsinghsandhu"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":312,"author":{"gitId":"brigittesantoso"},"content":"`find [i] g/n/Amanda Tan g/j/Software Developer g/t/10:10` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":313,"author":{"gitId":"brigittesantoso"},"content":"`find [i] n/Amanda Tan OR j/Software Developer OR t/10:10` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":314,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-interview-OR-example.PNG) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":315,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":316,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":317,"author":{"gitId":"brigittesantoso"},"content":"`find [i] g/n/Amanda Tan j/Software Developer t/10:10` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":318,"author":{"gitId":"brigittesantoso"},"content":"`find [i] n/Amanda Tan AND j/Software Developer AND t/10:10` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":319,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-interview-AND-example.PNG) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":320,"author":{"gitId":"brigittesantoso"},"content":"`find [i] g/n/Amanda Tan j/Software Developer g/t/10:10` is logically equivalent to ","lastModifiedDate":"2022-04-10"},{"lineNumber":321,"author":{"gitId":"brigittesantoso"},"content":"`find [i] (n/Amanda Tan AND g/j/Software Developer) OR t/10:10` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":322,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-interview-AND-OR-example.PNG) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":323,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":324,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":325,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":326,"author":{"gitId":"brigittesantoso"},"content":"## Task Features","lastModifiedDate":"2022-04-01"},{"lineNumber":327,"author":{"gitId":"eman-kom"},"content":"----------","lastModifiedDate":"2022-04-06"},{"lineNumber":328,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":329,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":330,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":331,"author":{"gitId":"brigittesantoso"},"content":"**:information_source: Notes about the Task List:**\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":332,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":333,"author":{"gitId":"brigittesantoso"},"content":"* Task list is sorted in date time chronological order.\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":334,"author":{"gitId":"brigittesantoso"},"content":"  e.g An task scheduled on 29 March 2020 is listed before a task scheduled on 2 April 2020.","lastModifiedDate":"2022-04-08"},{"lineNumber":335,"author":{"gitId":"brigittesantoso"},"content":"* Task list can contain tasks with date and time before the current date and time. \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":336,"author":{"gitId":"brigittesantoso"},"content":"  e.g. If current date time is 4 April 2022, task list can still contain task with date 30 March 2022.","lastModifiedDate":"2022-04-06"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":338,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":340,"author":{"gitId":"brigittesantoso"},"content":"### Adding a new task to the miscellaneous task list: `add [t]`","lastModifiedDate":"2022-04-01"},{"lineNumber":341,"author":{"gitId":"brigittesantoso"},"content":"Adds a new task to the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":343,"author":{"gitId":"brigittesantoso"},"content":"Format: `add [t] h/HEADER d/DATE t/TIME i/INFORMATION` ","lastModifiedDate":"2022-04-10"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":345,"author":{"gitId":"brigittesantoso"},"content":"* `DATE` and `TIME` refers to the due date and time of the task.","lastModifiedDate":"2022-04-08"},{"lineNumber":346,"author":{"gitId":"brigittesantoso"},"content":"* Duplicate tasks **cannot** be added. Tasks are considered to be duplicates if they share the **same header (case-insensitive) AND date AND time**. \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":347,"author":{"gitId":"brigittesantoso"},"content":"e.g. `add [t] h/Update interview list d/2021-06-25 t/17:30 i/Update half of the interview list` and `add [t] h/Update interview list d/2021-06-25 t/17:30 i/Update the entire interview list` are adding duplicate interviews.","lastModifiedDate":"2022-04-06"},{"lineNumber":348,"author":{"gitId":"brigittesantoso"},"content":"* If the `HEADER` input contain empty spaces, it will be trimmed and each header will be considered as a duplicate even if their header differ in the amount of empty spaces. Let `(space)` denote an empty space. \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":349,"author":{"gitId":"brigittesantoso"},"content":"e.g. `Update(space)interview(space)list` and \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":350,"author":{"gitId":"brigittesantoso"},"content":"`Update(space)(space)interview(space)list` are duplicate headers. \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":351,"author":{"gitId":"brigittesantoso"},"content":"e.g. `Update(space)interview(space)list` and `Updateinterviewlist` are NOT duplicate headers as `Updateinterviewlist` does not have any empty spaces.","lastModifiedDate":"2022-04-10"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":353,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":355,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":357,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":358,"author":{"gitId":"brigittesantoso"},"content":"`add [t] h/Add interview slots d/2022-04-01 t/17:30 i/Add all interviews happening in the following week`","lastModifiedDate":"2022-04-06"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":360,"author":{"gitId":"brigittesantoso"},"content":"![add-task](images/add-task.PNG)","lastModifiedDate":"2022-04-06"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":362,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":363,"author":{"gitId":"brigittesantoso"},"content":"### Editing an existing task: `edit [t]`","lastModifiedDate":"2022-04-01"},{"lineNumber":364,"author":{"gitId":"brigittesantoso"},"content":"Edits an existing task in the HRConnect","lastModifiedDate":"2022-04-10"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":366,"author":{"gitId":"brigittesantoso"},"content":"Format: `edit [t] INDEX \u003ch/HEADER\u003e \u003cd/DATE\u003e \u003ct/TIME\u003e \u003ci/INFORMATION\u003e` ","lastModifiedDate":"2022-04-10"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":368,"author":{"gitId":"brigittesantoso"},"content":"* `DATE` and `TIME` refers to the due date and time of the task.","lastModifiedDate":"2022-04-08"},{"lineNumber":369,"author":{"gitId":"brigittesantoso"},"content":"* Edits the task at the specified `INDEX`. `INDEX` refers to the numerical position of the **task in the task list**. `INDEX` **must** be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-04-08"},{"lineNumber":370,"author":{"gitId":"brigittesantoso"},"content":"* At least **one** of the optional fields must be provided.","lastModifiedDate":"2022-04-08"},{"lineNumber":371,"author":{"gitId":"brigittesantoso"},"content":"* Existing values will be updated to the input values. If input value is same as existing value, success message will still be shown.","lastModifiedDate":"2022-04-09"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":373,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":374,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":376,"author":{"gitId":"brigittesantoso"},"content":"Example: \u003cbr\u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":377,"author":{"gitId":"brigittesantoso"},"content":"`edit [t] 1 d/2021-12-30 t/10:30` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":379,"author":{"gitId":"brigittesantoso"},"content":"Before","lastModifiedDate":"2022-04-07"},{"lineNumber":380,"author":{"gitId":"brigittesantoso"},"content":"![edit-task-2](images/edit-task-2.PNG)","lastModifiedDate":"2022-04-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":382,"author":{"gitId":"brigittesantoso"},"content":"After","lastModifiedDate":"2022-04-07"},{"lineNumber":383,"author":{"gitId":"brigittesantoso"},"content":"![edit-task](images/edit-task.PNG)","lastModifiedDate":"2022-04-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":385,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":387,"author":{"gitId":"brigittesantoso"},"content":"### Deleting a task: `delete [t]`","lastModifiedDate":"2022-04-01"},{"lineNumber":388,"author":{"gitId":"brigittesantoso"},"content":"Deletes an existing task in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":390,"author":{"gitId":"brigittesantoso"},"content":"Format: `delete [t] INDEX`","lastModifiedDate":"2022-04-01"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":392,"author":{"gitId":"brigittesantoso"},"content":"* Deletes the task at the specified `INDEX`. `INDEX` refers to the numerical position of the **task in the task list**. `INDEX` **must** be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-04-08"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":394,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":395,"author":{"gitId":"imrajsinghsandhu"},"content":"`delete [t] 1`","lastModifiedDate":"2022-04-06"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":397,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":398,"author":{"gitId":"brigittesantoso"},"content":"### Listing all tasks: `list [t]`","lastModifiedDate":"2022-04-01"},{"lineNumber":399,"author":{"gitId":"brigittesantoso"},"content":"Shows a list of all tasks in the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":401,"author":{"gitId":"rcjj98"},"content":"Format: `list [t]`","lastModifiedDate":"2022-04-05"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":403,"author":{"gitId":"brigittesantoso"},"content":"\u0026nbsp;","lastModifiedDate":"2022-04-01"},{"lineNumber":404,"author":{"gitId":"brigittesantoso"},"content":"### Clearing all tasks: `clear [t]`","lastModifiedDate":"2022-04-01"},{"lineNumber":405,"author":{"gitId":"brigittesantoso"},"content":"Clears all tasks from the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":407,"author":{"gitId":"brigittesantoso"},"content":"Format: `clear [t]`","lastModifiedDate":"2022-04-01"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":409,"author":{"gitId":"brigittesantoso"},"content":"* Clear command does not throw an error even if task list is already empty and success message will still be shown.","lastModifiedDate":"2022-04-08"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":411,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":413,"author":{"gitId":"eman-kom"},"content":"### Finding task(s) by search terms: `find [t]`","lastModifiedDate":"2022-04-10"},{"lineNumber":414,"author":{"gitId":"eman-kom"},"content":"Find tasks with data containing any of the specified search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":415,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":416,"author":{"gitId":"eman-kom"},"content":"Use `g/` flags to find task(s) with data containing **all** the search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":417,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":418,"author":{"gitId":"eman-kom"},"content":":bulb: Hint: Use multiple `g/` flags to simulate an **OR** command (e.g. `find [t] g/h/update g/t/10:10`)","lastModifiedDate":"2022-04-10"},{"lineNumber":419,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":420,"author":{"gitId":"eman-kom"},"content":"Format: `find [t] g/SEARCH_TERM \u003cSEARCH_TERM\u003e... \u003cg/SEARCH_TERM \u003cSEARCH_TERM\u003e...\u003e...`","lastModifiedDate":"2022-04-10"},{"lineNumber":421,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":422,"author":{"gitId":"eman-kom"},"content":"* `find [t]` **is required** to start with a `g/` flag.","lastModifiedDate":"2022-04-10"},{"lineNumber":423,"author":{"gitId":"eman-kom"},"content":"* Finding tasks `[t]` **only** accepts `g/`,`h/`, `d/`, `t/`, and `i/` flags.","lastModifiedDate":"2022-04-10"},{"lineNumber":424,"author":{"gitId":"eman-kom"},"content":"* If a SEARCH_TERM without a flag (e.g. `find [t] g/update`) is used, an error will be raised.","lastModifiedDate":"2022-04-10"},{"lineNumber":425,"author":{"gitId":"eman-kom"},"content":"* SEARCH_TERMs are still required to follow the format as defined as by their respective flags.","lastModifiedDate":"2022-04-10"},{"lineNumber":426,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":427,"author":{"gitId":"brigittesantoso"},"content":":bulb: View constraints on flags and parameters [here](#flags-and-parameters-format-constraints)","lastModifiedDate":"2022-04-08"},{"lineNumber":428,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":429,"author":{"gitId":"imrajsinghsandhu"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":430,"author":{"gitId":"brigittesantoso"},"content":"`find [t] g/d/2022-03-04 g/h/Update interview list g/t/10:10` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":431,"author":{"gitId":"brigittesantoso"},"content":"`find [t] d/2022-03-04 OR h/Update interview list OR t/10:10` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":432,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-task-OR-example.PNG) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":433,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":434,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":435,"author":{"gitId":"brigittesantoso"},"content":"`find [t] g/d/2022-03-06 h/Update interview list t/09:00` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":436,"author":{"gitId":"brigittesantoso"},"content":"`find [t] d/2022-03-06 AND h/Update interview list AND t/09:00` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":437,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-task-AND-example.PNG) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":438,"author":{"gitId":"brigittesantoso"},"content":"`find [t] g/d/2022-03-06 h/Update interview list g/t/10:10` is logically equivalent to \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":439,"author":{"gitId":"brigittesantoso"},"content":"`find [t] (d/2022-03-06 AND h/Update interview list) OR t/10:10` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":440,"author":{"gitId":"brigittesantoso"},"content":"![find](images/find-task-AND-OR-example.PNG) \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":442,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":444,"author":{"gitId":"eman-kom"},"content":"## Storage","lastModifiedDate":"2022-03-24"},{"lineNumber":445,"author":{"gitId":"eman-kom"},"content":"----------","lastModifiedDate":"2022-04-06"},{"lineNumber":446,"author":{"gitId":"eman-kom"},"content":"### Saving the data","lastModifiedDate":"2022-03-24"},{"lineNumber":447,"author":{"gitId":"brigittesantoso"},"content":"HRConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-04-10"},{"lineNumber":448,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":449,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-03-24"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2022-03-24"},{"lineNumber":451,"author":{"gitId":"brigittesantoso"},"content":"HRConnect data are saved as a JSON file `PATH_TO_JAR_FILE/data/HRConnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-04-10"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":453,"author":{"gitId":"brigittesantoso"},"content":":exclamation: **Caution:** If your changes to the data file makes its format invalid, the HRConnect will discard all data and start with an empty data file at the next run. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":454,"author":{"gitId":"brigittesantoso"},"content":":exclamation: **Caution:** Manual modification of the JSON file is **NOT** a supported feature. Inconsistent data resulting from manual modification of the data file should **NOT** be considered as unexpected behaviour. \u003cbr\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":455,"author":{"gitId":"brigittesantoso"},"content":"Example: Manually editing the `NAME` of applicant in the applicant list of the data file but not on interview list will lead to inconsistent data vice versa and any unusual behaviour caused by this should **NOT** be seen as a bug.","lastModifiedDate":"2022-04-09"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":457,"author":{"gitId":"eman-kom"},"content":"\u0026nbsp;","lastModifiedDate":"2022-03-24"},{"lineNumber":458,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":459,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":460,"author":{"gitId":"eman-kom"},"content":"### Importing the data file: `import`","lastModifiedDate":"2022-03-29"},{"lineNumber":461,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":462,"author":{"gitId":"brigittesantoso"},"content":"Imports all **job applicants** data from a *csv* save file generated from this HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":463,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":464,"author":{"gitId":"eman-kom"},"content":"File structure for csv file (tab delimited):","lastModifiedDate":"2022-04-09"},{"lineNumber":465,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":466,"author":{"gitId":"eman-kom"},"content":"name | phone number | email | address | job position | stage","lastModifiedDate":"2022-04-10"},{"lineNumber":467,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":468,"author":{"gitId":"eman-kom"},"content":"Notes:","lastModifiedDate":"2022-03-29"},{"lineNumber":469,"author":{"gitId":"eman-kom"},"content":"1. Filepath can be relative or absolute.","lastModifiedDate":"2022-03-29"},{"lineNumber":470,"author":{"gitId":"brigittesantoso"},"content":"2. No duplicates are allowed to be imported into the HRConnect.","lastModifiedDate":"2022-04-10"},{"lineNumber":471,"author":{"gitId":"brigittesantoso"},"content":"   1. Data in the HRConnect has a higher priority than data in the save file.","lastModifiedDate":"2022-04-10"},{"lineNumber":472,"author":{"gitId":"brigittesantoso"},"content":"3. Save files needs to end with `.csv` in order for the HRConnect to recognise the save file.","lastModifiedDate":"2022-04-10"},{"lineNumber":473,"author":{"gitId":"eman-kom"},"content":"4. The csv save file can have at most 1 newline at the end of file for it to be considered valid.","lastModifiedDate":"2022-04-11"},{"lineNumber":474,"author":{"gitId":"eman-kom"},"content":"5. If any error is found, **none** of the data in the save file will be imported into the HRConnect.","lastModifiedDate":"2022-04-11"},{"lineNumber":475,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":476,"author":{"gitId":"eman-kom"},"content":"Format: `import FILEPATH`","lastModifiedDate":"2022-03-29"},{"lineNumber":477,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":478,"author":{"gitId":"imrajsinghsandhu"},"content":"Example:\u003cbr\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":479,"author":{"gitId":"imrajsinghsandhu"},"content":"`import C:\\Users\\YOUR_USERNAME\\Desktop\\data.csv`","lastModifiedDate":"2022-04-06"},{"lineNumber":480,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":481,"author":{"gitId":"rcjj98"},"content":"\u0026nbsp;","lastModifiedDate":"2022-03-31"},{"lineNumber":482,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":483,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":484,"author":{"gitId":"rcjj98"},"content":"### Exporting to a csv data file: `export`","lastModifiedDate":"2022-03-31"},{"lineNumber":485,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":486,"author":{"gitId":"brigittesantoso"},"content":"Exports all **job applicants** data from the HRConnect into a *csv* save file.","lastModifiedDate":"2022-04-10"},{"lineNumber":487,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":488,"author":{"gitId":"eman-kom"},"content":"File structure for csv file (tab delimited):","lastModifiedDate":"2022-04-09"},{"lineNumber":489,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":490,"author":{"gitId":"eman-kom"},"content":"name | phone number | email | address | job position | stage","lastModifiedDate":"2022-04-10"},{"lineNumber":491,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":492,"author":{"gitId":"rcjj98"},"content":"Notes:","lastModifiedDate":"2022-03-31"},{"lineNumber":493,"author":{"gitId":"rcjj98"},"content":"1. Filepath of specified CSV file can be relative or absolute.","lastModifiedDate":"2022-04-01"},{"lineNumber":494,"author":{"gitId":"rcjj98"},"content":"2. Specifying the same csv file name and path will overwrite the data inside the specified csv file.","lastModifiedDate":"2022-04-11"},{"lineNumber":495,"author":{"gitId":"rcjj98"},"content":"3. Csv file **must** have .csv as a file extension. ","lastModifiedDate":"2022-04-11"},{"lineNumber":496,"author":{"gitId":"rcjj98"},"content":"4. If any error is found while executing the command,","lastModifiedDate":"2022-04-11"},{"lineNumber":497,"author":{"gitId":"brigittesantoso"},"content":"**none** of the data from the HRConnect will be exported into the specified csv file.","lastModifiedDate":"2022-04-10"},{"lineNumber":498,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":499,"author":{"gitId":"rcjj98"},"content":":exclamation: **Important:** Some invalid naming conventions for the specified csv file might be allowed ","lastModifiedDate":"2022-04-11"},{"lineNumber":500,"author":{"gitId":"rcjj98"},"content":"on different OS. E.g. `my:Data.csv` is a valid name on MacOS but not on WindowsOS.","lastModifiedDate":"2022-04-11"},{"lineNumber":501,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":502,"author":{"gitId":"rcjj98"},"content":"Format: `export FILEPATH`","lastModifiedDate":"2022-04-01"},{"lineNumber":503,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":504,"author":{"gitId":"rcjj98"},"content":"Absolute filepath example for WindowsOS: `export C:\\Users\\YOUR_USERNAME\\Desktop\\myData.csv` \u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":505,"author":{"gitId":"rcjj98"},"content":"Relative filepath example for WindowsOS: `export .\\myData.csv` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":506,"author":{"gitId":"rcjj98"},"content":"Absolute filepath example for MacOS: `export  /Users/YOUR_USERNAME/Downloads/myDataFile.csv` \u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":507,"author":{"gitId":"eman-kom"},"content":"Relative filepath example for MacOS: `export  ./myDataFile.csv`","lastModifiedDate":"2022-04-06"},{"lineNumber":508,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":509,"author":{"gitId":"rcjj98"},"content":":exclamation: **Important:** Some file paths might be recognised as valid/invalid depending on the OS.  ","lastModifiedDate":"2022-04-11"},{"lineNumber":510,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":511,"author":{"gitId":"rcjj98"},"content":":exclamation: **Important:** Data in exported csv file will look different depending on the application used to view the","lastModifiedDate":"2022-04-08"},{"lineNumber":512,"author":{"gitId":"rcjj98"},"content":"file even though the data is seperated by tabs. ","lastModifiedDate":"2022-04-08"},{"lineNumber":513,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":514,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":515,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":516,"author":{"gitId":"brigittesantoso"},"content":"# Summary","lastModifiedDate":"2022-04-07"},{"lineNumber":517,"author":{"gitId":"brigittesantoso"},"content":"## Flags and Parameters Format Constraints","lastModifiedDate":"2022-04-07"},{"lineNumber":518,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":519,"author":{"gitId":"brigittesantoso"},"content":"| Flags | Parameters   | Format Constraints|","lastModifiedDate":"2022-04-07"},{"lineNumber":520,"author":{"gitId":"brigittesantoso"},"content":"|------:|--------------||","lastModifiedDate":"2022-04-10"},{"lineNumber":521,"author":{"gitId":"brigittesantoso"},"content":"|    a/ | ADDRESS      | Addresses can take any values, and it should not be blank|","lastModifiedDate":"2022-04-07"},{"lineNumber":522,"author":{"gitId":"brigittesantoso"},"content":"|    d/ | DATE         | Date should be in the format YYYY-MM-dd|","lastModifiedDate":"2022-04-07"},{"lineNumber":523,"author":{"gitId":"brigittesantoso"},"content":"|    e/ | EMAIL        | Emails should be of the format local-part@domain and adhere to the following constraints: \u003cbr/\u003e \u003cbr/\u003e 1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-). The local-part may not start or end with any special characters. \u003cbr/\u003e \u003cbr/\u003e 2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods. \u003cbr/\u003e \u003cbr/\u003e The domain name must: \u003cbr/\u003e - end with a domain label at least 2 characters long \u003cbr/\u003e - have each domain label start and end with alphanumeric characters \u003cbr/\u003e - have each domain label consist of alphanumeric characters, separated only by hyphens, if any. |","lastModifiedDate":"2022-04-10"},{"lineNumber":524,"author":{"gitId":"eman-kom"},"content":"|    g/ | SEARCH_TERM  | Only used in the `find` command. Used in combination with the other flags on this list|","lastModifiedDate":"2022-04-10"},{"lineNumber":525,"author":{"gitId":"brigittesantoso"},"content":"|    h/ | HEADER       | Header should only contain alphanumeric characters and spaces, and it should not be blank|","lastModifiedDate":"2022-04-07"},{"lineNumber":526,"author":{"gitId":"brigittesantoso"},"content":"|    i/ | INFORMATION  | Information should only contain alphanumeric characters and spaces, and it should not be blank|","lastModifiedDate":"2022-04-07"},{"lineNumber":527,"author":{"gitId":"brigittesantoso"},"content":"|    j/ | JOB_POSITION | Job should only contain alphanumeric characters and spaces, and it should not be blank|","lastModifiedDate":"2022-04-07"},{"lineNumber":528,"author":{"gitId":"brigittesantoso"},"content":"|    n/ | NAME         | Names should only contain alphanumeric characters and spaces, and it should not be blank|","lastModifiedDate":"2022-04-07"},{"lineNumber":529,"author":{"gitId":"brigittesantoso"},"content":"|    p/ | PHONE_NUMBER | Phone numbers should only contain numbers, and it should be at least 3 digits long|","lastModifiedDate":"2022-04-07"},{"lineNumber":530,"author":{"gitId":"brigittesantoso"},"content":"|    s/ | STAGE        | Stage should be only INPROGRESS or ACCEPTED or REJECTED (case-sensitive|","lastModifiedDate":"2022-04-07"},{"lineNumber":531,"author":{"gitId":"brigittesantoso"},"content":"|    t/ | TIME         | Time should be in the format|","lastModifiedDate":"2022-04-07"},{"lineNumber":532,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":533,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":534,"author":{"gitId":"eman-kom"},"content":"## Section Types","lastModifiedDate":"2022-04-10"},{"lineNumber":535,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":536,"author":{"gitId":"eman-kom"},"content":"| Type | Format                                            |","lastModifiedDate":"2022-04-06"},{"lineNumber":537,"author":{"gitId":"eman-kom"},"content":"|-----:|:--------------------------------------------------|","lastModifiedDate":"2022-04-06"},{"lineNumber":538,"author":{"gitId":"eman-kom"},"content":"|  [i] | Applies the current command to the interview list |","lastModifiedDate":"2022-04-06"},{"lineNumber":539,"author":{"gitId":"brigittesantoso"},"content":"|  [p] | Applies the current command to the applicant list |","lastModifiedDate":"2022-04-06"},{"lineNumber":540,"author":{"gitId":"brigittesantoso"},"content":"|  [t] | Applies the current command to the task list      |","lastModifiedDate":"2022-04-06"},{"lineNumber":541,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":542,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":543,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":544,"author":{"gitId":"eman-kom"},"content":"## Command Summary","lastModifiedDate":"2022-03-24"},{"lineNumber":545,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":546,"author":{"gitId":"brigittesantoso"},"content":"**General Command Summary** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":547,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":548,"author":{"gitId":"eman-kom"},"content":"| Action | Format |","lastModifiedDate":"2022-03-24"},{"lineNumber":549,"author":{"gitId":"brigittesantoso"},"content":"|:------:|:------:|","lastModifiedDate":"2022-04-10"},{"lineNumber":550,"author":{"gitId":"brigittesantoso"},"content":"|  Help  | `help` |","lastModifiedDate":"2022-04-10"},{"lineNumber":551,"author":{"gitId":"brigittesantoso"},"content":"|  Exit  | `exit` |","lastModifiedDate":"2022-04-10"},{"lineNumber":552,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":553,"author":{"gitId":"brigittesantoso"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":554,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":555,"author":{"gitId":"brigittesantoso"},"content":"**Applicant Command Summary** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":556,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":557,"author":{"gitId":"brigittesantoso"},"content":"|                Action | Format                                                                                                                                                            |","lastModifiedDate":"2022-04-10"},{"lineNumber":558,"author":{"gitId":"brigittesantoso"},"content":"|----------------------:|:------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":559,"author":{"gitId":"brigittesantoso"},"content":"|     Add Job Applicant | `add [p] n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS j/JOB_POSITION s/STAGE`                                                                                          |","lastModifiedDate":"2022-04-01"},{"lineNumber":560,"author":{"gitId":"brigittesantoso"},"content":"|    Edit Job Applicant | `edit [p] INDEX \u003cn/NAME\u003e \u003cp/PHONE_NUMBER\u003e \u003ce/EMAIL\u003e \u003ca/ADDRESS\u003e \u003cj/JOB_POSITION\u003e \u003cs/STAGE\u003e` (`INDEX` refers to numerical position of applicant in applicant list) |","lastModifiedDate":"2022-04-10"},{"lineNumber":561,"author":{"gitId":"brigittesantoso"},"content":"|  Delete Job Applicant | `delete [p] INDEX` (`INDEX` refers to numerical position of applicant in applicant list)                                                                          |","lastModifiedDate":"2022-04-08"},{"lineNumber":562,"author":{"gitId":"brigittesantoso"},"content":"|   List Job Applicants | `list [p]`                                                                                                                                                        |","lastModifiedDate":"2022-04-10"},{"lineNumber":563,"author":{"gitId":"brigittesantoso"},"content":"|  Clear Job Applicants | `clear [p]`                                                                                                                                                       |","lastModifiedDate":"2022-04-10"},{"lineNumber":564,"author":{"gitId":"brigittesantoso"},"content":"| Find Job Applicant(s) | `find [p] g/SEARCH_TERM \u003cSEARCH_TERM\u003e... \u003cg/SEARCH_TERM \u003cSEARCH_TERM\u003e...\u003e...`                                                                                     |","lastModifiedDate":"2022-04-10"},{"lineNumber":565,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":566,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":568,"author":{"gitId":"brigittesantoso"},"content":"**Interview Command Summary** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":570,"author":{"gitId":"brigittesantoso"},"content":"|            Action | Format                                                                                                   |","lastModifiedDate":"2022-04-10"},{"lineNumber":571,"author":{"gitId":"brigittesantoso"},"content":"|------------------:|:---------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":572,"author":{"gitId":"brigittesantoso"},"content":"|     Add Interview | `add [i] INDEX d/DATE t/TIME` (`INDEX` refers to numerical position of applicant in applicant list)      |","lastModifiedDate":"2022-04-10"},{"lineNumber":573,"author":{"gitId":"brigittesantoso"},"content":"|    Edit Interview | `edit [i] INDEX \u003cd/DATE\u003e \u003ct/TIME\u003e` (`INDEX` refers to numerical position of interview in interview list) |","lastModifiedDate":"2022-04-08"},{"lineNumber":574,"author":{"gitId":"brigittesantoso"},"content":"|  Delete Interview | `delete [i] INDEX` (`INDEX` refers to numerical position of interview in interview list)                 |","lastModifiedDate":"2022-04-10"},{"lineNumber":575,"author":{"gitId":"eman-kom"},"content":"|   List Interviews | `list [i]`                                                                                               |","lastModifiedDate":"2022-03-29"},{"lineNumber":576,"author":{"gitId":"brigittesantoso"},"content":"|  Clear Interviews | `clear [i]`                                                                                              |","lastModifiedDate":"2022-04-10"},{"lineNumber":577,"author":{"gitId":"brigittesantoso"},"content":"| Find Interview(s) | `find [i] g/SEARCH_TERM \u003cSEARCH_TERM\u003e... \u003cg/SEARCH_TERM \u003cSEARCH_TERM\u003e...\u003e...`                            |","lastModifiedDate":"2022-04-10"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":579,"author":{"gitId":"brigittesantoso"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":581,"author":{"gitId":"brigittesantoso"},"content":"**Task Command Summary** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":583,"author":{"gitId":"brigittesantoso"},"content":"|       Action | Format                                                                                                                    |","lastModifiedDate":"2022-04-10"},{"lineNumber":584,"author":{"gitId":"brigittesantoso"},"content":"|-------------:|:--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-10"},{"lineNumber":585,"author":{"gitId":"brigittesantoso"},"content":"|     Add Task | `add [t] h/HEADER d/DATE t/TIME i/INFORMATION`                                                                            |","lastModifiedDate":"2022-04-10"},{"lineNumber":586,"author":{"gitId":"brigittesantoso"},"content":"|    Edit Task | `edit [t] INDEX \u003ch/HEADER\u003e \u003cd/DATE\u003e \u003ct/TIME\u003e \u003ci/INFORMATION\u003e` (`INDEX` refers to numerical position of task in task list) |","lastModifiedDate":"2022-04-10"},{"lineNumber":587,"author":{"gitId":"brigittesantoso"},"content":"|  Delete Task | `delete [t] INDEX` (`INDEX` refers to numerical position of task in task list)                                            |","lastModifiedDate":"2022-04-10"},{"lineNumber":588,"author":{"gitId":"brigittesantoso"},"content":"|   List Tasks | `list [t]`                                                                                                                |","lastModifiedDate":"2022-04-01"},{"lineNumber":589,"author":{"gitId":"brigittesantoso"},"content":"|  Clear Tasks | `clear [t]`                                                                                                               |","lastModifiedDate":"2022-04-10"},{"lineNumber":590,"author":{"gitId":"brigittesantoso"},"content":"| Find Task(s) | `find [t] g/SEARCH_TERM \u003cSEARCH_TERM\u003e... \u003cg/SEARCH_TERM \u003cSEARCH_TERM\u003e...\u003e...`                                             |","lastModifiedDate":"2022-04-10"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":592,"author":{"gitId":"brigittesantoso"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":594,"author":{"gitId":"brigittesantoso"},"content":"**Storage Command Summary** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":596,"author":{"gitId":"brigittesantoso"},"content":"|        Action        |                                                                                                                                                           Format                                                                                                                                                            |","lastModifiedDate":"2022-04-10"},{"lineNumber":597,"author":{"gitId":"brigittesantoso"},"content":"|:--------------------:|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2022-04-10"},{"lineNumber":598,"author":{"gitId":"brigittesantoso"},"content":"|        Import        |                                                                                                                                                      `import FILEPATH`                                                                                                                                                      |","lastModifiedDate":"2022-04-01"},{"lineNumber":599,"author":{"gitId":"brigittesantoso"},"content":"|        Export        |                                                                                                                                                      `export FILEPATH`                                                                                                                                                      |","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"brigittesantoso":332,"imrajsinghsandhu":25,"eman-kom":96,"-":83,"rcjj98":63}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"brigittesantoso"},"content":"    content: \"HRConnect\";","lastModifiedDate":"2022-04-10"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"brigittesantoso":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"user -[USER_COLOR]\u003e ui : \"delete [p] 1\"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete [p] 1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"imrajsinghsandhu":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"AddressBook *-right-\u003e \"1\" UniqueInterviewList","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"AddressBook *-right-\u003e \"1\" UniqueTaskList","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"UniquePersonList -[hidden]down- UniqueInterviewList","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"UniquePersonList -[hidden]down- UniqueInterviewList","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"UniqueInterviewList -[hidden]down- UniqueTaskList","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"UniquePersonList -right-\u003e \"*\" Person","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"UniqueInterviewList -right-\u003e \"*\"Interview","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"UniqueTaskList -down-\u003e \"*\"Task","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"Person *-down-\u003e Name","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"Person *-down-\u003e Phone","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"Person *-down-\u003e Email","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"Person *-down-\u003e Address","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"Person *-down-\u003e Job","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"Person *-right-\u003e Stage","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"Interview *-up-\u003e  Person","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"Interview *--\u003e Date","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"Interview *--\u003e Time","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"Task *--\u003e Header","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"Task *--\u003e Information","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"Task *--\u003e Date","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"Task *--\u003e Time","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"brigittesantoso":22,"-":14}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"participant \":DeletePersonCommandParser\" as DeletePersonCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"participant \"d:DeletePersonCommand\" as DeletePersonCommand LOGIC_COLOR","lastModifiedDate":"2022-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"[-\u003e LogicManager : execute(\"delete [p] 1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete [p] 1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"[p] 1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"create DeletePersonCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"DeleteCommandParser -\u003e DeletePersonCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"create DeletePersonCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"DeletePersonCommandParser -\u003e DeletePersonCommand : parse(\"1\")","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"activate DeletePersonCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"DeletePersonCommand -\u003e DeletePersonCommandParser : d","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"DeletePersonCommandParser --\u003e DeleteCommandParser : d","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2022-04-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"LogicManager -\u003e DeletePersonCommand : execute(model)","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"activate DeletePersonCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"DeletePersonCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"Model --\u003e DeletePersonCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"DeletePersonCommand -\u003e CommandResult","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"imrajsinghsandhu"},"content":"CommandResult --\u003e DeletePersonCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"imrajsinghsandhu"},"content":"DeletePersonCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-09"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2022-04-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"imrajsinghsandhu":26,"-":52}},{"path":"docs/diagrams/ExportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"participant \":ExportCommandParser\" as ExportCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"participant \"e:ExportCommand\" as ExportCommand LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"box File Operations STORAGE_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"participant \":PrintWriter\" as PrintWriter MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"[-\u003e ExportCommandParser : parse(\"../mydata.csv\")","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"activate ExportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"ExportCommandParser -\u003e ExportCommandParser : checkFilePath(\"../mydata.csv\")","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"activate ExportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"ExportCommandParser --\u003e ExportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"deactivate ExportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"create ExportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"ExportCommandParser -\u003e ExportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"activate ExportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"ExportCommand --\u003e ExportCommandParser : e","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"deactivate ExportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"[\u003c-- ExportCommandParser : e","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"deactivate ExportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"[\u003c-[hidden]- ExportCommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"destroy ExportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"[-\u003e ExportCommand : execute()","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"activate ExportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"create PrintWriter","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"ExportCommand -\u003e PrintWriter","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"activate PrintWriter","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"PrintWriter --\u003e ExportCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"deactivate PrintWriter","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"ExportCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"Model --\u003e ExportCommand : filteredPersonsList","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"loop until end of filteredPersonsList","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"ExportCommand -\u003e PrintWriter : printf(person)","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"activate PrintWriter","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"PrintWriter --\u003e ExportCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"deactivate PrintWriter","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"end loop","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"create CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"ExportCommand -\u003e CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"activate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"CommandResult --\u003e ExportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"[\u003c-- ExportCommand : result","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"deactivate ExportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"@enduml","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"eman-kom":73}},{"path":"docs/diagrams/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"@startuml","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"!include style.puml","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"participant \":FindTaskCommandParser\" as FindTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"participant \"t:FindTaskCommand\" as FindTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"participant \":TaskContainsKeywordsPredicate\" as TaskContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"[-\u003e FindCommandParser : parse(\"[t] g/i/update\")","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"activate FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"FindCommandParser -\u003e FindCommandParser : checkValidGroups([\"i/update\"])","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"activate FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"FindCommandParser --\u003e FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"create FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"FindCommandParser -\u003e FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"activate FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"FindTaskCommandParser --\u003e FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"FindCommandParser -\u003e FindTaskCommandParser : parse([\"i/update\"])","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"activate FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"FindTaskCommandParser -\u003e FindCommandParser : checkInvalidInformation([\"i/update\"])","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"FindCommandParser --\u003e FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"create TaskContainsKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"FindTaskCommandParser -\u003e TaskContainsKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"activate TaskContainsKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"TaskContainsKeywordsPredicate --\u003e FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"deactivate TaskContainsKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"create FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"FindTaskCommandParser -\u003e FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"FindTaskCommand --\u003e FindTaskCommandParser : t","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"deactivate FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"FindTaskCommandParser --\u003e FindCommandParser : t","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"deactivate FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"[\u003c-[hidden]- FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"destroy FindTaskCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"[\u003c-- FindCommandParser : t","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"deactivate FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"[\u003c-[hidden]- FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"destroy FindCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"[-\u003e FindTaskCommand : execute()","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"activate FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"FindTaskCommand -\u003e Model : updateFilteredTaskList()","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"activate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"Model --\u003e FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"deactivate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"create CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"FindTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"activate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"CommandResult --\u003e FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"[\u003c-- FindTaskCommand : result","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"deactivate FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"@enduml","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"eman-kom":77}},{"path":"docs/diagrams/ImportCheckSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"mainframe **sd** perform necessary checks","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"participant \":ImportCommandParser\" as ImportCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"activate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"loop until last entry is parsed","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser -\u003e ImportCommandParser : getFields(entry)","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"activate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser --\u003e ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser -\u003e ImportCommandParser : createPerson(entry)","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"activate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"create Person","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser -\u003e Person","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"activate Person","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"Person --\u003e ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"deactivate Person","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser --\u003e ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser -\u003e ImportCommandParser : updatePersons(person)","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"activate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser --\u003e ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"end","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"eman-kom":47}},{"path":"docs/diagrams/ImportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"participant \":ImportCommandParser\" as ImportCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"participant \"i:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"[-\u003e ImportCommandParser : parse(\"../mydata.csv\")","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"activate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser -\u003e ImportCommandParser : checkFilePath(\"../mydata.csv\")","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"activate ImportCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser --\u003e ImportCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser -\u003e ImportCommandParser : readCsv(\"../mydata.csv\")","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"activate ImportCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"ref over ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"perform necessary checks","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"end ref","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser --\u003e ImportCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"create ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"ImportCommandParser -\u003e ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"activate ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"ImportCommand --\u003e ImportCommandParser : i","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"[\u003c-- ImportCommandParser : i","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"[\u003c-[hidden]- ImportCommandParser : e","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"destroy ImportCommandParser","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"[-\u003e ImportCommand : execute()","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"activate ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"loop until end of persons list","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"ImportCommand -\u003e Model : hasPerson(person)","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"Model --\u003e ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"end","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"loop until end of persons list","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"ImportCommand -\u003e Model : addPerson(person)","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"activate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"Model --\u003e ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"deactivate Model","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"end","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"create CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"ImportCommand -\u003e CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"activate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"CommandResult --\u003e ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"[\u003c-- ImportCommand : result","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"deactivate ImportCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"@enduml","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"eman-kom":75}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"Class \"{abstract}\\nXYZCommand\" as XYZAbstractCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"Class XYZTYPECommand","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"AddressBookParser ..\u003e XYZTYPECommand : creates \u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"XYZAbstractCommand -up-|\u003e Command","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"XYZCommand -left-|\u003e Command","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"LogicManager ..\u003e Command : executes \u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"XYZTYPECommand -up-|\u003e XYZAbstractCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"note right of XYZAbstractCommand: e.g. AddCommand, \\nFindCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"note right of XYZCommand: e.g. HelpCommand, \\nExitCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"note right of XYZTYPECommand: e.g. AddPersonCommand, \\n FindTaskCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"brigittesantoso":10,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"Class UniqueInterviewList","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"Class Interview","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"Class UniqueTaskList","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"Class Task","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"ModelManager --\u003e \"1\" AddressBook","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"AddressBook *--\u003e \"1\" UniqueInterviewList","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"AddressBook *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"UniqueInterviewList --\u003e \"~* all\" Interview","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"ModelManager --\u003e\"~* filtered\" Interview","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"ModelManager --\u003e\"~* filtered\" Task","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"brigittesantoso":12,"-":35}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"Class \"{abstract}\\nXYZCommand\" as XYZAbstractCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"Class XYZTYPECommandParser","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"Class XYZTYPECommand","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"Class XYZCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"enum Type","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"XYZCommandParser ..\u003e XYZTYPECommand : creates \u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"XYZCommandParser ..\u003e XYZAbstractCommand : returns \u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"XYZTYPECommandParser ..\u003e XYZTYPECommand : creates \u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"XYZTYPECommandParser .up.|\u003e Parser","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"XYZTYPECommand -up-|\u003e XYZAbstractCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"XYZTYPECommandParser -up-|\u003e Type","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"XYZAbstractCommand -right-|\u003e Command","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"XYZCommandParser ..\u003e XYZTYPECommandParser: creates \u003e","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"brigittesantoso":10,"imrajsinghsandhu":8,"-":33}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"Class JsonAdaptedInterview","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedInterview","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"JsonAdaptedInterview --\u003e \"1\" JsonAdaptedPerson","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"brigittesantoso":5,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"Class InterviewListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"Class InterviewCard","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"Class TaskListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"Class TaskCard","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"MainWindow *-down-\u003e \"1\" InterviewListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"InterviewListPanel -down-\u003e \"*\" InterviewCard","lastModifiedDate":"2022-04-08"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"InterviewListPanel --|\u003e UiPart","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"InterviewCard ..\u003e Model","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2022-04-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"InterviewListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"TaskListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-04-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"imrajsinghsandhu":14,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"title: HRConnect Level-3","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W11-2/tp/branch/master/graph/badge.svg?token\u003dNLSR34Z1Y2)](https://codecov.io/gh/AY2122S2-CS2103T-W11-2/tp)","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"**HRConnect is a desktop application for tech HR recruiters to manage job applicants, interviews and miscellaneous tasks.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"* If you are interested in using HRConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"* If you are interested about developing HRConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"brigittesantoso":4,"-":15}},{"path":"docs/team/brigittesantoso.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"layout: page","lastModifiedDate":"2022-02-28"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"title: Brigitte Santoso\u0027s Project Portfolio Page","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"---","lastModifiedDate":"2022-02-28"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"## Project: HRConnect","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"HRConnect is an application for managing job applicants, interviews and miscellaneous tasks. \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"### Enhancements implemented","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"* **Job and Stage fields**: Added `Job` and `Stage` attributes to `Person` class","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    * What it does: Clearly indicate which job position an applicant is applying to and which stage progress they are currently at","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    * Justification: This feature improves the product significantly as the main aim of our application for HR recruiters to manage the job applicants and their stage progress easily.","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"* **Interview Feature**: Added a tab to showcase list of interviews along with its various commands","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    * What it does: Allows the user to `add`, `delete`, `edit`, `list` and `clear` interviews.","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    * Justification: This feature improves the product significantly as it allows HR recruiters to easily keep track of the interviews they have with each applicant. The add, delete, edit, list and clear commands help fulfill the possible changes that the user might make to the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    * Highlights: This enhancement affects existing commands as the `Person` is an attribute in the `Interview` class thus edits have to be made with some of the `Person` commands.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"* **Types**: Introduced types into code to distinguish between applicant, interview and task","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    * What it does: Allows the user to differentiate between which list they are updating by adding either `[p]`, `[i]` or `[t]` behind each command.","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    * Justification: This feature improves the product significantly as it helps to standardise command line conventions and make it less confusing and easier to differentiate between different types of commands.","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    * Highlights: This enhancement was difficult as it requires abstraction of code such as creating an abstract class `AddCommand` which `AddPersonCommand`, `AddInterviewCommand` and `AddTaskCommand` extends from to reduce the amount of duplicate code and ensure that OOP principles are adhered to.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    ","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"### Code Contribution","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"Link: \u003ca href\u003d\"https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dbrigittesantoso\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-02-18\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\"\u003eCode Contributed\u003c/a\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"### Contributions to the UG and DG","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"**UG** \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"* Add all Task commands to the UG with clear formatting","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"* Add constraint pointers to some commands ","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"  * e.g. `clearing applicant list` and `adding interview`","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"* Add notes for Interview and Task features","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"  * Listed in chronological date time order","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"* Solve some UG bugs highlighted from PED","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"* Helped to format the UG by adding appropriate page breaks for PDF submission","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"**DG** \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"* Edited Model and Storage sections of DG along with their elaboration","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"* Edited UML diagrams for Model and Storage section ","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"  * `BetterModelClassDiagram`, `ModelClassDiagram` and `StorageClassDiagram`","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"* Helped to format the DG by adding appropriate page breaks for PDF submission","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"* Created a few milestones and issues for team","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"* Ensure team completes all team-based tasks on time","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"### Review/mentoring contributions","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"* Reviewed and approved some team members PRs with some comments and suggestions","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"* Helped to solve bugs and issues in other team members features","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"* Bugs reported in other team products during PED \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"  * Link: \u003ca href\u003d\"https://github.com/brigittesantoso/ped/issues\"\u003ePED Issues\u003c/a\u003e","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"brigittesantoso":53}},{"path":"docs/team/eman-kom.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"layout: page","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"title: Emmanuel Mok\u0027s Project Portfolio Page","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"---","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"### Project: HRConnect","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"This product is for tech HR recruiters who prefer to use CLI to store contacts of job applicants and their respective interviews as well as keep track of the status of each applicant through the application process.","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"* **New Feature:** Added more flexibility to the `find` command.","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"  * What it does: Allows users to search of any data in their respective sections (Task/Interview/Applicant)","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"  using the flags as defined in the app. It also simulates \u0027AND\u0027 and \u0027OR\u0027 statements through the use of","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"  the `g/` flag.","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"  * Justification: The previous `find` command was too simplistic in the sense that it can only search for names. With ","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"  more data fields being added to HRConnect, a stronger search function is required to enable users to effectively","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"  look for data that they are searching for. Furthermore, the simulation of \u0027AND\u0027 and \u0027OR\u0027 commands gives users more ","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"  flexibility and control over their search criteria, leading to a better experience for the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"  * Highlights: This enhancement improves upon the original `find` command. Hence, it requires some analysis into other ","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"  design considerations to ensure that the enhancement is both intuitive and useful to the user. It was also challenging to ","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"  implement a custom `g/` flag for the `find` command as it requires custom validity checks which builds upon the ","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"  ArgumentTokenizer and ArgumentMultiMap.","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"* **New Feature:** Added an `import` feature to allow job applicants data to be transferred into the address book.","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"  * What it does: Allows users to import all job applicants data from a csv save file that was previously","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"  exported out by the `export` command.","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"  * Justification: This feature is complementary to the `export` command it allows previously exported data to be","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"  reintegrated back into the address book.","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"  * Highlights: This enhancement was challenging because the csv save file can be subjected to a lot of other changes by ","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"  the user. A lot of checks are needed to ensure that the contents of the csv save file contents adhere to the flag ","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"  formats as defined in the HRConnect app. Furthermore, there is also a check for any duplicates for both within the csv save ","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"  file and the app itself before adding all the job applicants to the app.","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"  ","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"* **Code Contributed:** ","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"  * [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003deman-kom\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"* **Project Management:**","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"  * Released v1.3 on GitHub ([v1.3 release link](https://github.com/AY2122S2-CS2103T-W11-2/tp/releases/tag/v1.3))","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"  * Enabled Assertions (Pull Request: [#45](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/45/commits/a0eda15e3016f5416a577dd3256d984753862229))","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"  * Created the GitHub organization repo","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"* **Enhancement to existing features:**","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"  * Updated the help page in the address book (Pull Request: [#78](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/78/files))","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"  * Changed the application name of the address book (Pull Request: [#94](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/94/files))","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"  ","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"* **Documentation:**","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"  * User Guide:","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"    * Drafted the initial version of the UG (Pull request: [#53](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/53))","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"    * Drafted the Flags and Parameters Format Constraints \u0026 Section Types (Pull request: [#168](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/168/files))","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    * Wrote the Find Feature (Task, Interview \u0026 Applicant) in the UG","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"    * Wrote the Import Feature in the UG","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"  * Developer Guide:","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"    * Added implementation details of the `find` feature","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"    * Added implementation details of the `export` feature","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"    * Added implementation details of the `import` feature","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"* **Team:**","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"  * Fixed some merge conflicts","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"  * Helped to find and fix some bugs","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"  * Reviewed some PRs (Pull Requests: ","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"  [#43](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/43), ","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"  [#50](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/50),","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"  [#54](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/54),","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"  [#41](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/41)) ","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"  * Assisted team members in resolving any obstacles they face","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"* **Community:**","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"  * Submitted 22 bugs for the other team in the PE dry run. ([PED link](https://github.com/eman-kom/ped/issues))","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":" ","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"eman-kom":78}},{"path":"docs/team/imrajsinghsandhu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"title: Imraj Singh\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"### Project: HRConnect","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"HRConnect is a desktop address book application used for keeping track of job applicants\u0027 details during their entire application process. It is a CLI focused application, whereby users will interect with the program with commands. The GUI of this application is created with JavaFX, and the application as around 10 kLoC wrtitten in Java.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"Given below are the contributions I have made to this project.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"## Task Feature","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"* What it does: Allows users to be able to add a task that has to be done","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"* Justification: This feature allows the user to note down any miscellaneous tasks that are to be completed","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"## Code contributed","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"* [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dimrajsinghsandhu\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"## Enhancements implemented","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"* Implemented the add task feature","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"* Adhered to OOP principles to reduce the repetition of code","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"## Contributions to the Developer Guide","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"* Added on to the ParserClassDiagram","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"* Edited the DeleteSequenceDiagram to include more classes and method","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"* Edited the LogicClassDiagram","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"* Added on to the UiClassDiagram","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"* Changed the descriptions of the above mentioned components","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"* Edited some bugs found on the Developer Guide","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"## Contributions to the User Guide","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"* User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"  * Added use cases for the delete feature","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"  * Reshuffled the orders of some of the commands in command summary table","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"  * Changed the design of the features section","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"  * Solved some bugs as was highighted in the PE-D","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"## Team","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"* Brainstormed user stories and product features with team","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"* Reviewed the following PRs:","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"[#159](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/159)","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"[#54](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/54)","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"[#41](https://github.com/AY2122S2-CS2103T-W11-2/tp/pull/41)","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"## Code Review contributions","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"* Reviewed and approved team members\u0027 PRs with comments and suggestions for improvments where necessary","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"* Helped with checkstyle edits of files","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"## Leadership \u0026 Initiative","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"* Helped teammates with bug fixes and understanding of tasks/code","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"## Bug reports","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"* Tested products of other groups and provided bug reports","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"imrajsinghsandhu":62}},{"path":"docs/team/rcjj98.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rcjj98"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"rcjj98"},"content":"layout: page","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"rcjj98"},"content":"title: Ryan Chang\u0027s Project Portfolio Page","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"rcjj98"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"rcjj98"},"content":"### Project: HRConnect","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"rcjj98"},"content":"HRConnect is a desktop application for managing the contacts of job applicants. It can also be used to keep track of the","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"rcjj98"},"content":"progress of each applicant during the application process.","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"rcjj98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"rcjj98"},"content":"# Summary of Contributions","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"rcjj98"},"content":"## Code contributed","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"rcjj98"},"content":"[RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003drcjj98\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zFR\u003dfalse\u0026zA\u003drcjj98\u0026zR\u003dAY2122S2-CS2103T-W11-2%2Ftp%5Bmaster%5D\u0026zACS\u003d198.13128430296376\u0026zS\u003d2022-02-18\u0026zFS\u003d\u0026zU\u003d2022-04-08\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos)","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"rcjj98"},"content":"## Enhancements implemented","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"rcjj98"},"content":"* **Edit Feature**: Added the ability to edit details of job applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"rcjj98"},"content":"    * What it does: Allows the user to update any current details of job applicants that were added previously.","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"rcjj98"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes when adding a new","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"rcjj98"},"content":"      job applicant and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"rcjj98"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"rcjj98"},"content":"* **Export Feature**: Added the ability to export the data from the application to a csv file.","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"rcjj98"},"content":"    * What it does: Allows the user to export all applicant data to a csv save file for archiving.","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"rcjj98"},"content":"    * Justification: This feature improves the product significantly because a user\u0027s address book can start to fill up","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"rcjj98"},"content":"      with contacts that are no longer important and the application should provide a convenient way to export data to a","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"rcjj98"},"content":"      file to allow users the convenience of making a copy before clearing the data.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"rcjj98"},"content":"      \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"rcjj98"},"content":"* Abstract main idea from code to reduce repetition.","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"rcjj98"},"content":"* Checked and reformat code that violated java coding standards.","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"rcjj98"},"content":"## Contributions to the UG","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"rcjj98"},"content":"* Add all applicant commands to the UG with proper formatting. ","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"rcjj98"},"content":"* Updated commands in the command summary table to match valid command usage. ","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"rcjj98"},"content":"* Add warning messages for editing applicant. ","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"rcjj98"},"content":"* Resolved some Pe-D issues. ","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"rcjj98"},"content":"* Finalize bulk of the applicant commands format for the UG.","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"rcjj98"},"content":"## Contributions to the DG","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"rcjj98"},"content":"* Edited Appendix: Requirements. ","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"rcjj98"},"content":"* Edited Appendix: Instructions for manual testing.","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"rcjj98"},"content":"## Contributions to team-based tasks","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"rcjj98"},"content":"* Created milestone v1.2 and several issues for team repo. ","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"rcjj98"},"content":"* Facilitated smooth communications during team meetings using interpersonal skills.","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"rcjj98"},"content":"* Handled submissions of tP final submissions.","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"rcjj98"},"content":"## Review/mentoring contributions","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":59,"author":{"gitId":"rcjj98"},"content":"* Reviewed and approved multiple PRs with tactful comments and suggestions. ","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"rcjj98"},"content":"* Suggested alternative solutions to some problems faced during team meetings. ","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"rcjj98"},"content":"* Objectively discussed which tasks were well suited for each team member to ensure efficient delegation of work.","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":63,"author":{"gitId":"rcjj98"},"content":"## Contributions beyond team-projects","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"rcjj98"},"content":"* Ensure team dynamics was well maintained throughout entire semester. ","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"rcjj98"},"content":"* Checking up on teammates progress intermittently during the semester to build rapport.","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"rcjj98":66}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"imrajsinghsandhu":1,"eman-kom":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX \u003d \"The interview index provided is invalid\";","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The applicant index provided is invalid\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d applicants listed!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"    public static final String MESSAGE_INTERVIEWS_LISTED_OVERVIEW \u003d \"%1$d interviews listed!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_NO_TYPE_GIVEN \u003d \"No type given. Type should be either [p] or [i] or [t].\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_INVALID_TYPE_GIVEN \u003d \"Invalid type given. Type should be either [p] or [i]\"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            + \" or [t].\";","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_INTERVIEW_LIST_NOT_EMPTY \u003d \"Interview list is not empty. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"            + \"Please clear interview list first.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_PERSON_HAS_INTERVIEW \u003d \"Applicant has interview. \"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"            + \"Delete interview first before editing or deleting applicant.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":11,"eman-kom":2,"-":10}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"     * Reads all lines from a file.","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"     * @param file Input file","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"eman-kom"},"content":"     * @return A list of lines from the file","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"eman-kom"},"content":"     * @throws IOException Error occurred while reading.","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"eman-kom"},"content":"    public static List\u003cString\u003e readFromFileLines(Path file) throws IOException {","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"eman-kom"},"content":"        return Files.readAllLines(file);","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eman-kom":12,"-":83}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    /** Returns an unmodifiable view of the filtered list of interviews */","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"brigittesantoso":6,"imrajsinghsandhu":5,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"        return model.getFilteredInterviewList();","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"imrajsinghsandhu"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"imrajsinghsandhu"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brigittesantoso":5,"imrajsinghsandhu":8,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":3,"-":12}},{"path":"src/main/java/seedu/address/logic/commands/AddInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":" * Adds an interview to the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"public class AddInterviewCommand extends AddCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [i] : Adds an interview to the interview list \"","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"            + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"            + PREFIX_TIME + \"TIME\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [i] 1 \"","lastModifiedDate":"2022-04-02"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_DATE + \"2021-05-06 \"","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_TIME + \"05:29\";","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added Interview: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"This interview already exists in the interview list\";","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    private final Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    private final Date date;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    private final Time time;","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"     * Creates an AddInterviewCommand to add the specified {@code Interview}","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    public AddInterviewCommand(Index index, Date date, Time time) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        Person personToInterview \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        Interview toAdd \u003d createInterview(personToInterview, date, time);","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        if (model.hasInterview(toAdd)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"        model.addInterview(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"     * Creates and returns a {@code Interview}.","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"    private static Interview createInterview(Person personToInterview, Date date, Time time) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        assert personToInterview !\u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"        return new Interview(personToInterview, date, time);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof AddInterviewCommand // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 index.equals(((AddInterviewCommand) other).index)","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 date.equals(((AddInterviewCommand) other).date)","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 time.equals(((AddInterviewCommand) other).time));","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"eman-kom"},"content":"        return INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":90,"eman-kom":7}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":" * Adds an applicant to the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"public class AddPersonCommand extends AddCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [p] : Adds an applicant to the applicant list.\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_JOB + \"JOB \"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"            + PREFIX_STAGE + \"STAGE\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [p] \"","lastModifiedDate":"2022-04-02"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_JOB + \"Software Engineer \"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_STAGE + \"INPROGRESS\";","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added Applicant: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This applicant already exists in the applicant list\";","lastModifiedDate":"2022-04-08"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    private final Person toAdd;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        toAdd \u003d person;","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"        return PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":67,"eman-kom":7}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"import static seedu.address.logic.parser.Type.TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":" * Adds a task to the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"public class AddTaskCommand extends AddCommand {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [t] : Adds a task to the list of tasks.\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_HEADER + \"HEADER \"","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"            + PREFIX_INFORMATION + \"INFORMATION\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [t] \"","lastModifiedDate":"2022-04-02"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_HEADER + \"Update interview statuses \"","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_DATE + \"2021-05-06 \"","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_TIME + \"05:29 \"","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_INFORMATION + \"Update all interview statuses to ACCEPTED\";","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added Task: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"    public final Task toAdd;","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"     * Constructor for AddTaskCommand.","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"     * @param task Task to be added","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), getType());","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"        return TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"imrajsinghsandhu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"imrajsinghsandhu"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":18,"imrajsinghsandhu":48,"eman-kom":3}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"public abstract class ClearCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [p] to clear all applicants\"","lastModifiedDate":"2022-04-02"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"            + \" or [i] to clear all interviews\" + \" or [t] to clear all tasks\";","lastModifiedDate":"2022-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":6,"-":12}},{"path":"src/main/java/seedu/address/logic/commands/ClearInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"public class ClearInterviewCommand extends ClearCommand {","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Interviews have all been cleared!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"        model.resetInterviews();","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"        return INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"brigittesantoso":18,"eman-kom":6}},{"path":"src/main/java/seedu/address/logic/commands/ClearPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INTERVIEW_LIST_NOT_EMPTY;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"public class ClearPersonCommand extends ClearCommand {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Applicants have all been cleared!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        if (model.getFilteredInterviewList().isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            model.resetPersons();","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"        } else {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_INTERVIEW_LIST_NOT_EMPTY);","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"        return PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"brigittesantoso":23,"eman-kom":6}},{"path":"src/main/java/seedu/address/logic/commands/ClearTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"public class ClearTaskCommand extends ClearCommand {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tasks have all been cleared!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"        model.resetTasks();","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"        return TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":23}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"        return null;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":1,"eman-kom":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    private final Type type;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult(String feedbackToUser, Type type, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult(String feedbackToUser, Type type) {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        this(feedbackToUser, type, false, false);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        return type;","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 type \u003d\u003d otherCommandResult.type","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        return Objects.hash(feedbackToUser, type, showHelp, exit);","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":14,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":4,"-":12}},{"path":"src/main/java/seedu/address/logic/commands/DeleteInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"public class DeleteInterviewCommand extends DeleteCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"            + \" [i] : Deletes the interview identified by the index number used in the displayed interview list,\\n\"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: INDEX (must be a positive integer),\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [i] 1\\n\";","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DELETE_INTERVIEW_SUCCESS \u003d \"Deleted Interview: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"     * Constructor for DeleteInterviewCommand.","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"     * @param targetIndex","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"    public DeleteInterviewCommand(Index targetIndex) {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cInterview\u003e lastShownList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        Interview interviewToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        model.deleteInterview(interviewToDelete);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERVIEW_SUCCESS, interviewToDelete), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof DeleteInterviewCommand // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteInterviewCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"        return INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":54,"eman-kom":6}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSON_HAS_INTERVIEW;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"public class DeletePersonCommand extends DeleteCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"            + \" [p] : Deletes the applicant identified by the index number used in the displayed applicant list,\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: INDEX (must be a positive integer),\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [p] 1\\n\";","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Applicant: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"     * Constructor for DeletePersonCommand.","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"     * @param targetIndex","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        Person personToDelete \u003d lastShownPersonList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        if (personHasInterview(personToDelete, model)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_PERSON_HAS_INTERVIEW);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"     * Check if applicant that we wish to delete has interview","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"     * @param person applicant","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"     * @param model model","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     * @return true if applicant has interview","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"    public boolean personHasInterview(Person person, Model model) {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cInterview\u003e lastShownInterviewList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        for (int i \u003d 0; i \u003c lastShownInterviewList.size(); i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"            if (lastShownInterviewList.get(i).getPerson().equals(person)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"                return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"        return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"eman-kom"},"content":"        return PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":79,"eman-kom":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import static seedu.address.logic.parser.Type.TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"public class DeleteTaskCommand extends DeleteCommand {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"        + \" [t] : Deletes the task identified by the index number used in the displayed task list,\\n\"","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"        + \"Parameters: INDEX (must be a positive integer),\\n \"","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [t] 1\\n\";","lastModifiedDate":"2022-04-02"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"     * Constructor for DeleteTaskCommand.","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @param targetIndex","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"        return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        return TASK;","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":17,"imrajsinghsandhu":39}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"public abstract class EditCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"brigittesantoso":3,"-":12}},{"path":"src/main/java/seedu/address/logic/commands/EditInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.INTERVIEW;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERVIEWS;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"public class EditInterviewCommand extends EditCommand {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [i] : Edits the details of the interview identified \"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"            + \"by the index number used in the displayed interview list. \"","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_DATE + \"DATE\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_TIME + \"TIME\u003e \\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [i] 1 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_DATE + \"2021-05-06 \"","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_TIME + \"10:30\";","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_EDIT_INTERVIEW_SUCCESS \u003d \"Edited Interview: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"This interview already exists in the address book.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    private final Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    private final EditInterviewDescriptor editInterviewDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"     * @param index of the interview in the filtered interview list to edit","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"     * @param editInterviewDescriptor details to edit the interview with","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    public EditInterviewCommand(Index index, EditInterviewDescriptor editInterviewDescriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(editInterviewDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        this.editInterviewDescriptor \u003d new EditInterviewDescriptor(editInterviewDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cInterview\u003e lastShownList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"        Interview interviewToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        Interview editedInterview \u003d createEditedInterview(interviewToEdit, editInterviewDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        if (!interviewToEdit.isSameInterview(editedInterview) \u0026\u0026 model.hasInterview(editedInterview)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"        model.setInterview(interviewToEdit, editedInterview);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        model.updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INTERVIEW_SUCCESS, editedInterview), getType());","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"     * Creates and returns a {@code Interview} with the details of {@code interviewToEdit}","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"     * edited with {@code editInterviewDescriptor}.","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"    private static Interview createEditedInterview(","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"            Interview interviewToEdit, EditInterviewDescriptor editInterviewDescriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"        assert interviewToEdit !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        Date updatedDate \u003d editInterviewDescriptor.getDate().orElse(interviewToEdit.getDate());","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"        Time updatedTime \u003d editInterviewDescriptor.getTime().orElse(interviewToEdit.getTime());","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"        return new Interview(interviewToEdit.getPerson(), updatedDate, updatedTime);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"        if (!(other instanceof EditInterviewCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"        EditInterviewCommand e \u003d (EditInterviewCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 editInterviewDescriptor.equals(e.editInterviewDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-01"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"        return INTERVIEW;","lastModifiedDate":"2022-04-01"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"     * Stores the details to edit the interview with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"     * corresponding field value of the interview.","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"    public static class EditInterviewDescriptor {","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"        private Date date;","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"brigittesantoso"},"content":"        private Time time;","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"        public EditInterviewDescriptor() {}","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"         *","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"        public EditInterviewDescriptor(EditInterviewDescriptor toCopy) {","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"            return CollectionUtil.isAnyNonNull(date, time);","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"        public void setTime(Time time) {","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"            this.time \u003d time;","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cTime\u003e getTime() {","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"            if (!(other instanceof EditInterviewDescriptor)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"                return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"            // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"            EditInterviewDescriptor e \u003d (EditInterviewDescriptor) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"            return getDate().equals(e.getDate())","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getTime().equals(e.getTime());","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":171,"eman-kom":1}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSON_HAS_INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":" * Edits the details of an existing applicant in the address book.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"*/","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"public class EditPersonCommand extends EditCommand {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [p] : Edits the details of the applicant identified \"","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"            + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_NAME + \"NAME\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_PHONE + \"PHONE\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_EMAIL + \"EMAIL\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_ADDRESS + \"ADDRESS\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_JOB + \"JOB\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_STAGE + \"STAGE\u003e \\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [p] 1 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Applicant: %1$s\";","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This applicant already exists in the address book.\";","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"    private final Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"     * @param index of the applicant in the filtered applicant list to edit","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     * @param editPersonDescriptor details to edit the applicant with","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"        if (personHasInterview(personToEdit, model)) {","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_PERSON_HAS_INTERVIEW);","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), getType());","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"     * Check if applicant that we wish to edit has interview","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"     * @param person applicant","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"     * @param model model","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"     * @return true if applicant has interview","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"    public boolean personHasInterview(Person person, Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cInterview\u003e lastShownInterviewList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"        for (int i \u003d 0; i \u003c lastShownInterviewList.size(); i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"            if (lastShownInterviewList.get(i).getPerson().equals(person)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"        return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"brigittesantoso"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"        Job updatedJob \u003d editPersonDescriptor.getJob().orElse(personToEdit.getJob());","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"        Stage updatedStage \u003d editPersonDescriptor.getStage().orElse(personToEdit.getStage());","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedJob, updatedStage);","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"brigittesantoso"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-01"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-04-01"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"        return PERSON;","lastModifiedDate":"2022-04-01"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"     * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"        private Name name;","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"        private Phone phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"        private Email email;","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"        private Address address;","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"        private Job job;","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"        private Stage stage;","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"            setJob(toCopy.job);","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"            setStage(toCopy.stage);","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"brigittesantoso"},"content":"        /**","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"brigittesantoso"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"brigittesantoso"},"content":"         */","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"brigittesantoso"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"brigittesantoso"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, job, stage);","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"brigittesantoso"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"brigittesantoso"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"brigittesantoso"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"brigittesantoso"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"brigittesantoso"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-03-30"},{"lineNumber":201,"author":{"gitId":"brigittesantoso"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":208,"author":{"gitId":"brigittesantoso"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"brigittesantoso"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"brigittesantoso"},"content":"        public void setJob(Job job) {","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"brigittesantoso"},"content":"            this.job \u003d job;","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cJob\u003e getJob() {","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(job);","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":224,"author":{"gitId":"brigittesantoso"},"content":"        public void setStage(Stage stage) {","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"brigittesantoso"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2022-03-30"},{"lineNumber":226,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cStage\u003e getStage() {","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(stage);","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"brigittesantoso"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"brigittesantoso"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"brigittesantoso"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"brigittesantoso"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"brigittesantoso"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"brigittesantoso"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"brigittesantoso"},"content":"                return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"brigittesantoso"},"content":"            // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"brigittesantoso"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":246,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":247,"author":{"gitId":"brigittesantoso"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-03-30"},{"lineNumber":251,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getJob().equals(e.getJob())","lastModifiedDate":"2022-03-30"},{"lineNumber":252,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getStage().equals(e.getStage());","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":254,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":255,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":256,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":256}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.TASK;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Header;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Information;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"public class EditTaskCommand extends EditCommand {","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [t] : Edits the details of the task identified \"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_HEADER + \"HEADER\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_DATE + \"DATE\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_TIME + \"TIME\u003e \"","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"            + \"\u003c\" + PREFIX_INFORMATION + \"INFORMATION\u003e \\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [t] 1 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_HEADER + \"Update interview statuses \"","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"            + PREFIX_DATE + \"2021-05-06 \";","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    private final Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-02"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask), getType());","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2022-04-08"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2022-04-08"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"    private static Task createEditedTask(","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"            Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"        Header updatedHeader \u003d editTaskDescriptor.getHeader().orElse(taskToEdit.getHeader());","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"        Information updatedInformation \u003d editTaskDescriptor.getInformation().orElse(taskToEdit.getInformation());","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        Date updatedDate \u003d editTaskDescriptor.getDate().orElse(taskToEdit.getDate());","lastModifiedDate":"2022-04-01"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"        Time updatedTime \u003d editTaskDescriptor.getTime().orElse(taskToEdit.getTime());","lastModifiedDate":"2022-04-01"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"        return new Task(updatedHeader, updatedDate, updatedTime, updatedInformation);","lastModifiedDate":"2022-04-01"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-01"},{"lineNumber":116,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-04-01"},{"lineNumber":117,"author":{"gitId":"brigittesantoso"},"content":"        return TASK;","lastModifiedDate":"2022-04-01"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-04-08"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"        private Header header;","lastModifiedDate":"2022-04-01"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"        private Information information;","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"        private Date date;","lastModifiedDate":"2022-04-01"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"        private Time time;","lastModifiedDate":"2022-04-01"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"         *","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"            setHeader(toCopy.header);","lastModifiedDate":"2022-04-01"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"            setInformation(toCopy.information);","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-04-01"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2022-04-01"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"            return CollectionUtil.isAnyNonNull(header, information, date, time);","lastModifiedDate":"2022-04-01"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"        public void setHeader(Header header) {","lastModifiedDate":"2022-04-01"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"            this.header \u003d header;","lastModifiedDate":"2022-04-01"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cHeader\u003e getHeader() {","lastModifiedDate":"2022-04-01"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(header);","lastModifiedDate":"2022-04-01"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"        public void setInformation(Information information) {","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"            this.information \u003d information;","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cInformation\u003e getInformation() {","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(information);","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2022-04-01"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-04-01"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2022-04-01"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-04-01"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"        public void setTime(Time time) {","lastModifiedDate":"2022-04-01"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"            this.time \u003d time;","lastModifiedDate":"2022-04-01"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":177,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":178,"author":{"gitId":"brigittesantoso"},"content":"        public Optional\u003cTime\u003e getTime() {","lastModifiedDate":"2022-04-01"},{"lineNumber":179,"author":{"gitId":"brigittesantoso"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2022-04-01"},{"lineNumber":180,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":181,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":182,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"brigittesantoso"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"brigittesantoso"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"brigittesantoso"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"brigittesantoso"},"content":"                return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"brigittesantoso"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"brigittesantoso"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"brigittesantoso"},"content":"                return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"brigittesantoso"},"content":"            // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"brigittesantoso"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"brigittesantoso"},"content":"            return getHeader().equals(e.getHeader())","lastModifiedDate":"2022-04-01"},{"lineNumber":198,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getInformation().equals(e.getInformation())","lastModifiedDate":"2022-04-01"},{"lineNumber":199,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-04-01"},{"lineNumber":200,"author":{"gitId":"brigittesantoso"},"content":"                    \u0026\u0026 getTime().equals(e.getTime());","lastModifiedDate":"2022-04-01"},{"lineNumber":201,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":204}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting HRConnect as requested ...\";","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, getType(), false, true);","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"brigittesantoso":2,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rcjj98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"rcjj98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"rcjj98"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"rcjj98"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"rcjj98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"rcjj98"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"rcjj98"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"rcjj98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"rcjj98"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"rcjj98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"rcjj98"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"rcjj98"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"rcjj98"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"rcjj98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"        + \": Exports all data of the all applicants into a CSV file. Accepts absolute path or relative path.\\n\"","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"rcjj98"},"content":"        + \"Parameters: filepath to the exported csv file\\n\"","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"rcjj98"},"content":"        + \"Example: export ../../myDataFile.csv\";","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"rcjj98"},"content":"    public static final String MISSING_CSV_FILE \u003d \"CSV file could not be created.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"rcjj98"},"content":"    private final Path csvFilePath;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"rcjj98"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"rcjj98"},"content":"     * Constructor for Export Command.","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"rcjj98"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"     * @param csvFilePath File path of CSV file to export applicant data to.","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"rcjj98"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"rcjj98"},"content":"    public ExportCommand(Path csvFilePath) {","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"rcjj98"},"content":"        requireNonNull(csvFilePath);","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"rcjj98"},"content":"        this.csvFilePath \u003d csvFilePath;","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"rcjj98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"rcjj98"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"rcjj98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"rcjj98"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"rcjj98"},"content":"        ObservableList\u003cPerson\u003e personList \u003d model.getFilteredPersonList(); //to read from json and write to CSV","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"rcjj98"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"rcjj98"},"content":"            //create new csv file to export data into","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"rcjj98"},"content":"            FileUtil.createFile(csvFilePath);","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"rcjj98"},"content":"            PrintWriter pw \u003d new PrintWriter(csvFilePath.toString());","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"rcjj98"},"content":"            for (Person p : personList) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"rcjj98"},"content":"                String name \u003d p.getName().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"rcjj98"},"content":"                String phone \u003d p.getPhone().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"rcjj98"},"content":"                String email \u003d p.getEmail().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"rcjj98"},"content":"                String address \u003d p.getAddress().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"rcjj98"},"content":"                String job \u003d p.getJob().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"rcjj98"},"content":"                String stage \u003d p.getStage().toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"rcjj98"},"content":"                pw.printf(\"%s\\t%s\\t%s\\t%s\\t%s\\t%s\\n\", name, phone, email, address, job, stage);","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"rcjj98"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"rcjj98"},"content":"            pw.close();","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"rcjj98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"rcjj98"},"content":"            throw new CommandException(MISSING_CSV_FILE);","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"rcjj98"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(\"Exported \" + personList.size() + \" applicants\u0027 data to \"","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"            + csvFilePath, getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        return PERSON;","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"rcjj98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"rcjj98"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":10,"rcjj98":57}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":" * Finds and lists all data in the address book which satisfies the search criteria.","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"public abstract class FindCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"    public abstract CommandResult execute(Model model);","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"eman-kom":4,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/FindInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.interview.InterviewContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"public class FindInterviewCommand extends FindCommand {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"            + \" [i] : Finds all interviews that meet search criteria.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"            + \"Only accepts: g/, d/, t/, n/ and j/ flags\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"            + \"Example: \" + COMMAND_WORD + \" [i] g/n/john j/software engineer g/d/2021-05-06\";","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"    private InterviewContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"     * Constructor for FindInterviewCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"     * @param predicate Search criteria to find interviews","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"    public FindInterviewCommand(InterviewContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"        model.updateFilteredInterviewList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_INTERVIEWS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"                model.getFilteredInterviewList().size()), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"        if (!(other instanceof FindInterviewCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        FindInterviewCommand e \u003d (FindInterviewCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"        return predicate.equals(e.predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"        return INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"brigittesantoso":2,"eman-kom":58}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"public class FindPersonCommand extends FindCommand {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"            + \" [p] : Finds all applicants that meet search criteria.\\n\"","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"            + \"Only accepts: g/, n/, p/, e/, a/, j/, and s/ flags\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"            + \"Example: \" + COMMAND_WORD + \" [p] g/n/john j/software engineer g/s/INPROGRESS\";","lastModifiedDate":"2022-04-03"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"    private PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"     * Constructor for FindPersonCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"     * @param predicate Search criteria to find applicants","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"    public FindPersonCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"                model.getFilteredPersonList().size()), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"        if (!(other instanceof FindPersonCommand)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"        FindPersonCommand e \u003d (FindPersonCommand) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        return predicate.equals(e.predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"        return PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"brigittesantoso":3,"eman-kom":56}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.tasks.TaskContainsKeywordPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"public class FindTaskCommand extends FindCommand {","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"            + \" [t] : Finds all tasks that meet search criteria.\\n\"","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"            + \"Only accepts: g/, h/, d/, t/, and i/ flags\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"            + \"Example: \" + COMMAND_WORD + \" [t] g/h/update d/2022-01-19 g/i/add\";","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"    private TaskContainsKeywordPredicate predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"     * Constructor for FindTaskCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"     * @param predicate Search criteria to find tasks","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"    public FindTaskCommand(TaskContainsKeywordPredicate predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"                model.getFilteredTaskList().size()), getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"        if (!(other instanceof FindTaskCommand)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"        FindTaskCommand e \u003d (FindTaskCommand) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        return predicate.equals(e.predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"        return TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":1,"eman-kom":58}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, getType(), true, false);","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"            \"Imports all job applicants data from csv file. Accepts absolute or relative path.\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"            + \"The csv file needs to contain the same fields as the \u0027add [p]\u0027 command.\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"            + \"Parameters: filepath to csv file\\n\"","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"            + \"Example: import ../../past_data.csv\";","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"    private List\u003cPerson\u003e persons;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"     * Constructor for Import Command.","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"     * @param persons List of applicants to be added.","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"    public ImportCommand(List\u003cPerson\u003e persons) {","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(persons);","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"        // checks if any persons is already in address book.","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"        for (int i \u003d 0; i \u003c persons.size(); i++) {","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"            if (model.hasPerson(persons.get(i))) {","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"                int entryNum \u003d i + 1;","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"                throw new CommandException(\"Entry \" + entryNum + \" is already in address book.\\nAborting now.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"        persons.forEach(model::addPerson);","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(\"Added \" + persons.size() + \" applicants to address book.\", getType());","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"    public String toString() {","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"        persons.forEach(person -\u003e s.append(person.toString() + \"\\n\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"        return s.toString().strip();","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"        if (!(other instanceof ImportCommand)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"            return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"        // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"        ImportCommand e \u003d (ImportCommand) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        return this.toString().equals(e.toString());","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"        return PERSON;","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"brigittesantoso":8,"eman-kom":70}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [p] to list all applicants\"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"        + \" or [i] to list all interviews\" + \" or [t] to list all tasks\";","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public abstract CommandResult execute(Model model);","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":4,"-":9}},{"path":"src/main/java/seedu/address/logic/commands/ListInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERVIEWS;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"public class ListInterviewCommand extends ListCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all interviews!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        model.updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"        return INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":20,"eman-kom":6}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"public class ListPersonCommand extends ListCommand {","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"        return PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":18,"eman-kom":6}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"public class ListTaskCommand extends ListCommand {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks!\";","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        return new CommandResult(MESSAGE_SUCCESS, getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    public Type getType() {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        return TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":26}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":" * Represents an error which occurs during execution of a {@link String}.","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"brigittesantoso":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_INTERVIEW;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_PERSON;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        String type \u003d ArgumentTokenizer.getType(args.trim());","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        String removedType \u003d args.trim().substring(3);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        switch (type) {","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_PERSON:","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"            return new AddPersonCommandParser().parse(removedType);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_INTERVIEW:","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            return new AddInterviewCommandParser().parse(removedType);","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_TASK:","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"            return new AddTaskCommandParser().parse(removedType);","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        default:","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"brigittesantoso":13,"imrajsinghsandhu":2,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/AddInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":" * Parses input arguments and creates a new AddInterviewCommand object","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"public class AddInterviewCommandParser implements Parser\u003cAddInterviewCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterviewCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"     * and returns an AddInterviewCommand object for execution.","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"    public AddInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"                    AddInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_TIME)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        Time time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        return new AddInterviewCommand(index, date, time);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":56}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"                        PREFIX_ADDRESS, PREFIX_JOB, PREFIX_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"                PREFIX_JOB, PREFIX_STAGE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        Job job \u003d ParserUtil.parseJob(argMultimap.getValue(PREFIX_JOB).get());","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        Stage stage \u003d ParserUtil.parseStage(argMultimap.getValue(PREFIX_STAGE).get());","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        Person person \u003d new Person(name, phone, email, address, job, stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":65}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Header;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Information;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_HEADER, PREFIX_INFORMATION, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"                PREFIX_HEADER, PREFIX_INFORMATION, PREFIX_DATE, PREFIX_TIME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"        Header header \u003d ParserUtil.parseHeader(argMultimap.getValue(PREFIX_HEADER).get());","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        Information information \u003d ParserUtil.parseInformation(argMultimap.getValue(PREFIX_INFORMATION).get());","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        Time time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        Task newTask \u003d new Task(header, date, time, information);","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"        return new AddTaskCommand(newTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":24,"imrajsinghsandhu":33}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"rcjj98"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"rcjj98"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"rcjj98"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"rcjj98"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"rcjj98"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":2,"eman-kom":4,"-":70,"rcjj98":7}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"rcjj98"},"content":"        return values.isEmpty()","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"rcjj98"},"content":"                ? Optional.empty()","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"rcjj98"},"content":"                : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"rcjj98":3}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TYPE_GIVEN;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_TYPE_GIVEN;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"    public static String getType(String trimmedArgsString) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"        if (trimmedArgsString.equals(\"\") || trimmedArgsString.length() \u003c 3) {","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(MESSAGE_NO_TYPE_GIVEN);","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"        } else if (trimmedArgsString.charAt(0) !\u003d \u0027[\u0027 || trimmedArgsString.charAt(2) !\u003d \u0027]\u0027) {","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(MESSAGE_INVALID_TYPE_GIVEN);","lastModifiedDate":"2022-04-09"},{"lineNumber":158,"author":{"gitId":"imrajsinghsandhu"},"content":"        } else if (trimmedArgsString.charAt(1) !\u003d \u0027p\u0027 \u0026\u0026 trimmedArgsString.charAt(1) !\u003d \u0027i\u0027","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"imrajsinghsandhu"},"content":"            \u0026\u0026 trimmedArgsString.charAt(1) !\u003d \u0027t\u0027) {","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(MESSAGE_INVALID_TYPE_GIVEN);","lastModifiedDate":"2022-03-27"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"        return trimmedArgsString.substring(0, 3);","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"brigittesantoso":15,"imrajsinghsandhu":3,"-":148}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_INTERVIEW;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_PERSON;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ClearInterviewCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ClearPersonCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ClearTaskCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"public class ClearCommandParser {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     * Parse ClearCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"        String type \u003d ArgumentTokenizer.getType(args.trim());","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"        String removedType \u003d args.trim().substring(3);","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        if (removedType.length() !\u003d 0) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        switch (type) {","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_PERSON:","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            return new ClearPersonCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_INTERVIEW:","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            return new ClearInterviewCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_TASK:","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"            return new ClearTaskCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"        default:","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"            return null;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"brigittesantoso":38}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    public static final Prefix PREFIX_JOB \u003d new Prefix(\"j/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    public static final Prefix PREFIX_STAGE \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    public static final Prefix PREFIX_HEADER \u003d new Prefix(\"h/\");","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    public static final Prefix PREFIX_INFORMATION \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    /* Type definitions */","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    public static final String TYPE_INTERVIEW \u003d \"[i]\";","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    public static final String TYPE_PERSON \u003d \"[p]\";","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static final String TYPE_TASK \u003d \"[t]\";","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"brigittesantoso":9,"imrajsinghsandhu":1,"eman-kom":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_INTERVIEW;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_PERSON;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * DeleteCommand and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        String type \u003d ArgumentTokenizer.getType(args.trim());","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        String removedType \u003d args.trim().substring(3);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        switch (type) {","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_PERSON:","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"            return new DeletePersonCommandParser().parse(removedType);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_INTERVIEW:","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            return new DeleteInterviewCommandParser().parse(removedType);","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_TASK:","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"            return new DeleteTaskCommandParser().parse(removedType);","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        default:","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"brigittesantoso":14,"imrajsinghsandhu":4,"-":18}},{"path":"src/main/java/seedu/address/logic/parser/DeleteInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"public class DeleteInterviewCommandParser implements Parser\u003cDeleteInterviewCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteInterviewCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"     * and returns a DeleteInterviewCommand object for execution.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    public DeleteInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"            return new DeleteInterviewCommand(index);","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":30}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":26}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"public class DeleteTaskCommandParser {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"     * DeleteTaskCommand and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":2,"imrajsinghsandhu":24}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * EditCommand and returns a EditCommand object for execution.","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        String type \u003d ArgumentTokenizer.getType(args.trim());","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        String removedType \u003d args.trim().substring(3);","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        switch (type) {","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_PERSON:","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"            return new EditPersonCommandParser().parse(removedType);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_INTERVIEW:","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            return new EditInterviewCommandParser().parse(removedType);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_TASK:","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            return new EditTaskCommandParser().parse(removedType);","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        default:","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            return null;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"brigittesantoso":18,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/EditInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditInterviewCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"public class EditInterviewCommandParser implements Parser\u003cEditInterviewCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the EditInterviewCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"     * and returns an EditInterviewCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    public EditInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"                    EditInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        EditInterviewCommand.EditInterviewDescriptor editInterviewDescriptor \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"                new EditInterviewCommand.EditInterviewDescriptor();","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"            editInterviewDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"            editInterviewDescriptor.setTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        if (!editInterviewDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(EditInterviewCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        return new EditInterviewCommand(index, editInterviewDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":48}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"                        PREFIX_ADDRESS, PREFIX_JOB, PREFIX_STAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        Index index;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_JOB).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"            editPersonDescriptor.setJob(ParserUtil.parseJob(argMultimap.getValue(PREFIX_JOB).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_STAGE).isPresent()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"            editPersonDescriptor.setStage(ParserUtil.parseStage(argMultimap.getValue(PREFIX_STAGE).get()));","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":64}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_HEADER, PREFIX_INFORMATION, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"                    EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"        EditTaskCommand.EditTaskDescriptor editTaskDescriptor \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"                new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_HEADER).isPresent()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"            editTaskDescriptor.setHeader(ParserUtil.parseHeader(","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"                    argMultimap.getValue(PREFIX_HEADER).get()));","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_INFORMATION).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"            editTaskDescriptor.setInformation(ParserUtil.parseInformation(","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"                    argMultimap.getValue(PREFIX_INFORMATION).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"            editTaskDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"            editTaskDescriptor.setTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":58}},{"path":"src/main/java/seedu/address/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rcjj98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"rcjj98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"rcjj98"},"content":"import static seedu.address.commons.util.FileUtil.isValidPath;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"rcjj98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"rcjj98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"rcjj98"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"rcjj98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"rcjj98"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"rcjj98"},"content":"    public static final String INVALID_FILE_NAME \u003d \"File name should only contain alphanumeric characters\";","lastModifiedDate":"2022-04-09"},{"lineNumber":14,"author":{"gitId":"rcjj98"},"content":"    public static final String INVALID_FILE_PATH \u003d \"That is not a valid file path\\n\" + INVALID_FILE_NAME;","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"rcjj98"},"content":"    public static final String WRONG_FILE_TYPE \u003d \"Please include a .csv file extension with your file name.\";","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"rcjj98"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     * Parses the user input of the path to target csv file to export applicant data into.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"rcjj98"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"rcjj98"},"content":"     * @param args String path to the csv file.","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"rcjj98"},"content":"     * @return ExportCommand with path to csv file.","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"rcjj98"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"rcjj98"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"rcjj98"},"content":"        //check whether valid path input given by the user","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"rcjj98"},"content":"        String strCsvFilePath \u003d args.strip();","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"rcjj98"},"content":"        checkFilePath(strCsvFilePath);","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"rcjj98"},"content":"        Path csvFilePath \u003d Paths.get(strCsvFilePath);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"rcjj98"},"content":"        return new ExportCommand(csvFilePath);","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"rcjj98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"rcjj98"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"rcjj98"},"content":"     * Checks if specified filepath to csv file is not empty string and a valid csv filepath.","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"rcjj98"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"rcjj98"},"content":"     * @param path filepath to target csv file.","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"rcjj98"},"content":"     * @throws ParseException If filepath is \"\" or not a valid filepath or not a .csv file.","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"rcjj98"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"rcjj98"},"content":"    private void checkFilePath(String path) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"rcjj98"},"content":"        if (path.equals(\"\")) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"rcjj98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"rcjj98"},"content":"        } else if (!isValidPath(path)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"rcjj98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, INVALID_FILE_PATH));","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"rcjj98"},"content":"        } else if (!isValidCsvFile(path)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"rcjj98"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, WRONG_FILE_TYPE));","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"rcjj98"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"rcjj98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"rcjj98"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"rcjj98"},"content":"     * Checks if the given file path leads to a file with .csv extension.","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"rcjj98"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"rcjj98"},"content":"     * @param path String filepath to target file.","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"rcjj98"},"content":"     * @return boolean true or false.","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"rcjj98"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"rcjj98"},"content":"    private boolean isValidCsvFile(String path) {","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"rcjj98"},"content":"        return path.endsWith(\".csv\");","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"rcjj98"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"rcjj98"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":1,"rcjj98":57}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_INTERVIEW;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_PERSON;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Header;","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Information;","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"    public static final String EXTRA_FLAG_ERROR \u003d \"Extra g/ flag found.\\n\";","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"    public static final String NO_KEYWORDS_ERROR \u003d \"Some g/ flags are empty.\\n\";","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"    protected static String padding \u003d \" \";","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(FindCommandParser.class);","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"     * Parses the initial input taken from the application","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"     * @param input The input passed from the application.","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"     * @return A Find(Person/Interview/Tasks)Command object ready for execution or an error when no type is found","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException A search term has an invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"    public FindCommand parse(String input) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"        logger.info(\"Parsing Input for Find -\u003e \\\"\" + input + \"\\\"\");","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"        String type \u003d ArgumentTokenizer.getType(input.trim());","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"        String args \u003d input.trim().substring(3);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"        // splits tokens by its groups","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"        ArgumentMultimap groupTokens \u003d ArgumentTokenizer.tokenize(args, PREFIX_GROUP);","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e allGroups \u003d groupTokens.getAllValues(PREFIX_GROUP);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"        switch (type) {","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"        case TYPE_PERSON:","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"            checkValidGroups(allGroups, args, FindPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"            return new FindPersonCommandParser().parse(allGroups);","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        case TYPE_INTERVIEW:","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"            checkValidGroups(allGroups, args, FindInterviewCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"            return new FindInterviewCommandParser().parse(allGroups);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"        case TYPE_TASK:","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"            checkValidGroups(allGroups, args, FindTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"            return new FindTaskCommandParser().parse(allGroups);","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"        default:","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":"            return null;","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"eman-kom"},"content":"    // ------ Checks input for any invalid data ------ //","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"eman-kom"},"content":"    private void checkValidGroups(List\u003cString\u003e allGroups, String args, String msg) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"eman-kom"},"content":"        boolean isCompletelyEmpty \u003d args.isEmpty();","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"eman-kom"},"content":"        boolean hasNoSpaceBetweenInitialFlags \u003d allGroups.isEmpty();","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"eman-kom"},"content":"        boolean hasNoKeywords \u003d allGroups.stream().anyMatch(grp -\u003e grp.strip().equals(\"\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"eman-kom"},"content":"        boolean stillHasGroupFlag \u003d allGroups.stream()","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"eman-kom"},"content":"                .anyMatch(grp -\u003e grp.strip().startsWith(String.valueOf(PREFIX_GROUP)));","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":91,"author":{"gitId":"eman-kom"},"content":"        if (hasNoKeywords) {","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(NO_KEYWORDS_ERROR + msg);","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"eman-kom"},"content":"        if (stillHasGroupFlag) {","lastModifiedDate":"2022-04-10"},{"lineNumber":96,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(EXTRA_FLAG_ERROR + msg);","lastModifiedDate":"2022-04-10"},{"lineNumber":97,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-04-10"},{"lineNumber":98,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":99,"author":{"gitId":"eman-kom"},"content":"        if (isCompletelyEmpty || hasNoSpaceBetweenInitialFlags) {","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, msg));","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":103,"author":{"gitId":"eman-kom"},"content":"        // check for cases where there are no flags after the \u0027g/\u0027 flag","lastModifiedDate":"2022-04-01"},{"lineNumber":104,"author":{"gitId":"eman-kom"},"content":"        for (String group : allGroups) {","lastModifiedDate":"2022-04-01"},{"lineNumber":105,"author":{"gitId":"eman-kom"},"content":"            String firstArg \u003d group.strip().split(\"\\\\s+\")[0];","lastModifiedDate":"2022-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":107,"author":{"gitId":"eman-kom"},"content":"            if (!havePrefixesPresent(padding + firstArg, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-04-01"},{"lineNumber":108,"author":{"gitId":"eman-kom"},"content":"                    PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_JOB, PREFIX_STAGE, PREFIX_DATE, PREFIX_TIME,","lastModifiedDate":"2022-04-01"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"                    PREFIX_GROUP, PREFIX_INFORMATION, PREFIX_HEADER)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":110,"author":{"gitId":"eman-kom"},"content":"                throw new ParseException(NO_KEYWORDS_ERROR + msg);","lastModifiedDate":"2022-04-10"},{"lineNumber":111,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":112,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":113,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid dates.","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":119,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException A date was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidDates(List\u003cString\u003e dates, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":122,"author":{"gitId":"eman-kom"},"content":"        if (dates.stream().anyMatch(d -\u003e !Date.isValidDate(d.strip()))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid date\\n\" + Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":124,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid time.","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":131,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException A time was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidTime(List\u003cString\u003e times, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":134,"author":{"gitId":"eman-kom"},"content":"        if (times.stream().anyMatch(t -\u003e !Time.isValidTime(t.strip()))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid time\\n\" + Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":136,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid names.","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":143,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException A name was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidName(List\u003cString\u003e names, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":146,"author":{"gitId":"eman-kom"},"content":"        if (names.stream().anyMatch(n -\u003e !Name.isValidName(n.strip()))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid name\\n\" + Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":148,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":150,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"     * Checks the current group for any invalid header.","lastModifiedDate":"2022-04-01"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-01"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException A header was found to have invalid format.","lastModifiedDate":"2022-04-01"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":157,"author":{"gitId":"eman-kom"},"content":"    public static void checkInvalidHeader(List\u003cString\u003e header, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"        if (header.stream().anyMatch(h -\u003e !Header.isValidHeader(h.strip()))) {","lastModifiedDate":"2022-04-01"},{"lineNumber":159,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid header\\n\" + Header.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":164,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid jobs.","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":168,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException A job was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidJob(List\u003cString\u003e jobs, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":171,"author":{"gitId":"eman-kom"},"content":"        if (jobs.stream().anyMatch(j -\u003e !Job.isValidJob(j.strip()))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid job\\n\" + Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":173,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid phone numbers.","lastModifiedDate":"2022-03-30"},{"lineNumber":178,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":180,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException A phone number was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":181,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidPhone(List\u003cString\u003e phones, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":183,"author":{"gitId":"eman-kom"},"content":"        if (phones.stream().anyMatch(p -\u003e !Phone.isValidPhone(p))) {","lastModifiedDate":"2022-04-01"},{"lineNumber":184,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid phone number\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":185,"author":{"gitId":"eman-kom"},"content":"                    + Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid emails.","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":193,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException An email was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidEmail(List\u003cString\u003e emails, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":196,"author":{"gitId":"eman-kom"},"content":"        if (emails.stream().anyMatch(e -\u003e !Email.isValidEmail(e))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid email\\n\" + Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":198,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":201,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid addresses.","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":204,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":205,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException An address was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidAddress(List\u003cString\u003e addresses, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":208,"author":{"gitId":"eman-kom"},"content":"        if (addresses.stream().anyMatch(a -\u003e !Address.isValidAddress(a))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid address\\n\" + Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":210,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":212,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid stages.","lastModifiedDate":"2022-03-30"},{"lineNumber":215,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":216,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":217,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException A stage was found to have invalid format.","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidStage(List\u003cString\u003e stages, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":220,"author":{"gitId":"eman-kom"},"content":"        if (stages.stream().anyMatch(s -\u003e !Stage.isValidStage(s))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"[\" + group + \"] contains invalid stage\\n\" + Stage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":222,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":223,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":224,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":225,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":226,"author":{"gitId":"eman-kom"},"content":"     * Checks the current group for any invalid information.","lastModifiedDate":"2022-04-01"},{"lineNumber":227,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-04-01"},{"lineNumber":228,"author":{"gitId":"eman-kom"},"content":"     * @param group Current group of tokens.","lastModifiedDate":"2022-04-01"},{"lineNumber":229,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException An information  was found to have invalid format.","lastModifiedDate":"2022-04-08"},{"lineNumber":230,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":231,"author":{"gitId":"eman-kom"},"content":"    protected static void checkInvalidInformation(List\u003cString\u003e infos, String group) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":232,"author":{"gitId":"eman-kom"},"content":"        if (infos.stream().anyMatch(i -\u003e !Information.isValidInformation(i))) {","lastModifiedDate":"2022-04-01"},{"lineNumber":233,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(","lastModifiedDate":"2022-04-01"},{"lineNumber":234,"author":{"gitId":"eman-kom"},"content":"                    \"[\" + group + \"] contains invalid information\\n\" + Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":235,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":237,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":238,"author":{"gitId":"eman-kom"},"content":"    protected static boolean havePrefixesPresent(String group, Prefix... prefixes) {","lastModifiedDate":"2022-04-01"},{"lineNumber":239,"author":{"gitId":"eman-kom"},"content":"        ArgumentMultimap allFlags \u003d ArgumentTokenizer.tokenize(padding + group, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-04-01"},{"lineNumber":240,"author":{"gitId":"eman-kom"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_JOB, PREFIX_STAGE, PREFIX_DATE, PREFIX_TIME,","lastModifiedDate":"2022-04-01"},{"lineNumber":241,"author":{"gitId":"eman-kom"},"content":"                PREFIX_GROUP, PREFIX_INFORMATION, PREFIX_HEADER);","lastModifiedDate":"2022-04-01"},{"lineNumber":242,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":243,"author":{"gitId":"eman-kom"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e allFlags.getValue(prefix).isPresent());","lastModifiedDate":"2022-04-01"},{"lineNumber":244,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"brigittesantoso":17,"eman-kom":204,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/FindInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.interview.InterviewContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"public class FindInterviewCommandParser extends FindCommandParser {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"     * Checks for any data that does not follow format.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"     * @param groups All groups captured by the g/ flag.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"     * @return A new FindInterViewCommand Object ready for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException An invalid input was found.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"    public FindInterviewCommand parse(List\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"        for (String group : groups) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"            if (havePrefixesPresent(group, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_STAGE,","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"                    PREFIX_GROUP, PREFIX_INFORMATION, PREFIX_HEADER)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"                throw new ParseException(\"[\" + group + \"] Invalid flags are found.\");","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"            ArgumentMultimap fields \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"                    padding + group, PREFIX_NAME, PREFIX_DATE, PREFIX_TIME, PREFIX_JOB);","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"            checkInvalidDates(fields.getAllValues(PREFIX_DATE), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            checkInvalidTime(fields.getAllValues(PREFIX_TIME), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"            checkInvalidName(fields.getAllValues(PREFIX_NAME), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"            checkInvalidJob(fields.getAllValues(PREFIX_JOB), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"        return new FindInterviewCommand(new InterviewContainsKeywordsPredicate(groups));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"eman-kom":50}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"public class FindPersonCommandParser extends FindCommandParser {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"     * Checks for any data that does not follow format.","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"     * @param groups All groups captured by the g/ flag.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"     * @return A new FindPersonCommand Object ready for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException An invalid input was found.","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"    public FindPersonCommand parse(List\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"        for (String group : groups) {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"            if (havePrefixesPresent(group, PREFIX_DATE, PREFIX_TIME, PREFIX_GROUP,","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"                    PREFIX_INFORMATION, PREFIX_HEADER)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"                throw new ParseException(\"[\" + group + \"] Invalid flags are found.\");","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"            ArgumentMultimap fields \u003d ArgumentTokenizer.tokenize(padding + group, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"                    PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_JOB, PREFIX_STAGE);","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"            checkInvalidName(fields.getAllValues(PREFIX_NAME), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            checkInvalidPhone(fields.getAllValues(PREFIX_PHONE), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"            checkInvalidEmail(fields.getAllValues(PREFIX_EMAIL), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"            checkInvalidAddress(fields.getAllValues(PREFIX_ADDRESS), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"            checkInvalidJob(fields.getAllValues(PREFIX_JOB), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"            checkInvalidStage(fields.getAllValues(PREFIX_STAGE), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"        return new FindPersonCommand(new PersonContainsKeywordsPredicate(groups));","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"eman-kom":53}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.tasks.TaskContainsKeywordPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"public class FindTaskCommandParser extends FindCommandParser {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"     * Checks for any data that does not follow format.","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"     * @param groups All groups captured by the g/ flag.","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"     * @return A new FindTaskCommand Object ready for execution.","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"     * @throws ParseException An invalid input was found.","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"    public FindTaskCommand parse(List\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"        for (String group : groups) {","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"            if (havePrefixesPresent(group, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_JOB,","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"                    PREFIX_STAGE, PREFIX_GROUP)) {","lastModifiedDate":"2022-04-03"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"                throw new ParseException(\"[\" + group + \"] Invalid flags are found.\");","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"            ArgumentMultimap fields \u003d ArgumentTokenizer.tokenize(padding + group, PREFIX_HEADER,","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"                    PREFIX_INFORMATION, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"            checkInvalidHeader(fields.getAllValues(PREFIX_HEADER), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            checkInvalidInformation(fields.getAllValues(PREFIX_INFORMATION), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"            checkInvalidDates(fields.getAllValues(PREFIX_DATE), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"            checkInvalidTime(fields.getAllValues(PREFIX_TIME), group);","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"        return new FindTaskCommand(new TaskContainsKeywordPredicate(groups));","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":8,"eman-kom":43}},{"path":"src/main/java/seedu/address/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"    public static final String FILE_DOES_NOT_EXIST \u003d \"The file does not exists or it is not an actual file.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"            + \"If using relative path, your current working directory is \"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"            + System.getProperty(\"user.dir\");","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"    public static final String INVALID_FILE_PATH \u003d \"That is not a valid file path\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"            + \"Please check for any illegal characters.\";","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"    public static final String PARSE_ERROR \u003d \"File cannot be parsed due to IO error.\";","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"    public static final String WRONG_FILE_TYPE \u003d \"No csv file extension found\";","lastModifiedDate":"2022-04-05"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"    private static final int NUM_OF_FIELDS \u003d 6;","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"        String filepath \u003d args.strip();","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"        checkFilePath(filepath);","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            return new ImportCommand(readCsv(Paths.get(filepath)));","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(PARSE_ERROR);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"    private List\u003cPerson\u003e readCsv(Path path) throws IOException, ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(path);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-05"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e entries \u003d FileUtil.readFromFileLines(path);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"        for (int i \u003d 0; i \u003c entries.size(); i++) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"            String[] allFields \u003d entries.get(i).strip().split(\"\\t\");","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"            ArrayList\u003cString\u003e strippedFields \u003d getFields(allFields, i + 1);","lastModifiedDate":"2022-04-05"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"            Person newPerson \u003d createPerson(strippedFields, i + 1);","lastModifiedDate":"2022-04-05"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"            updatePersons(persons, newPerson, i + 1);","lastModifiedDate":"2022-04-05"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"        return persons;","lastModifiedDate":"2022-04-05"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"    private void checkFilePath(String path) throws ParseException {","lastModifiedDate":"2022-04-05"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"        if (path.equals(\"\")) {","lastModifiedDate":"2022-04-05"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"        } else if (!FileUtil.isValidPath(path)) {","lastModifiedDate":"2022-04-05"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, INVALID_FILE_PATH));","lastModifiedDate":"2022-04-05"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"        } else if (!FileUtil.isFileExists(Paths.get(path))) {","lastModifiedDate":"2022-04-05"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FILE_DOES_NOT_EXIST));","lastModifiedDate":"2022-04-05"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        } else if (!(path.endsWith(\".csv\"))) {","lastModifiedDate":"2022-04-05"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, WRONG_FILE_TYPE));","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-04-05"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"    private ArrayList\u003cString\u003e getFields(String[] allFields, int lineNo) throws ParseException {","lastModifiedDate":"2022-04-05"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"        ArrayList\u003cString\u003e strippedFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-05"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"        for (String f : allFields) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"eman-kom"},"content":"            String field \u003d f.strip();","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"eman-kom"},"content":"            if (!field.equals(\"\")) {","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"eman-kom"},"content":"                strippedFields.add(field);","lastModifiedDate":"2022-04-05"},{"lineNumber":84,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"eman-kom"},"content":"        if (strippedFields.size() !\u003d NUM_OF_FIELDS) {","lastModifiedDate":"2022-04-09"},{"lineNumber":88,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"Line \" + lineNo + \": length of fields is not correct\");","lastModifiedDate":"2022-04-09"},{"lineNumber":89,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":91,"author":{"gitId":"eman-kom"},"content":"        return strippedFields;","lastModifiedDate":"2022-04-09"},{"lineNumber":92,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-04-09"},{"lineNumber":93,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"eman-kom"},"content":"    private Person createPerson(ArrayList\u003cString\u003e fields, int lineNo) throws ParseException {","lastModifiedDate":"2022-04-05"},{"lineNumber":95,"author":{"gitId":"eman-kom"},"content":"        assert fields.size() \u003d\u003d NUM_OF_FIELDS : \"Number of fields are incorrect\";","lastModifiedDate":"2022-04-05"},{"lineNumber":96,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":97,"author":{"gitId":"eman-kom"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"eman-kom"},"content":"            Name name \u003d ParserUtil.parseName(fields.get(0).strip());","lastModifiedDate":"2022-04-05"},{"lineNumber":99,"author":{"gitId":"eman-kom"},"content":"            Phone phone \u003d ParserUtil.parsePhone(fields.get(1).strip());","lastModifiedDate":"2022-04-05"},{"lineNumber":100,"author":{"gitId":"eman-kom"},"content":"            Email email \u003d ParserUtil.parseEmail(fields.get(2).strip());","lastModifiedDate":"2022-04-05"},{"lineNumber":101,"author":{"gitId":"eman-kom"},"content":"            Address address \u003d ParserUtil.parseAddress(fields.get(3).strip());","lastModifiedDate":"2022-04-05"},{"lineNumber":102,"author":{"gitId":"eman-kom"},"content":"            Job job \u003d ParserUtil.parseJob(fields.get(4).strip());","lastModifiedDate":"2022-04-05"},{"lineNumber":103,"author":{"gitId":"eman-kom"},"content":"            Stage stage \u003d ParserUtil.parseStage(fields.get(5).strip());","lastModifiedDate":"2022-04-05"},{"lineNumber":104,"author":{"gitId":"eman-kom"},"content":"            return new Person(name, phone, email, address, job, stage);","lastModifiedDate":"2022-04-05"},{"lineNumber":105,"author":{"gitId":"eman-kom"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"Line \" + lineNo + \": \" + e.getMessage());","lastModifiedDate":"2022-04-09"},{"lineNumber":107,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"eman-kom"},"content":"    private void updatePersons(List\u003cPerson\u003e persons, Person newPerson, int lineNo) throws ParseException {","lastModifiedDate":"2022-04-05"},{"lineNumber":111,"author":{"gitId":"eman-kom"},"content":"        requireNonNull(newPerson);","lastModifiedDate":"2022-04-05"},{"lineNumber":112,"author":{"gitId":"eman-kom"},"content":"        boolean isUniquePerson \u003d persons.stream().noneMatch(p -\u003e p.isSamePerson(newPerson));","lastModifiedDate":"2022-04-05"},{"lineNumber":113,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"eman-kom"},"content":"        if (isUniquePerson) {","lastModifiedDate":"2022-04-05"},{"lineNumber":115,"author":{"gitId":"eman-kom"},"content":"            persons.add(newPerson);","lastModifiedDate":"2022-04-05"},{"lineNumber":116,"author":{"gitId":"eman-kom"},"content":"        } else {","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"eman-kom"},"content":"            throw new ParseException(\"Line \" + lineNo + \" applicant is duplicated in csv file.\");","lastModifiedDate":"2022-04-09"},{"lineNumber":118,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"eman-kom":120}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_INTERVIEW;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_PERSON;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.TYPE_TASK;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ListInterviewCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * Parse ListCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"        String type \u003d ArgumentTokenizer.getType(args.trim());","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"        String removedType \u003d args.trim().substring(3);","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        if (removedType.length() !\u003d 0) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"        switch (type) {","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_PERSON:","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            return new ListPersonCommand();","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_INTERVIEW:","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            return new ListInterviewCommand();","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        case TYPE_TASK:","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"        default:","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"            return null;","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":38}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Header;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Information;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"     * Parses a {@code String time} into a {@code Time}.","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"     * Parses a {@code String job} into a {@code Job}.","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the given {@code job} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"    public static Job parseJob(String job) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(job);","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"        String trimmedJob \u003d job.trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"        if (!Job.isValidJob(trimmedJob)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"        return new Job(trimmedJob);","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"     * Parses a {@code String stage} into a {@code Stage}.","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the given {@code stage} is invalid.","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"    public static Stage parseStage(String stage) throws ParseException {","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"        String trimmedStage \u003d stage.trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"        if (!Stage.isValidStage(trimmedStage)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(Stage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"        return new Stage(trimmedStage);","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"     * Parses a {@code String header} into a {@code Header}.","lastModifiedDate":"2022-04-01"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-04-01"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the given {@code header} is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"    public static Header parseHeader(String header) throws ParseException {","lastModifiedDate":"2022-04-01"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(header);","lastModifiedDate":"2022-04-01"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"        String trimmedHeader \u003d header.trim();","lastModifiedDate":"2022-04-01"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"        if (!Header.isValidHeader(trimmedHeader)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(Header.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"        return new Header(trimmedHeader);","lastModifiedDate":"2022-04-01"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":177,"author":{"gitId":"brigittesantoso"},"content":"     * Parses a {@code String information} into a {@code Information}.","lastModifiedDate":"2022-04-01"},{"lineNumber":178,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-08"},{"lineNumber":180,"author":{"gitId":"brigittesantoso"},"content":"     * @throws ParseException if the given {@code information} is invalid.","lastModifiedDate":"2022-04-08"},{"lineNumber":181,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"brigittesantoso"},"content":"    public static Information parseInformation(String information) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(information);","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"brigittesantoso"},"content":"        String trimmedInformation \u003d information.trim();","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"brigittesantoso"},"content":"        if (!Information.isValidInformation(trimmedInformation)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"brigittesantoso"},"content":"            throw new ParseException(Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"brigittesantoso"},"content":"        return new Information(trimmedInformation);","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"},{"lineNumber":191,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":78,"imrajsinghsandhu":6,"-":106,"rcjj98":1}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":" * E.g. \u0027n/\u0027 in \u0027add [p] n/ James ...\u0027.","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"brigittesantoso":1,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"public enum Type {","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"    PERSON,","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"    INTERVIEW,","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"    TASK","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":5,"imrajsinghsandhu":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.UniqueTaskList;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":" * Duplicates are not allowed (by .isSamePerson .isSameInterview .isSameTask comparison)","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    private final UniqueInterviewList interviews;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        interviews \u003d new UniqueInterviewList();","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"     * Creates an AddressBook using {@code toBeCopied}","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the contents of the applicant list with {@code persons}.","lastModifiedDate":"2022-04-08"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"     * {@code persons} must not contain duplicate applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the contents of the interview list with {@code interviews}.","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"     * {@code interviews} must not contain duplicate interviews.","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        this.interviews.setInterviews(interviews);","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        setInterviews(newData.getInterviewList());","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if an applicant with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"     * Adds an applicant to the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"     * The applicant must not already exist in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-04-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"     * The applicant identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-04-08"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"     * existing applicant in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"     * Resets the existing applicant list.","lastModifiedDate":"2022-04-08"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"    public void resetPersons() {","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"        this.persons.clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"    //// interview-level operations","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if an interview with the same identity as {@code interview} exists in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"        return interviews.contains(interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"     * Adds an interview to the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"     * The interview must not already exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"    public void addInterview(Interview i) {","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"        interviews.add(i);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the given interview {@code target} in the list with {@code editedInterview}.","lastModifiedDate":"2022-03-23"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"     * The interview identity of {@code editedInterview} must not be the same as another","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"     * existing interview in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(editedInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"        interviews.setInterview(target, editedInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"    public void removeInterview(Interview key) {","lastModifiedDate":"2022-03-23"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"        interviews.remove(key);","lastModifiedDate":"2022-03-23"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"     * Resets the existing interview list.","lastModifiedDate":"2022-03-27"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"    public void resetInterviews() {","lastModifiedDate":"2022-03-27"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"        this.interviews.clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"imrajsinghsandhu"},"content":"    //// task-level operations","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"brigittesantoso"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"brigittesantoso"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"brigittesantoso"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"brigittesantoso"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"brigittesantoso"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"brigittesantoso"},"content":"        tasks.add(t);","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"brigittesantoso"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":198,"author":{"gitId":"brigittesantoso"},"content":"     * The task identity of {@code editedTask} must not be the same as another","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"brigittesantoso"},"content":"     * existing task in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"brigittesantoso"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"brigittesantoso"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"imrajsinghsandhu"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"brigittesantoso"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"imrajsinghsandhu"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":214,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"brigittesantoso"},"content":"     * Resets the existing task list.","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"brigittesantoso"},"content":"    public void resetTasks() {","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"brigittesantoso"},"content":"        this.tasks.clear();","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"brigittesantoso"},"content":"        return persons.asUnmodifiableObservableList().size() + \" applicants\";","lastModifiedDate":"2022-04-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":237,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":238,"author":{"gitId":"brigittesantoso"},"content":"    public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"brigittesantoso"},"content":"        return interviews.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"brigittesantoso"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"brigittesantoso"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":258,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brigittesantoso":130,"imrajsinghsandhu":20,"-":109}},{"path":"src/main/java/seedu/address/model/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":" * Represents an interview\u0027s or task\u0027s date in the interview or task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"public class Date {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"            \"Date should be in the format YYYY-MM-dd like 2021-06-25.\"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            + \"\\nDate has to be valid. Example: 2021-02-30 is an invalid date as there is no 30th Feb.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    public final String value;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    public Date(String date) {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        value \u003d date;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        return value;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":61}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    Predicate\u003cInterview\u003e PREDICATE_SHOW_ALL_INTERVIEWS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if an applicant with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"     * The applicant must exist in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"     * Adds the given applicant.","lastModifiedDate":"2022-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the given applicant {@code target} with {@code editedPerson}.","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"     * The applicant identity of {@code editedPerson} must not be the same as","lastModifiedDate":"2022-04-08"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"     * another existing applicant in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces applicant list data.","lastModifiedDate":"2022-04-08"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"    void resetPersons();","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"    /** Returns an unmodifiable view of the filtered applicant list */","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"     * Updates the filter of the filtered applicant list to filter by the given {@code predicate}.","lastModifiedDate":"2022-04-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if an interview with the same identity as {@code interview} exists in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"    boolean hasInterview(Interview interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"     * Deletes the given interview.","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"     * The interview must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"    void deleteInterview(Interview target);","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"     * Adds the given interview.","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"     * {@code interview} must not already exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"    void addInterview(Interview interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the given interview {@code target} with {@code editedInterview}.","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"brigittesantoso"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"     * The interview identity of {@code editedInterview} must not be the same as another","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"     * existing interview in the address book.","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"    void setInterview(Interview target, Interview editedInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces interview list data.","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"    void resetInterviews();","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"    /** Returns an unmodifiable view of the filtered interview list */","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"     * Updates the filter of the filtered interview list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"    void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"     * Adds the given task.","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":151,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":158,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces task list data.","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"    void resetTasks();","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"brigittesantoso":85,"imrajsinghsandhu":12,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    private final FilteredList\u003cInterview\u003e filteredInterviews;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        filteredInterviews \u003d new FilteredList\u003c\u003e(this.addressBook.getInterviewList());","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"    public void resetPersons() {","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"        this.addressBook.resetPersons();","lastModifiedDate":"2022-03-27"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"        return addressBook.hasInterview(interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"    public void deleteInterview(Interview target) {","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"        addressBook.removeInterview(target);","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"        addressBook.addInterview(interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"        updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"        addressBook.setInterview(target, editedInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"    public void resetInterviews() {","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"        this.addressBook.resetInterviews();","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"brigittesantoso"},"content":"    public boolean hasTask(Task person) {","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"brigittesantoso"},"content":"        return addressBook.hasTask(person);","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"brigittesantoso"},"content":"    public void resetTasks() {","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"brigittesantoso"},"content":"        this.addressBook.resetTasks();","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"brigittesantoso"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":202,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":203,"author":{"gitId":"brigittesantoso"},"content":"     * Returns an unmodifiable view of the list of {@code Interview} backed by the internal list of","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"brigittesantoso"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":206,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"brigittesantoso"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"brigittesantoso"},"content":"        return filteredInterviews;","lastModifiedDate":"2022-03-23"},{"lineNumber":209,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":210,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":211,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":212,"author":{"gitId":"brigittesantoso"},"content":"    public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2022-03-23"},{"lineNumber":213,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":214,"author":{"gitId":"brigittesantoso"},"content":"        filteredInterviews.setPredicate(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":215,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"brigittesantoso"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-04-08"},{"lineNumber":219,"author":{"gitId":"brigittesantoso"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"brigittesantoso"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"brigittesantoso"},"content":"        return filteredTasks;","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"brigittesantoso"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"brigittesantoso"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brigittesantoso":100,"imrajsinghsandhu":3,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    ObservableList\u003cInterview\u003e getInterviewList();","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brigittesantoso":2,"imrajsinghsandhu":3,"-":13}},{"path":"src/main/java/seedu/address/model/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":" * Represents an interview\u0027s or task\u0027s time in the interview or task list.","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"public class Time {","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            \"Time should be in the format HH:MM like 09:41\"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"                    + \"\\n Time has to be valid (00:00-23:59). Example: 24:01 is an invalid time.\";","lastModifiedDate":"2022-04-02"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    public final String value;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     * @param time A valid time.","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    public Time(String time) {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        value \u003d time;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"            LocalTime.parse(test, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"            if (test.equals(\"24:00\")) {","lastModifiedDate":"2022-04-02"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"                return false;","lastModifiedDate":"2022-04-02"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        return value;","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 value.equals(((Time) other).value)); // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":65}},{"path":"src/main/java/seedu/address/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":" * Represents a Interview in the interview list.","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"public class Interview {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    // Identity fields","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    private final Person person;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    // Data fields","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    private final Date date;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    private final Time time;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    public Interview(Person person, Date date, Time time) {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(person, date, time);","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"    public Person getPerson() {","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        return person;","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    public Date getDate() {","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        return date;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    public Time getTime() {","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        return time;","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if both interviews have the same person or same date and time.","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"     * This defines a weaker notion of equality between two interviews.","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    public boolean isSameInterview(Interview otherInterview) {","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        return otherInterview !\u003d null","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 (otherInterview.getDate().equals(getDate())","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherInterview.getTime().equals(getTime()));","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if both interviews have the same identity and data fields.","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"     * This defines a stronger notion of equality between two interviews.","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"        return otherInterview.getPerson().isSamePerson(getPerson())","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherInterview.getDate().equals(getDate())","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherInterview.getTime().equals(getTime());","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        return Objects.hash(person, date, time);","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"        builder.append(getPerson())","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"                .append(getDate())","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"                .append(getTime());","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":94}},{"path":"src/main/java/seedu/address/model/interview/InterviewContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"public class InterviewContainsKeywordsPredicate implements Predicate\u003cInterview\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"    private List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"    public InterviewContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"    public boolean test(Interview interview) {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"        for (String group : keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"            boolean containsAllGroupTerms \u003d true;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"            ArgumentMultimap fields \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"                    \" \" + group, PREFIX_DATE, PREFIX_TIME, PREFIX_NAME, PREFIX_JOB);","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e dates \u003d fields.getAllValues(PREFIX_DATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e times \u003d fields.getAllValues(PREFIX_TIME);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e names \u003d fields.getAllValues(PREFIX_NAME);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e jobs \u003d fields.getAllValues(PREFIX_JOB);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"            if (!dates.isEmpty() \u0026\u0026 !dates.stream().allMatch(d -\u003e interview.getDate().toString().contains(d))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"            if (!times.isEmpty() \u0026\u0026 !times.stream().allMatch(t-\u003e interview.getTime().toString().contains(t))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"            if (!names.isEmpty() \u0026\u0026 !names.stream().allMatch(n -\u003e interview.getPerson().getName().contains(n))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"            if (!jobs.isEmpty() \u0026\u0026 !jobs.stream().allMatch(j -\u003e interview.getPerson().getJob().contains(j))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"            if (containsAllGroupTerms) {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"        return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"        if (!(other instanceof InterviewContainsKeywordsPredicate)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"            return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        InterviewContainsKeywordsPredicate e \u003d (InterviewContainsKeywordsPredicate) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"        return keywords.equals(e.keywords);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"eman-kom":74}},{"path":"src/main/java/seedu/address/model/interview/InterviewDateTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"public class InterviewDateTimeComparator implements Comparator\u003cInterview\u003e {","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"    public int compare(Interview o1, Interview o2) {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"        LocalDate o1Date \u003d LocalDate.parse(o1.getDate().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"        LocalDate o2Date \u003d LocalDate.parse(o2.getDate().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"        if (o1Date.isBefore(o2Date)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"            return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"        } else if (o1Date.isAfter(o2Date)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"            return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"            LocalTime o1Time \u003d LocalTime.parse(o1.getTime().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            LocalTime o2Time \u003d LocalTime.parse(o2.getTime().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"            if (o1Time.isBefore(o2Time)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"                return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"                return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":27}},{"path":"src/main/java/seedu/address/model/interview/UniqueInterviewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.exceptions.DuplicateInterviewException;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":" * A list of interviews that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":" * A interview is considered unique by comparing using {@code Interview#isSameInterview(Interview)}.","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":" * As such, adding and updating of Interviews uses Interview#isSameInterview(Interview)","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":" * for equality so as to ensure that the interview being added or updated is unique in terms of","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":" * identity in the UniqueInterviewList. However, the removal of a interview uses Interview#equals(Object)","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":" * so as to ensure that the interview with exactly the same fields will be removed.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":" *","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":" *","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":" * @see Interview#isSameInterview(Interview)","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"public class UniqueInterviewList implements Iterable\u003cInterview\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    private final ObservableList\u003cInterview\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"    private final ObservableList\u003cInterview\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if the list contains an equivalent interview as the given argument.","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    public boolean contains(Interview toCheck) {","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"     * Adds an interview to the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"     * The interview must not already exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    public void add(Interview toAdd) {","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        sortInterviews();","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the interview {@code target} in the list with {@code editedInterview}.","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"     * The interview identity of {@code editedInterview} must not be the same as another existing interview in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        if (!target.isSameInterview(editedInterview) \u0026\u0026 contains(editedInterview)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"        internalList.set(index, editedInterview);","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        sortInterviews();","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"     * Removes the equivalent interview from the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"     * The interview must exist in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"    public void remove(Interview toRemove) {","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        sortInterviews();","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"    public void sortInterviews() {","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"        internalList.sort(new InterviewDateTimeComparator());","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"    public void clear() {","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"        internalList.clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the contents of this list with {@code interviews}.","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"     * {@code interviews} must not contain duplicate interviews.","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(interviews);","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"        if (!interviewsAreUnique(interviews)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"        internalList.setAll(interviews);","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"        sortInterviews();","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"    public ObservableList\u003cInterview\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"    public Iterator\u003cInterview\u003e iterator() {","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof seedu.address.model.interview.UniqueInterviewList // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 internalList.equals(((seedu.address.model.interview.UniqueInterviewList) other)","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"                .internalList));","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if {@code interviews} contains only unique interviews.","lastModifiedDate":"2022-03-23"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"    private boolean interviewsAreUnique(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"                if (interviews.get(i).isSameInterview(interviews.get(j))) {","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"brigittesantoso"},"content":"                    return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"brigittesantoso"},"content":"                }","lastModifiedDate":"2022-03-23"},{"lineNumber":140,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":142,"author":{"gitId":"brigittesantoso"},"content":"        return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":145}},{"path":"src/main/java/seedu/address/model/interview/exceptions/DuplicateInterviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":" * Signals that the operation will result in duplicate Interviews","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":" * (Interviews are considered duplicates if they have the same identity).","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"public class DuplicateInterviewException extends RuntimeException {","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"    public DuplicateInterviewException() {","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"        super(\"Operation would result in duplicate interviews\");","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":11}},{"path":"src/main/java/seedu/address/model/interview/exceptions/InterviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":" * Signals that the operation is unable to find the specified interview.","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"public class InterviewNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":7}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":" * Represents an applicant\u0027s address in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"        return value.toLowerCase().contains(s.toLowerCase().strip());","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":2,"eman-kom":5,"-":55}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":" * Represents an applicant\u0027s email in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"        return value.toLowerCase().contains(s.toLowerCase().strip());","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":1,"eman-kom":4,"-":70}},{"path":"src/main/java/seedu/address/model/person/Job.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":" * Represents the job applied by an applicant in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJob(String)}","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"public class Job {","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Job should only contain alphanumeric \"","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"            + \"characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    /*","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * The first character of the job must not be a whitespace,","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    public final String jobTitle;","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code Job}.","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"     * @param jobTitle A valid job.","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"    public Job(String jobTitle) {","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"        checkArgument(isValidJob(jobTitle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a given string is a valid job.","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    public static boolean isValidJob(String test) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    public String getJob() {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        return this.jobTitle;","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"        return jobTitle.toLowerCase().contains(s.toLowerCase().strip());","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        return jobTitle;","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof Job // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 jobTitle.equals(((Job) other).jobTitle)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        return jobTitle.hashCode();","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"brigittesantoso":66,"eman-kom":2}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":" * Represents an applicant\u0027s name in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain alphanumeric \"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"                                                       + \"characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"        return fullName.toLowerCase().contains(s.toLowerCase());","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        } else if (other instanceof Name) {","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"            String currentName \u003d fullName.toLowerCase();","lastModifiedDate":"2022-04-02"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"            String otherName \u003d ((Name) other).fullName.toLowerCase();","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"            if (currentName.contains(\" \") \u0026\u0026 otherName.contains(\" \")) {","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"                return currentName.replaceAll(\"\\\\s\", \"\")","lastModifiedDate":"2022-04-02"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"                        .equals(otherName.replaceAll(\"\\\\s\", \"\"));","lastModifiedDate":"2022-04-02"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"            } else {","lastModifiedDate":"2022-04-02"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"                return currentName.equals(otherName);","lastModifiedDate":"2022-04-02"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        return false;","lastModifiedDate":"2022-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":15,"imrajsinghsandhu":2,"eman-kom":4,"-":52}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":" * Represents an applicant in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    private final Job job;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    private final Stage stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Job job, Stage stage) {","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(name, phone, email, address, job, stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        this.job \u003d job;","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"    public Job getJob() {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        return job;","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    public Stage getStage() {","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        return stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if both applicants have the same name.","lastModifiedDate":"2022-04-08"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 (otherPerson.getName().equals(getName()));","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherPerson.getJob().equals(getJob())","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherPerson.getStage().equals(getStage());","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"        return Objects.hash(name, phone, email, address, job, stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"                .append(getAddress())","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"                .append(\"; Job: \")","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"                .append(getJob())","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"                .append(\"; Stage: \")","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"                .append(getStage());","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":25,"-":94}},{"path":"src/main/java/seedu/address/model/person/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"    public PersonContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"        for (String group : keywords) {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"            boolean containsAllGroupTerms \u003d true;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"            ArgumentMultimap fields \u003d ArgumentTokenizer.tokenize(\" \" + group, PREFIX_NAME,","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"                    PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_JOB, PREFIX_STAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e names \u003d fields.getAllValues(PREFIX_NAME);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e phone \u003d fields.getAllValues(PREFIX_PHONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e emails \u003d fields.getAllValues(PREFIX_EMAIL);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e addresses \u003d fields.getAllValues(PREFIX_ADDRESS);","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e jobs \u003d fields.getAllValues(PREFIX_JOB);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e stages \u003d fields.getAllValues(PREFIX_STAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"            if (!names.isEmpty() \u0026\u0026 !names.stream().allMatch(n -\u003e person.getName().contains(n))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"            if (!phone.isEmpty() \u0026\u0026 !phone.stream().allMatch(p -\u003e person.getPhone().contains(p))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"            if (!emails.isEmpty() \u0026\u0026 !emails.stream().allMatch(e -\u003e person.getEmail().contains(e))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"            if (!addresses.isEmpty() \u0026\u0026 !addresses.stream().allMatch(a -\u003e person.getAddress().contains(a))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"            if (!jobs.isEmpty() \u0026\u0026 !jobs.stream().allMatch(j -\u003e person.getJob().contains(j))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"            if (!stages.isEmpty() \u0026\u0026 !stages.stream().allMatch(s -\u003e person.getStage().contains(s))) {","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"            if (containsAllGroupTerms) {","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"                return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"        return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"            return true;","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"        if (!(other instanceof PersonContainsKeywordsPredicate)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":"            return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"eman-kom"},"content":"        // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate e \u003d (PersonContainsKeywordsPredicate) other;","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"eman-kom"},"content":"        return keywords.equals(e.keywords);","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"eman-kom":85}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":" * Represents a applicant\u0027s phone number in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"        return value.toLowerCase().contains(s.toLowerCase());","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":1,"eman-kom":4,"-":52}},{"path":"src/main/java/seedu/address/model/person/Stage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":" * Represents a applicant\u0027s job application stage in the address book.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStage(String)}","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"public class Stage {","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"            \"Stage should be only INPROGRESS or ACCEPTED or REJECTED (case-sensitive)\";","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALIDATION_REGEX \u003d \"INPROGRESS|ACCEPTED|REJECTED\";","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    public final String value;","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code Stage}.","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"     * @param stage A valid stage.","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"    public Stage(String stage) {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        checkArgument(isValidStage(stage), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"        value \u003d stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a given string is a valid stage.","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    public static boolean isValidStage(String test) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"        return value.toLowerCase().contains(s.toLowerCase());","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        return value;","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof Stage // instanceof handles nulls","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 value.equals(((Stage) other).value)); // state check","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"brigittesantoso":54,"eman-kom":4}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":" * A list of applicants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":" * An applicant is considered unique by comparing using {@code Person#isSamePerson(Person)}.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":" * As such, adding and updating of applicants uses Person#isSamePerson(Person) for equality","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":" * so as to ensure that the applicant being added or updated is unique in terms of identity","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":" * in the UniquePersonList. However, the removal of an applicant uses Person#equals(Object) so","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":" * as to ensure that the applicant with exactly the same fields will be removed.","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if the list contains an equivalent applicant as the given argument.","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"     * Adds a applicant to the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"     * The applicant must not already exist in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the applicant {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"     * The applicant identity of {@code editedPerson} must not be the same as another existing applicant in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"     * Removes the equivalent applicant from the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"     * The applicant must exist in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"    public void clear() {","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"        internalList.clear();","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"     * {@code persons} must not contain duplicate applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if {@code persons} contains only unique applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"brigittesantoso":19,"-":123}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":" * Signals that the operation will result in duplicate applicants (Applicants are considered","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":" * duplicates if they have the same identity).","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"        super(\"Operation would result in duplicate applicants\");","lastModifiedDate":"2022-04-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"brigittesantoso":3,"-":8}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":" * Signals that the operation is unable to find the specified applicant.","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"brigittesantoso":1,"-":5}},{"path":"src/main/java/seedu/address/model/tasks/Header.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":" * Represents a task\u0027s header in the taskList.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHeader(String)}","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"public class Header {","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Header should only contain alphanumeric \"","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"            + \"characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    /*","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    public final String fullHeader;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code Header}.","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     * @param header A valid header.","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    public Header(String header) {","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(header);","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        checkArgument(isValidHeader(header), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        fullHeader \u003d header;","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a given string is a valid header.","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    public static boolean isValidHeader(String test) {","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        return fullHeader.toLowerCase().contains(s.toLowerCase());","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        return fullHeader;","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-01"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-04-01"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-04-02"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-04-02"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        } else if (other instanceof Header) {","lastModifiedDate":"2022-04-02"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"            String currentHeader \u003d fullHeader.toLowerCase();","lastModifiedDate":"2022-04-02"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"            String otherHeader \u003d ((Header) other).fullHeader.toLowerCase();","lastModifiedDate":"2022-04-02"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"            if (currentHeader.contains(\" \") \u0026\u0026 otherHeader.contains(\" \")) {","lastModifiedDate":"2022-04-02"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"                return currentHeader.replaceAll(\"\\\\s\", \"\")","lastModifiedDate":"2022-04-02"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"                        .equals(otherHeader.replaceAll(\"\\\\s\", \"\"));","lastModifiedDate":"2022-04-02"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"            } else {","lastModifiedDate":"2022-04-02"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"                return currentHeader.equals(otherHeader);","lastModifiedDate":"2022-04-02"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-04-02"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-02"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        return false;","lastModifiedDate":"2022-04-02"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"        return fullHeader.hashCode();","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-04-01"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"}],"authorContributionMap":{"brigittesantoso":72}},{"path":"src/main/java/seedu/address/model/tasks/Information.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":" * Represents a task\u0027s information in the taskList.","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInformation(String)}","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"public class Information {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Information should only contain alphanumeric \"","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"            + \"characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    /*","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    public final String fullInformation;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code Information}.","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     * @param information A valid information.","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    public Information(String information) {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(information);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        checkArgument(isValidInformation(information), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        fullInformation \u003d information;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if a given string is a valid information.","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    public static boolean isValidInformation(String test) {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        return fullInformation.toLowerCase().contains(s.toLowerCase());","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        return fullInformation;","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof Information // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"                        \u0026\u0026 fullInformation.equals(((Information) other).fullInformation)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"        return fullInformation.hashCode();","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":61}},{"path":"src/main/java/seedu/address/model/tasks/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"public class Task {","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"    private final Header header;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"    private final Date date;","lastModifiedDate":"2022-04-01"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"    private final Time time;","lastModifiedDate":"2022-04-01"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    private final Information information;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    public Task(Header header, Date date, Time time, Information information) {","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(header, date, time, information);","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"        this.header \u003d header;","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"        this.information \u003d information;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"    public Header getHeader() {","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        return header;","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"    public Information getInformation() {","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        return information;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    public Date getDate() {","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"        return date;","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    public Time getTime() {","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"        return time;","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if both tasks have the same header, date and time.","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 (otherTask.getHeader().equals(getHeader()))","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 (otherTask.getDate().equals(getDate())","lastModifiedDate":"2022-04-01"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherTask.getTime().equals(getTime()));","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-04-08"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"        return (otherTask.getHeader().equals(getHeader()))","lastModifiedDate":"2022-04-02"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 (otherTask.getDate().equals(getDate())","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherTask.getTime().equals(getTime()))","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 otherTask.getInformation().equals(getInformation());","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"    public String toString() {","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"        builder.append(getHeader())","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"                .append(getDate())","lastModifiedDate":"2022-04-01"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2022-04-01"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"                .append(getTime())","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"                .append(\"; Information: \")","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"                .append(getInformation());","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"brigittesantoso":71,"imrajsinghsandhu":19}},{"path":"src/main/java/seedu/address/model/tasks/TaskContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEADER;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFORMATION;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"public class TaskContainsKeywordPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"    public TaskContainsKeywordPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"        for (String group : keywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"            boolean containsAllGroupTerms \u003d true;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"            ArgumentMultimap fields \u003d ArgumentTokenizer.tokenize(\" \" + group,","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"                    PREFIX_HEADER, PREFIX_INFORMATION, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            List\u003cString\u003e headers \u003d fields.getAllValues(PREFIX_HEADER);","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"            List\u003cString\u003e infos \u003d fields.getAllValues(PREFIX_INFORMATION);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            List\u003cString\u003e dates \u003d fields.getAllValues(PREFIX_DATE);","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            List\u003cString\u003e times \u003d fields.getAllValues(PREFIX_TIME);","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"            if (!headers.isEmpty() \u0026\u0026 !headers.stream().allMatch(h -\u003e task.getHeader().contains(h))) {","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"            if (!infos.isEmpty() \u0026\u0026 !infos.stream().allMatch(t -\u003e task.getInformation().contains(t))) {","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"            if (!dates.isEmpty() \u0026\u0026 !dates.stream().allMatch(d -\u003e task.getDate().toString().contains(d))) {","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"            if (!times.isEmpty() \u0026\u0026 !times.stream().allMatch(t-\u003e task.getTime().toString().contains(t))) {","lastModifiedDate":"2022-04-01"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"                containsAllGroupTerms \u003d false;","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"            if (containsAllGroupTerms) {","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"                return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"        return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"        if (!(other instanceof TaskContainsKeywordPredicate)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"        TaskContainsKeywordPredicate e \u003d (TaskContainsKeywordPredicate) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        return keywords.equals(e.keywords);","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":20,"eman-kom":53}},{"path":"src/main/java/seedu/address/model/tasks/TaskDateTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-04-01"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"public class TaskDateTimeComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"    public int compare(Task o1, Task o2) {","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"        LocalDate o1Date \u003d LocalDate.parse(o1.getDate().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"        LocalDate o2Date \u003d LocalDate.parse(o2.getDate().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"        if (o1Date.isBefore(o2Date)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"            return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"        } else if (o1Date.isAfter(o2Date)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"            return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"            LocalTime o1Time \u003d LocalTime.parse(o1.getTime().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            LocalTime o2Time \u003d LocalTime.parse(o2.getTime().value);","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"            if (o1Time.isBefore(o2Time)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"                return -1;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"            } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"                return 1;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":27}},{"path":"src/main/java/seedu/address/model/tasks/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":" * As such, adding and updating of Tasks uses Task#isSameTask(Task)","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":" * for equality so as to ensure that the task being added or updated is unique in terms of","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":" * identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object)","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":" * so as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":" *","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":" *","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws Exception","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        sortTasks();","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"        sortTasks();","lastModifiedDate":"2022-04-01"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @throws Exception","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"imrajsinghsandhu"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"imrajsinghsandhu"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"        sortTasks();","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"    public void sortTasks() {","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"        internalList.sort(new TaskDateTimeComparator());","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"    public void clear() {","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"        internalList.clear();","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"        sortTasks();","lastModifiedDate":"2022-04-01"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"        sortTasks();","lastModifiedDate":"2022-04-02"},{"lineNumber":113,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"imrajsinghsandhu"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"imrajsinghsandhu"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"imrajsinghsandhu"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"imrajsinghsandhu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"imrajsinghsandhu"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"brigittesantoso"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"                    return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"                }","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"        return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"brigittesantoso":103,"imrajsinghsandhu":51}},{"path":"src/main/java/seedu/address/model/tasks/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.tasks.exceptions;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":" * Signals that the operation will result in duplicate tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":" * identity).","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":11}},{"path":"src/main/java/seedu/address/model/tasks/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.model.tasks.exceptions;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"brigittesantoso":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.tasks.Header;","lastModifiedDate":"2022-04-01"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.tasks.Information;","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Alex Lee\"), new Phone(\"87438807\"), new Email(\"alexlee@gmail.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"                    new Address(\"30 Defu Lane 10 #04-104\"), new Job(\"Software Engineer\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"                    new Stage(\"INPROGRESS\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Alex Tan\"), new Phone(\"94825832\"), new Email(\"alext@gmail.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"                    new Address(\"1 Finlayson Green #13-00\"), new Job(\"Data Scientist\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"                    new Stage(\"ACCEPTED\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Alex Chan\"), new Phone(\"82619180\"), new Email(\"alex1996@yahoo.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"                    new Address(\"6 Ang Mo Kio Industrial Park 2\"), new Job(\"Data Scientist\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"                    new Stage(\"REJECTED\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Alex Lee Kai Jie\"), new Phone(\"92462946\"), new Email(\"alexlkj@gmail.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"                    new Address(\"76 Lorong 19 Geylang #03-01\"), new Job(\"Data Scientist\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"                    new Stage(\"INPROGRESS\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Steven Tan Kai Ming\"), new Phone(\"84303712\"), new Email(\"stevent@yahoo.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"                    new Address(\"10 Admiralty Street #01-78 North Link Building\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"                    new Job(\"Mobile Engineer\"), new Stage(\"INPROGRESS\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Lee Kai Jie\"), new Phone(\"92821318\"), new Email(\"lkj1994@gmail.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"                    new Address(\"252 Jurong East Street 24 #01-139\"), new Job(\"Software Engineer\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"                    new Stage(\"ACCEPTED\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Janet Tan\"), new Phone(\"94303312\"), new Email(\"janettan@yahoo.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"                    new Address(\"10 Admiralty Street #01-78 North Link Building\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"                    new Job(\"Software Developer\"), new Stage(\"REJECTED\")),","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Lew Jia Xin\"), new Phone(\"92573826\"), new Email(\"lewjx@hotmail.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"                    new Address(\"261 Yishun St 22 #01-137\"), new Job(\"Software Developer\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"                    new Stage(\"ACCEPTED\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Tan Jia Ling\"), new Phone(\"93375454\"), new Email(\"tjialing@outlook.com\"),","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"                    new Address(\"12 New Industrial Road #05-05 Morningstar Centre\"),","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"                    new Job(\"Data Analyst\"), new Stage(\"ACCEPTED\")),","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"            new Person(new Name(\"Zhou Jia Ling\"), new Phone(\"92462146\"), new Email(\"jialingz@hotmail.com\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"                    new Address(\"80 Marine Parade Rd #21-08\"), new Job(\"Software Engineer\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"                    new Stage(\"INPROGRESS\"))","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    public static Interview[] getSampleInterview(Person[] persons) {","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"        return new Interview[] {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"            new Interview(persons[0], new Date(\"2022-01-20\"), new Time(\"17:01\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"            new Interview(persons[1], new Date(\"2022-01-22\"), new Time(\"16:02\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"            new Interview(persons[2], new Date(\"2022-01-24\"), new Time(\"15:03\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"            new Interview(persons[3], new Date(\"2022-01-28\"), new Time(\"14:04\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"            new Interview(persons[4], new Date(\"2022-01-17\"), new Time(\"13:05\"))","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"        return new Task[] {","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"            new Task(new Header(\"Add interview slots\"), new Date(\"2022-01-09\"),","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"                    new Time(\"09:10\"), new Information(\"Add all interviews happening in the following week\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"            new Task(new Header(\"Update applicants statuses\"), new Date(\"2022-01-19\"),","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"                    new Time(\"19:10\"), new Information(\"Update all applicants statuses\")),","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"            new Task(new Header(\"Write report\"), new Date(\"2022-02-01\"),","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"                    new Time(\"18:20\"), new Information(\"Finish up writing annual report\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"        };","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":82,"author":{"gitId":"eman-kom"},"content":"        Person[] samplePersons \u003d getSamplePersons();","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"eman-kom"},"content":"        Interview[] sampleInterviews \u003d getSampleInterview(samplePersons);","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"eman-kom"},"content":"        Task[] sampleTasks \u003d getSampleTasks();","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"eman-kom"},"content":"        for (Person samplePerson : samplePersons) {","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"eman-kom"},"content":"        for (Interview sampleInterview : sampleInterviews) {","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"eman-kom"},"content":"            sampleAb.addInterview(sampleInterview);","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"eman-kom"},"content":"        for (Task sampleTask : sampleTasks) {","lastModifiedDate":"2022-04-01"},{"lineNumber":95,"author":{"gitId":"eman-kom"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2022-04-01"},{"lineNumber":96,"author":{"gitId":"eman-kom"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":97,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"brigittesantoso":15,"eman-kom":55,"-":31}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInterview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":" * Jackson-friendly version of {@link Interview}.","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"public class JsonAdaptedInterview {","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Interview\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"    private final JsonAdaptedPerson person;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    private final String date;","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    private final String time;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code JsonAdaptedInterview} with the given interview details.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    public JsonAdaptedInterview(@JsonProperty(\"person\") JsonAdaptedPerson person,","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"                                @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time) {","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"     * Converts a given {@code Interview} into this class for Jackson use.","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    public JsonAdaptedInterview(Interview source) {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        person \u003d new JsonAdaptedPerson(source.getPerson());","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        time \u003d source.getTime().value;","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"     * Converts this Jackson-friendly adapted interview object into the model\u0027s {@code Interview} object.","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted interview.","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    public Interview toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"INDEX\"));","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        final Person modelPerson \u003d person.toModelType();","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"        final Time modelTime \u003d new Time(time);","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        return new Interview(modelPerson, modelDate, modelTime);","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":72}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    private final String job;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    private final String stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given applicant details.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"            @JsonProperty(\"job\") String job, @JsonProperty(\"stage\") String stage) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        this.job \u003d job;","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        job \u003d source.getJob().jobTitle;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        stage \u003d source.getStage().value;","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted applicant.","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"        if (job \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Job.class.getSimpleName()));","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"        if (!Job.isValidJob(job)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"        final Job modelJob \u003d new Job(job);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"        if (stage \u003d\u003d null) {","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Stage.class.getSimpleName()));","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"        if (!Stage.isValidStage(stage)) {","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Stage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"        final Stage modelStage \u003d new Stage(stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelJob, modelStage);","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"brigittesantoso":35,"-":83}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Date;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Header;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.tasks.Information;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":" * JSON-friendly version of {@link Task}","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    private final String header;","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    private final String date;","lastModifiedDate":"2022-04-01"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    private final String time;","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"    private final String information;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"    public JsonAdaptedTask(@JsonProperty(\"header\") String header, @JsonProperty(\"date\") String date,","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"                           @JsonProperty(\"time\") String time, @JsonProperty(\"information\") String information) {","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        this.header \u003d header;","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        this.information \u003d information;","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        header \u003d source.getHeader().fullHeader;","lastModifiedDate":"2022-04-01"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2022-04-01"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        time \u003d source.getTime().value;","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        information \u003d source.getInformation().fullInformation;","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-04-08"},{"lineNumber":52,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"imrajsinghsandhu"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        if (header \u003d\u003d null) {","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-04-01"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"                    Header.class.getSimpleName()));","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        if (!Header.isValidHeader(header)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        final Header modelHeader \u003d new Header(header);","lastModifiedDate":"2022-04-01"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        if (information \u003d\u003d null) {","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"imrajsinghsandhu"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"                Information.class.getSimpleName()));","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        if (!Information.isValidInformation(information)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Information.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"        final Information modelInformation \u003d new Information(information);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-04-01"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2022-04-01"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2022-04-01"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"        final Time modelTime \u003d new Time(time);","lastModifiedDate":"2022-04-01"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        return new Task(modelHeader, modelDate, modelTime, modelInformation);","lastModifiedDate":"2022-04-01"},{"lineNumber":92,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":53,"imrajsinghsandhu":40}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Applicant list contains duplicate applicant(s).\";","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"Interview list contains duplicate interview(s).\";","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    public static final String MESSAGE_NONEXISTENT_PERSON \u003d \"%s does not exist in database\";","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    private final List\u003cJsonAdaptedInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given applicants and interviews and tasks.","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"                                       @JsonProperty(\"interviews\") List\u003cJsonAdaptedInterview\u003e interviews,","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        this.interviews.addAll(interviews);","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"        interviews.addAll(source.getInterviewList().stream()","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"                .map(JsonAdaptedInterview::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"imrajsinghsandhu"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"        for (JsonAdaptedInterview jsonAdaptedInterview : interviews) {","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"            Interview interview \u003d jsonAdaptedInterview.toModelType();","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"            if (addressBook.hasInterview(interview)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"            addressBook.addInterview(interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"imrajsinghsandhu"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"imrajsinghsandhu"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"imrajsinghsandhu"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"brigittesantoso":17,"imrajsinghsandhu":19,"-":56}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"    private static final String FLAGS_HELP \u003d \"Flags:\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"            + \"\\ta/ : Address\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"            + \"\\td/ : Date (Format: yyyy-mm-dd)\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"            + \"\\te/ : Email\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"            + \"\\tg/ : Search Term (Used for grouping together search terms)\\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"            + \"\\th/ : Header (task header)\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"            + \"\\ti/ : Information (task information)\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"            + \"\\tj/ : Job Position\\n\"","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"            + \"\\tn/ : Name\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"            + \"\\tp/ : Phone Number\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"            + \"\\ts/ : Stage (Current progress of the job application process)\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"            + \"\\tt/ : Time (Format: HH:MM)\";","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide for more information: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"            + USERGUIDE_URL","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"            + \"\\n\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"            + FLAGS_HELP;","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eman-kom":19,"-":100}},{"path":"src/main/java/seedu/address/ui/InterviewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":" * An UI component that displays information of a {@code Interview}.","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"public class InterviewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    private static final String FXML \u003d \"InterviewListCard.fxml\";","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"    public final Interview interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"    private Label name;","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    private Label id;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    private Label date;","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    private Label time;","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"    private Label job;","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    private Label stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"    private Label phone;","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"    private Label email;","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"     * Creates a {@code InterviewCode} with the given {@code Interview} and index to display.","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    public InterviewCard(Interview interview, int displayedIndex) {","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        super(FXML);","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        Person person \u003d interview.getPerson();","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        String formattedDate \u003d formatDate(interview);","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        date.setText(formattedDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"        String formattedTime \u003d formatTime(interview);","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        time.setText(\"@ \" + formattedTime);","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        job.setText(person.getJob().jobTitle);","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        stage.setText(person.getStage().value);","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        editStageStyle(stage, person);","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"     * Format date to display in the correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"     * @param interview interview","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"     * @return date in correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"    public String formatDate(Interview interview) {","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"        String[] dateSplit \u003d interview.getDate().value.split(\"-\");","lastModifiedDate":"2022-04-02"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(interview.getDate().value);","lastModifiedDate":"2022-04-02"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        String formattedMonth \u003d parsedDate.format(DateTimeFormatter.ofPattern(\"MMM\"));","lastModifiedDate":"2022-04-02"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"        String formattedDate \u003d dateSplit[2] + \" \" + formattedMonth + \" \" + dateSplit[0];","lastModifiedDate":"2022-04-02"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"        return formattedDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"     * Format time to display in correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"     * @param interview interview","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"     * @return time in correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"    public String formatTime(Interview interview) {","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        String[] timeSplit \u003d interview.getTime().value.split(\":\");","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"        LocalTime parsedTime \u003d LocalTime.parse(timeSplit[0] + timeSplit[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"        String formattedTime \u003d parsedTime.format(DateTimeFormatter.ofPattern(\"hh:mma\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"        return formattedTime;","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"     * Edit style of stage","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"     * @param label stage label","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"     * @param person applicant","lastModifiedDate":"2022-04-08"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"    public void editStageStyle(Label label, Person person) {","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"        if (person.getStage().value.equals(\"INPROGRESS\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"            stage.setStyle(\"-fx-text-fill: white; -fx-background-color: #d2691e; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"        } else if (person.getStage().value.equals(\"ACCEPTED\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"            stage.setStyle(\"-fx-text-fill: white; -fx-background-color: #228b22; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2022-03-27"},{"lineNumber":109,"author":{"gitId":"brigittesantoso"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"brigittesantoso"},"content":"        } else if (person.getStage().value.equals(\"REJECTED\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"            stage.setStyle(\"-fx-text-fill: white; -fx-background-color: #b22222; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"        if (!(other instanceof InterviewCard)) {","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"        // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"        InterviewCard card \u003d (InterviewCard) other;","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 interview.equals(card.interview);","lastModifiedDate":"2022-03-23"},{"lineNumber":131,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":132}},{"path":"src/main/java/seedu/address/ui/InterviewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":" * Panel containing the list of interviews.","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"public class InterviewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"    private static final String FXML \u003d \"InterviewListPanel.fxml\";","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"    private ListView\u003cInterview\u003e interviewListView;","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"     * Creates a {@code InterviewListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    public InterviewListPanel(ObservableList\u003cInterview\u003e interviewList) {","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        super(FXML);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"        interviewListView.setItems(interviewList);","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"        interviewListView.setCellFactory(listView -\u003e new InterviewListViewCell());","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code interview} using a {@code InterviewCard}.","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"    class InterviewListViewCell extends ListCell\u003cInterview\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"        protected void updateItem(Interview interview, boolean empty) {","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"            super.updateItem(interview, empty);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"            if (empty || interview \u003d\u003d null) {","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"                setText(null);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"            } else {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"                setGraphic(new InterviewCard(interview, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"            }","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":45}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.INTERVIEW;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.Type.PERSON;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import static seedu.address.logic.parser.Type.TASK;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.control.SingleSelectionModel;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.parser.Type;","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"    private InterviewListPanel interviewListPanel;","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"    private StackPane interviewListPanelPlaceholder;","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"imrajsinghsandhu"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"imrajsinghsandhu"},"content":"    private StackPane taskListPanelPlaceHolder;","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"    private TabPane tabs;","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"brigittesantoso"},"content":"        interviewListPanel \u003d new InterviewListPanel(logic.getFilteredInterviewList());","lastModifiedDate":"2022-03-23"},{"lineNumber":136,"author":{"gitId":"brigittesantoso"},"content":"        interviewListPanelPlaceholder.getChildren().add(interviewListPanel.getRoot());","lastModifiedDate":"2022-03-23"},{"lineNumber":137,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":138,"author":{"gitId":"imrajsinghsandhu"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"imrajsinghsandhu"},"content":"        taskListPanelPlaceHolder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"brigittesantoso"},"content":"            changeTab(commandResult.getType());","lastModifiedDate":"2022-04-06"},{"lineNumber":215,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":224,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":225,"author":{"gitId":"brigittesantoso"},"content":"     * Toggle between different tabs based on type of command given","lastModifiedDate":"2022-04-07"},{"lineNumber":226,"author":{"gitId":"brigittesantoso"},"content":"     * @param type type of command","lastModifiedDate":"2022-04-07"},{"lineNumber":227,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":228,"author":{"gitId":"brigittesantoso"},"content":"    public void changeTab(Type type) {","lastModifiedDate":"2022-04-06"},{"lineNumber":229,"author":{"gitId":"brigittesantoso"},"content":"        SingleSelectionModel\u003cTab\u003e selectionModel \u003d tabs.getSelectionModel();","lastModifiedDate":"2022-04-06"},{"lineNumber":230,"author":{"gitId":"brigittesantoso"},"content":"        if (type \u003d\u003d PERSON) {","lastModifiedDate":"2022-04-06"},{"lineNumber":231,"author":{"gitId":"brigittesantoso"},"content":"            selectionModel.select(0);","lastModifiedDate":"2022-04-06"},{"lineNumber":232,"author":{"gitId":"brigittesantoso"},"content":"        } else if (type \u003d\u003d INTERVIEW) {","lastModifiedDate":"2022-04-06"},{"lineNumber":233,"author":{"gitId":"brigittesantoso"},"content":"            selectionModel.select(1);","lastModifiedDate":"2022-04-06"},{"lineNumber":234,"author":{"gitId":"brigittesantoso"},"content":"        } else if (type \u003d\u003d TASK) {","lastModifiedDate":"2022-04-06"},{"lineNumber":235,"author":{"gitId":"brigittesantoso"},"content":"            selectionModel.select(2);","lastModifiedDate":"2022-04-06"},{"lineNumber":236,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":237,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"brigittesantoso":34,"imrajsinghsandhu":8,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"    private Label job;","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    private Label stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"        job.setText(person.getJob().jobTitle);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        stage.setText(person.getStage().value);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"        editStageStyle(stage, person);","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     * Edit style of stage","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"     * @param label stage label","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"     * @param person applicant","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"    public void editStageStyle(Label label, Person person) {","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        if (person.getStage().value.equals(\"INPROGRESS\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"            stage.setStyle(\"-fx-text-fill: white; -fx-background-color: #d2691e; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2022-03-27"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"        } else if (person.getStage().value.equals(\"ACCEPTED\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"            stage.setStyle(\"-fx-text-fill: white; -fx-background-color: #228b22; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"        } else if (person.getStage().value.equals(\"REJECTED\")) {","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"            stage.setStyle(\"-fx-text-fill: white; -fx-background-color: #b22222; -fx-padding: 1 3 1 3; \"","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"                    + \"-fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11;\");","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brigittesantoso":25,"-":70}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"brigittesantoso":1,"-":44}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-04-01"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-04-01"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-01"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"    public final Task task;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"    private Label id;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"    private Label header;","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"    private Label information;","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"    private Label date;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    @FXML","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    private Label time;","lastModifiedDate":"2022-04-01"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(FXML);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"imrajsinghsandhu"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        header.setText(task.getHeader().fullHeader);","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"        information.setText(task.getInformation().fullInformation);","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        String formattedDate \u003d formatDate(task);","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        date.setText(\"Date: \" + formattedDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        String formattedTime \u003d formatTime(task);","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        time.setText(\"Time: \" + formattedTime);","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"     * Format date to display in correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"     * @param task task","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"     * @return date in correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"    public String formatDate(Task task) {","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"        String[] dateSplit \u003d task.getDate().value.split(\"-\");","lastModifiedDate":"2022-04-02"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(task.getDate().value);","lastModifiedDate":"2022-04-02"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        String formattedMonth \u003d parsedDate.format(DateTimeFormatter.ofPattern(\"MMM\"));","lastModifiedDate":"2022-04-02"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        String formattedDate \u003d dateSplit[2] + \" \" + formattedMonth + \" \" + dateSplit[0];","lastModifiedDate":"2022-04-02"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"        return formattedDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"     * Format time to display in correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"     * @param task task","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"     * @return time in correct format","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"    public String formatTime(Task task) {","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"        String[] timeSplit \u003d task.getTime().value.split(\":\");","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"brigittesantoso"},"content":"        LocalTime parsedTime \u003d LocalTime.parse(timeSplit[0] + timeSplit[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        String formattedTime \u003d parsedTime.format(DateTimeFormatter.ofPattern(\"hh:mma\"));","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        return formattedTime;","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":62,"imrajsinghsandhu":36}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-04-08"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"        super(FXML);","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"imrajsinghsandhu"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"imrajsinghsandhu"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"imrajsinghsandhu"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"imrajsinghsandhu"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"imrajsinghsandhu"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"                setText(null);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"imrajsinghsandhu"},"content":"            } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"imrajsinghsandhu"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"imrajsinghsandhu"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"imrajsinghsandhu"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"imrajsinghsandhu"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":1,"imrajsinghsandhu":44}},{"path":"src/main/resources/view/InterviewListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"time\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"job\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$job\" style\u003d\"-fx-text-fill: white; -fx-background-color: #3e7b91;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"               -fx-padding: 1 3 1 3; -fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11; \" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel text\u003d\" \" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"stage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$stage\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":42}},{"path":"src/main/resources/view/InterviewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"    \u003cListView fx:id\u003d\"interviewListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"brigittesantoso":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"         title\u003d\"HRConnect\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        \u003cStackPane minWidth\u003d\"350\" prefWidth\u003d\"350\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"              \u003cTabPane fx:id\u003d\"tabs\" minWidth\u003d\"350\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"              \u003ctabs\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"              \u003cTab fx:id\u003d\"personsTab\" text\u003d\"Applicants\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"                \u003ccontent\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                  \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"                \u003c/content\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"              \u003c/Tab\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"                \u003cTab fx:id\u003d\"interviewsTab\" text\u003d\"Interviews\"\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"                    \u003cStackPane fx:id\u003d\"interviewListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"                \u003cTab fx:id\u003d\"tasksTab\" text\u003d\"Tasks\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"imrajsinghsandhu"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"imrajsinghsandhu"},"content":"                    \u003cStackPane fx:id\u003d\"taskListPanelPlaceHolder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"imrajsinghsandhu"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"imrajsinghsandhu"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"              \u003c/tabs\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"              \u003c/TabPane\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"brigittesantoso":22,"imrajsinghsandhu":4,"-":54}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"        \u003cLabel fx:id\u003d\"job\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$job\" style\u003d\"-fx-text-fill: white; -fx-background-color: #3e7b91;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"               -fx-padding: 1 3 1 3; -fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11; \" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        \u003cLabel text\u003d\" \" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"        \u003cLabel fx:id\u003d\"stage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$stage\" /\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"brigittesantoso":6,"-":34}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"imrajsinghsandhu"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"imrajsinghsandhu"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"imrajsinghsandhu"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"imrajsinghsandhu"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"imrajsinghsandhu"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"imrajsinghsandhu"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"imrajsinghsandhu"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"imrajsinghsandhu"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"imrajsinghsandhu"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"imrajsinghsandhu"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"imrajsinghsandhu"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"imrajsinghsandhu"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"imrajsinghsandhu"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"header\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" style\u003d\"-fx-text-fill: white; -fx-background-color: #3e7b91;","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"               -fx-padding: 1 3 1 3; -fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11; \" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel text\u003d\" \" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"                \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" style\u003d\"-fx-text-fill: white; -fx-background-color: #d2691e;","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"               -fx-padding: 1 3 1 3; -fx-border-radius: 2; -fx-background-radius: 2; -fx-font-size: 11; \" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":35,"author":{"gitId":"imrajsinghsandhu"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"            \u003cLabel fx:id\u003d\"information\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$information\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":37,"author":{"gitId":"imrajsinghsandhu"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"imrajsinghsandhu"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"brigittesantoso":9,"imrajsinghsandhu":30}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"imrajsinghsandhu"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"imrajsinghsandhu"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"imrajsinghsandhu":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAGE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"imrajsinghsandhu"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"imrajsinghsandhu"},"content":"                temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        String deleteCommand \u003d \"delete [p] 9\";","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"brigittesantoso"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" [p]\";","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(listCommand, ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"imrajsinghsandhu"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookIoExceptionThrowingStub(","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"imrajsinghsandhu"},"content":"                temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"imrajsinghsandhu"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"imrajsinghsandhu"},"content":"                temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + \" [p] \" + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"                + ADDRESS_DESC_AMY + JOB_DESC_AMY + STAGE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"imrajsinghsandhu"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"imrajsinghsandhu"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"imrajsinghsandhu"},"content":"     * result message is correct.","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"imrajsinghsandhu"},"content":"     * result message is correct.","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"imrajsinghsandhu"},"content":"     * Executes the command, confirms that the exception is thrown and that the","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"imrajsinghsandhu"},"content":"     * result message is correct.","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"imrajsinghsandhu"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"imrajsinghsandhu"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"imrajsinghsandhu"},"content":"    private void assertCommandFailure(String inputCommand,","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"imrajsinghsandhu"},"content":"        Class\u003c? extends Throwable\u003e expectedException, String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"brigittesantoso":9,"imrajsinghsandhu":18,"-":143}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"brigittesantoso":5,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        AddCommand addCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        assertThrows(CommandException.class, AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        AddCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"        AddCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        AddCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"        public void addInterview(Interview interview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"brigittesantoso"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"        public boolean hasInterview(Interview interview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":146,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":147,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":148,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"brigittesantoso"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"brigittesantoso"},"content":"        public void deleteInterview(Interview target) {","lastModifiedDate":"2022-03-23"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":162,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"        public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":180,"author":{"gitId":"brigittesantoso"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":182,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":183,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":185,"author":{"gitId":"brigittesantoso"},"content":"        public void resetPersons() {","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-27"},{"lineNumber":187,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"brigittesantoso"},"content":"        public void resetInterviews() {","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":195,"author":{"gitId":"brigittesantoso"},"content":"        public void resetTasks() {","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":197,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":198,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":205,"author":{"gitId":"brigittesantoso"},"content":"        public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-23"},{"lineNumber":207,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":208,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"imrajsinghsandhu"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"imrajsinghsandhu"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"imrajsinghsandhu"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"brigittesantoso"},"content":"        public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"imrajsinghsandhu"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"brigittesantoso"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"brigittesantoso"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"brigittesantoso"},"content":"     * A Model stub that contains a single applicant.","lastModifiedDate":"2022-04-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"brigittesantoso"},"content":"     * A Model stub that always accept the applicant being added.","lastModifiedDate":"2022-04-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"brigittesantoso":76,"imrajsinghsandhu":12,"-":187}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"    public void execute_emptyPersonList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(new ClearPersonCommand(), model, ClearPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"    public void execute_nonEmptyPersonList_success() {","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"        expectedModel.resetPersons();","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(new ClearPersonCommand(), model, ClearPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"brigittesantoso":5,"-":26}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", null);","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", null)));","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", null, false, false)));","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", null)));","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", null, true, false)));","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", null, false, true)));","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", null);","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\", null).hashCode());","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\", null).hashCode());","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", null, true, false).hashCode());","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", null, false, true).hashCode());","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"brigittesantoso":11,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALID_JOB_AMY \u003d \"Software Engineer\";","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALID_JOB_BOB \u003d \"Data Scientist\";","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALID_STAGE_AMY \u003d \"INPROGRESS\";","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"    public static final String VALID_STAGE_BOB \u003d \"ACCEPTED\";","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    public static final String JOB_DESC_AMY \u003d \" \" + PREFIX_JOB + VALID_JOB_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"    public static final String JOB_DESC_BOB \u003d \" \" + PREFIX_JOB + VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"    public static final String STAGE_DESC_AMY \u003d \" \" + PREFIX_STAGE + VALID_STAGE_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"    public static final String STAGE_DESC_BOB \u003d \" \" + PREFIX_STAGE + VALID_STAGE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"    public static final String INVALID_JOB_DESC \u003d \" \" + PREFIX_JOB + \"Software Engineer\u0026\"; // \u0027\u0026\u0027 not allowed in jobs","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"    public static final String INVALID_STAGE_DESC \u003d \" \" + PREFIX_STAGE + \"PROCESSING\"; //only 3 stages allowed in stage","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_AMY).withStage(VALID_STAGE_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).withStage(VALID_STAGE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, command.getType());","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"     * - the address book, filtered applicant list and selected applicant in {@code actualModel} remain unchanged","lastModifiedDate":"2022-04-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"brigittesantoso"},"content":"     * Updates {@code model}\u0027s filtered list to show only the applicant at the given {@code targetIndex} in the","lastModifiedDate":"2022-04-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/\" + person.getName().fullName.split(\" \")[0]);","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"eman-kom"},"content":"        model.updateFilteredPersonList(new PersonContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"brigittesantoso":20,"eman-kom":5,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"brigittesantoso":16,"-":93}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"                .withPhone(VALID_PHONE_BOB).withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandFailure(editCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"        // edit applicant in filtered applicant list into a duplicate in address book","lastModifiedDate":"2022-04-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandFailure(editCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"     * Edit filtered applicant list where index is larger than size of filtered applicant list,","lastModifiedDate":"2022-04-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand editCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(standardCommand.equals(new HelpCommand()));","lastModifiedDate":"2022-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"brigittesantoso":27,"-":147}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        // different job -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"        // different stage -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStage(VALID_STAGE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"brigittesantoso":9,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, null, false, true);","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"brigittesantoso":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.interview.InterviewContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e first \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"        first.add(\"n/first\");","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e second \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"        second.add(\"n/second\");","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d new PersonContainsKeywordsPredicate(first);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"        InterviewContainsKeywordsPredicate secondPredicate \u003d new InterviewContainsKeywordsPredicate(second);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"        FindInterviewCommand findSecondCommand \u003d new FindInterviewCommand(secondPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"        FindInterviewCommand findSecondCommandCopy \u003d new FindInterviewCommand(secondPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"        assertEquals(findSecondCommand, findSecondCommandCopy);","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(1, findSecondCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(null, findSecondCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/wrong n/still_wrong\");","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/Kurz\");","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/Elle\");","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/Kunz\");","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"eman-kom"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brigittesantoso":1,"eman-kom":39,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, null, true, false);","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"brigittesantoso":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"public class ImportCommandTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"    void check_duplicate_person() {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"        personList.add(new PersonBuilder().withName(\"Alice Pauline\").build());","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"        System.out.println(personList.get(0));","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"        ImportCommand testCommand \u003d new ImportCommand(personList);","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"        assertThrows(CommandException.class, () -\u003e testCommand.execute(model));","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"eman-kom":30}},{"path":"src/test/java/seedu/address/logic/commands/ListPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPersonCommand.","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"public class ListPersonCommandTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brigittesantoso":4,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOB_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAGE_DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"                + ADDRESS_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"                + ADDRESS_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"                + ADDRESS_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"                + ADDRESS_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"                + ADDRESS_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"                + VALID_JOB_BOB + VALID_STAGE_BOB, expectedMessage);","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"        //invalid job","lastModifiedDate":"2022-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"brigittesantoso"},"content":"                + INVALID_JOB_DESC + STAGE_DESC_BOB, Job.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_BOB + STAGE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"brigittesantoso"},"content":"                + ADDRESS_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB,","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"brigittesantoso"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"brigittesantoso":35,"-":91}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.ClearInterviewCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.ClearPersonCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.interview.InterviewContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"    public void parseCommand_addPerson() throws Exception {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        assertTrue(parser.parseCommand(ClearPersonCommand.COMMAND_WORD + \" [p]\") instanceof ClearPersonCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        assertTrue(parser.parseCommand(ClearInterviewCommand.COMMAND_WORD + \" [i]\") instanceof ClearInterviewCommand);","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"                DeletePersonCommand.COMMAND_WORD + \" [p] \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand.EditPersonDescriptor descriptor \u003d new","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"rcjj98"},"content":"            EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand command \u003d (EditPersonCommand)","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"            parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" [p] \"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"rcjj98"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"rcjj98"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"brigittesantoso"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"eman-kom"},"content":"        groups.add(\"n/foo\");","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"eman-kom"},"content":"        groups.add(\"j/bar\");","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"eman-kom"},"content":"        FindInterviewCommand interview \u003d (FindInterviewCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"eman-kom"},"content":"            FindCommand.COMMAND_WORD + \" [i] g/n/foo g/j/bar\");","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"eman-kom"},"content":"        FindPersonCommand person \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"eman-kom"},"content":"            FindCommand.COMMAND_WORD + \" [p] g/n/foo g/j/bar\");","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"eman-kom"},"content":"        assertEquals(new FindPersonCommand(new PersonContainsKeywordsPredicate(groups)), person);","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"eman-kom"},"content":"        assertEquals(new FindInterviewCommand(new InterviewContainsKeywordsPredicate(groups)), interview);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"brigittesantoso"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" [p]\") instanceof ListPersonCommand);","lastModifiedDate":"2022-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"imrajsinghsandhu"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"imrajsinghsandhu"},"content":"            HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"eman-kom"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"eman-kom"},"content":"    public void parseCommand_import() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"eman-kom"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"eman-kom"},"content":"            ImportCommand.COMMAND_WORD + \" ./src/test/data/CsvTest/all_correct.csv\") instanceof ImportCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"brigittesantoso":14,"imrajsinghsandhu":2,"eman-kom":28,"-":74,"rcjj98":3}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"    public void parse_validArgs_returnsDeletePersonCommand() {","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"brigittesantoso":6,"-":13}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOB_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STAGE_DESC;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAGE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAGE_DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\"","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"                + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\" + INVALID_JOB_DESC, Job.MESSAGE_CONSTRAINTS); // invalid job","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\" + INVALID_STAGE_DESC, Stage.MESSAGE_CONSTRAINTS); // invalid stage","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"        assertParseFailure(parser, \" [p] \" + \"1\"","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"                        + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"brigittesantoso"},"content":"        String userInput \u003d \" [p] \" + targetIndex.getOneBased() + PHONE_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"brigittesantoso"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + JOB_DESC_AMY + STAGE_DESC_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).withStage(VALID_STAGE_BOB).withStage(VALID_STAGE_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":120,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"brigittesantoso"},"content":"        String userInput \u003d \" [p] \" + targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"rcjj98"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"brigittesantoso"},"content":"        String userInput \u003d \" [p] \" + targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"brigittesantoso"},"content":"        userInput \u003d \" [p] \" + targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"brigittesantoso"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"brigittesantoso"},"content":"        userInput \u003d \" [p] \" + targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"brigittesantoso"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"brigittesantoso"},"content":"        userInput \u003d \" [p] \" + targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"brigittesantoso"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"brigittesantoso"},"content":"        // job","lastModifiedDate":"2022-03-26"},{"lineNumber":167,"author":{"gitId":"brigittesantoso"},"content":"        userInput \u003d \" [p] \" + targetIndex.getOneBased() + JOB_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"brigittesantoso"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withJob(VALID_JOB_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":169,"author":{"gitId":"brigittesantoso"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":172,"author":{"gitId":"brigittesantoso"},"content":"        // stage","lastModifiedDate":"2022-03-26"},{"lineNumber":173,"author":{"gitId":"brigittesantoso"},"content":"        userInput \u003d \" [p] \" + targetIndex.getOneBased() + STAGE_DESC_AMY;","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"brigittesantoso"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withStage(VALID_STAGE_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":175,"author":{"gitId":"brigittesantoso"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":177,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-26"},{"lineNumber":183,"author":{"gitId":"brigittesantoso"},"content":"        String userInput \u003d \" [p] \" + targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"brigittesantoso"},"content":"                + JOB_DESC_AMY + STAGE_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":185,"author":{"gitId":"brigittesantoso"},"content":"                + EMAIL_DESC_AMY + JOB_DESC_AMY + STAGE_DESC_AMY","lastModifiedDate":"2022-03-26"},{"lineNumber":186,"author":{"gitId":"brigittesantoso"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + JOB_DESC_BOB + STAGE_DESC_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":189,"author":{"gitId":"brigittesantoso"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":190,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).withStage(VALID_STAGE_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2022-03-26"},{"lineNumber":192,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"brigittesantoso"},"content":"        String userInput \u003d \" [p] \" + targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"brigittesantoso"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"brigittesantoso"},"content":"        userInput \u003d \" [p] \" + targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"brigittesantoso"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"brigittesantoso":70,"-":144,"rcjj98":2}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_TYPE_GIVEN;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.interview.InterviewContainsKeywordsPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"    private FindPersonCommandParser person \u003d new FindPersonCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"    private FindInterviewCommandParser interview \u003d new FindInterviewCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"    public void parse_emptyString_throwParseException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(person, \"\", MESSAGE_NO_TYPE_GIVEN);","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(interview, \"\", MESSAGE_NO_TYPE_GIVEN);","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"    public void parse_invalidGroups_throwParseException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"        // check for no g/ flags","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(person, \" [p]\",","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(interview, \" [i]\",","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"        // check for empty g/ flags","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(person, \" [p] g/\",","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.NO_KEYWORDS_ERROR + FindPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(interview, \" [i] g/\",","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.NO_KEYWORDS_ERROR + FindInterviewCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(person, \" [p] g/n/test g/\",","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.NO_KEYWORDS_ERROR + FindPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(interview, \" [i] g/n/test g/\",","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.NO_KEYWORDS_ERROR + FindInterviewCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(person, \" [p] g/n/test g/ g/j/software\",","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.NO_KEYWORDS_ERROR + FindPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(interview, \" [i] g/n/test g/ g/j/software\",","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.NO_KEYWORDS_ERROR + FindInterviewCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(person, \" [p] g/g/\",","lastModifiedDate":"2022-04-01"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.EXTRA_FLAG_ERROR + FindPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(interview, \" [i] g/g/\",","lastModifiedDate":"2022-04-01"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"                FindCommandParser.EXTRA_FLAG_ERROR + FindInterviewCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"    @Test","lastModifiedDate":"2022-04-01"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"    public void parse_invalidInput_throwParseException() {","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(person, \" [p] g/n/\u003c\u003e\",","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"                String.format(\"[n/\u003c\u003e] contains invalid name\\n\" + Name.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2022-04-01"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(interview, \" [i] g/n/\u003c\u003e\",","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"                String.format(\"[n/\u003c\u003e] contains invalid name\\n\" + Name.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2022-04-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"        groups.add(\"n/bob tan j/data scientist\");","lastModifiedDate":"2022-04-01"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"        groups.add(\"n/connor lee j/accountant\");","lastModifiedDate":"2022-04-01"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"        // finding interview","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"        FindInterviewCommand findInterview \u003d new FindInterviewCommand(new InterviewContainsKeywordsPredicate(groups));","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"                interview, \" [i] g/n/bob tan j/data scientist g/n/connor lee j/accountant\", findInterview);","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"        // finding applicants","lastModifiedDate":"2022-04-08"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"        FindPersonCommand findPerson \u003d new FindPersonCommand(new PersonContainsKeywordsPredicate(groups));","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"eman-kom"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-04-01"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"                person, \" [p] g/n/bob tan j/data scientist g/n/connor lee j/accountant\", findPerson);","lastModifiedDate":"2022-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"brigittesantoso":1,"eman-kom":53,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/ImportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eman-kom"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.commands.ImportCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.ImportCommandParser.FILE_DOES_NOT_EXIST;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import static seedu.address.logic.parser.ImportCommandParser.WRONG_FILE_TYPE;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"public class ImportCommandParserTest {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"    private ImportCommandParser parser \u003d new ImportCommandParser();","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"    private String folderPath \u003d \"./src/test/data/CsvTest\";","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"eman-kom"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"    public void parse_filepath() {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"eman-kom"},"content":"        // Empty path","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"        // File does not exist","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(parser, \"xxx.csv\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FILE_DOES_NOT_EXIST));","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"        // Wrong file format","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(parser, folderPath + \"/wrong_file_format.txt\",","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"eman-kom"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, WRONG_FILE_TYPE));","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(parser, folderPath + \"/no_file_format\",","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"eman-kom"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, WRONG_FILE_TYPE));","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"eman-kom"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"eman-kom"},"content":"    public void parse_data() {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"        personList.add(new Person(new Name(\"Alejandro Sharma\"), new Phone(\"56564367\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"eman-kom"},"content":"            new Email(\"alejandros@gmail.com\"), new Address(\"41 High Point Ave. Holly Springs, NC 27540\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"            new Job(\"Computer Hardware Engineer\"), new Stage(\"ACCEPTED\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"        personList.add(new Person(new Name(\"Elly Beattie\"), new Phone(\"62888566\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"eman-kom"},"content":"                new Email(\"ellyb@yahoo.com\"), new Address(\"94 Littleton Lane Rocky Mount, NC 27804\"),","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"eman-kom"},"content":"                new Job(\"Computer Hardware Engineer\"), new Stage(\"REJECTED\")));","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"        ImportCommand importList \u003d new ImportCommand(personList);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"eman-kom"},"content":"        assertParseSuccess(parser, folderPath + \"/overlapping_file_format.json.csv\", importList);","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"eman-kom"},"content":"        // check for invalid values","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(parser, folderPath + \"/wrong_stage.csv\",","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"            \"Line 1: Stage should be only INPROGRESS or ACCEPTED or REJECTED (case-sensitive)\");","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"eman-kom"},"content":"        // check for missing fields","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(parser, folderPath + \"/too_little_fields.csv\",","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"            \"Line 1: length of fields is not correct\");","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"        // check for additional fields","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"eman-kom"},"content":"        assertParseFailure(parser, folderPath + \"/excess_fields.csv\",","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"eman-kom"},"content":"            \"Line 1: length of fields is not correct\");","lastModifiedDate":"2022-04-09"},{"lineNumber":72,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"eman-kom"},"content":"        // check if excess whitespace is trimmed","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"eman-kom"},"content":"        assertParseSuccess(parser, folderPath + \"/excess_whitespace.csv\", importList);","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"eman-kom":76}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    private static final String INVALID_JOB \u003d \"Software Engineer\u0026\";","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"    private static final String INVALID_STAGE \u003d \"PROCESSING\";","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    private static final String VALID_JOB \u003d \"Software Engineer\";","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"    private static final String VALID_STAGE \u003d \"ACCEPTED\";","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"brigittesantoso":4,"-":141}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"imrajsinghsandhu"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        // Two applicants with the same identity fields","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"brigittesantoso"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"     * A stub ReadOnlyAddressBook whose applicant list can violate interface constraints.","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"        private final ObservableList\u003cInterview\u003e interviews \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-04-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":105,"author":{"gitId":"brigittesantoso"},"content":"        @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":106,"author":{"gitId":"brigittesantoso"},"content":"        public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2022-03-23"},{"lineNumber":107,"author":{"gitId":"brigittesantoso"},"content":"            return interviews;","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"brigittesantoso"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"imrajsinghsandhu"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"imrajsinghsandhu"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"imrajsinghsandhu"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"brigittesantoso"},"content":"            return tasks;","lastModifiedDate":"2022-04-08"},{"lineNumber":113,"author":{"gitId":"imrajsinghsandhu"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"brigittesantoso":16,"imrajsinghsandhu":5,"-":95}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"eman-kom"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e searchedName \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"eman-kom"},"content":"        searchedName.add(\"n/\" + ALICE.getName().fullName);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"eman-kom"},"content":"        modelManager.updateFilteredPersonList(new PersonContainsKeywordsPredicate(searchedName));","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"eman-kom":6,"-":128}},{"path":"src/test/java/seedu/address/model/person/PersonContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"eman-kom"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"eman-kom"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"eman-kom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"eman-kom"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"eman-kom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"eman-kom"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"eman-kom"},"content":"public class PersonContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e first \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"eman-kom"},"content":"        first.add(\"n/first\");","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e second \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"eman-kom"},"content":"        second.add(\"j/second\");","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d new PersonContainsKeywordsPredicate(first);","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d new PersonContainsKeywordsPredicate(second);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"eman-kom"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"eman-kom"},"content":"        assertEquals(secondPredicate, secondPredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate firstPredicateCopy \u003d new PersonContainsKeywordsPredicate(first);","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"eman-kom"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"eman-kom"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/alice\");","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/bob\");","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"eman-kom"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/john\");","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"eman-kom"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"eman-kom"},"content":"        keywords.clear();","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/aLIce bOB\");","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"eman-kom"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"eman-kom"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"eman-kom"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"eman-kom"},"content":"        keywords.add(\"n/Carol\");","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"eman-kom"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(keywords);","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"brigittesantoso":1,"eman-kom":38,"-":44}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"                .withAddress(VALID_ADDRESS_BOB).withJob(VALID_JOB_BOB).withStage(VALID_STAGE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        // different name, phone, email, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"        // name, phone, email differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_AMY.toLowerCase())","lastModifiedDate":"2022-04-02"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2022-04-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"        //different job -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"        //different stage -\u003e returns false","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStage(VALID_STAGE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"brigittesantoso":19,"-":71}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"                .withJob(VALID_JOB_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"brigittesantoso":5,"-":165}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"    private static final String VALID_JOB \u003d BENSON.getJob().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    private static final String VALID_STAGE \u003d BENSON.getStage().toString();","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_JOB, VALID_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"brigittesantoso":15,"-":87}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"brigittesantoso"},"content":"//package seedu.address.storage;","lastModifiedDate":"2022-04-08"},{"lineNumber":2,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"brigittesantoso"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2022-04-08"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"brigittesantoso"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"brigittesantoso"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"brigittesantoso"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"brigittesantoso"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"brigittesantoso"},"content":"//        @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"brigittesantoso"},"content":"//        public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"brigittesantoso"},"content":"//            JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"//                    JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"//            AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"brigittesantoso"},"content":"//            AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"brigittesantoso"},"content":"//            assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"//        }","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"//        @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"//        public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"//            JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"//                    JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"//            assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"//        }","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"//        @Test","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"//        public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"//            JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"//                    JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"//            assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"//                    dataFromFile::toModelType);","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"//        }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"//","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"//}","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"brigittesantoso":51}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        descriptor.setJob(person.getJob());","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"        descriptor.setStage(person.getStage());","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"brigittesantoso"},"content":"     * Sets the {@code Job} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"    public EditPersonDescriptorBuilder withJob(String job) {","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"brigittesantoso"},"content":"        descriptor.setJob(new Job(job));","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"brigittesantoso"},"content":"     * Sets the {@code Stage} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"    public EditPersonDescriptorBuilder withStage(String stage) {","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"brigittesantoso"},"content":"        descriptor.setStage(new Stage(stage));","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"brigittesantoso":14,"-":78}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Job;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.model.person.Stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"brigittesantoso"},"content":"    public static final String DEFAULT_JOB \u003d \"Software Engineer\";","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"brigittesantoso"},"content":"    public static final String DEFAULT_STAGE \u003d \"INPROGRESS\";","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"brigittesantoso"},"content":"    private Job job;","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"brigittesantoso"},"content":"    private Stage stage;","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"        job \u003d new Job(DEFAULT_JOB);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"        stage \u003d new Stage(DEFAULT_STAGE);","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        job \u003d personToCopy.getJob();","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"        stage \u003d personToCopy.getStage();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"brigittesantoso"},"content":"     * Sets the {@code Job} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"brigittesantoso"},"content":"    public PersonBuilder withJob(String job) {","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"        this.job \u003d new Job(job);","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"brigittesantoso"},"content":"        return this;","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"brigittesantoso"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"brigittesantoso"},"content":"     * Sets the {@code Stage} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"brigittesantoso"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"brigittesantoso"},"content":"    public PersonBuilder withStage(String stage) {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"brigittesantoso"},"content":"        this.stage \u003d new Stage(stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"brigittesantoso"},"content":"        return this;","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"brigittesantoso"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"brigittesantoso"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":103,"author":{"gitId":"brigittesantoso"},"content":"        return new Person(name, phone, email, address, job, stage);","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"brigittesantoso":27,"-":79}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":11,"author":{"gitId":"brigittesantoso"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"brigittesantoso"},"content":"        return AddCommand.COMMAND_WORD + \" [p] \" + getPersonDetails(person);","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"brigittesantoso"},"content":"        sb.append(PREFIX_JOB + person.getJob().jobTitle + \" \");","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"        sb.append(PREFIX_STAGE + person.getStage().value + \" \");","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"        descriptor.getJob().ifPresent(job -\u003e sb.append(PREFIX_JOB).append(job.jobTitle).append(\" \"));","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"        descriptor.getStage().ifPresent(stage -\u003e sb.append(PREFIX_STAGE).append(stage.value).append(\" \"));","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"brigittesantoso":8,"-":45}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_AMY;","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"brigittesantoso"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_BOB;","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"brigittesantoso"},"content":"            .withJob(\"Software Engineer\")","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"INPROGRESS\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"brigittesantoso"},"content":"            .withJob(\"Data Analyst\")","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"REJECTED\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"brigittesantoso"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"brigittesantoso"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"brigittesantoso"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"brigittesantoso"},"content":"            .withJob(\"Software Engineer\")","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"ACCEPTED\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"brigittesantoso"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"brigittesantoso"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"brigittesantoso"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"brigittesantoso"},"content":"            .withJob(\"Data Scientist\")","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"INPROGRESS\").build();;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"brigittesantoso"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"brigittesantoso"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"brigittesantoso"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"brigittesantoso"},"content":"            .withJob(\"Software Developer\")","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"INPROGRESS\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"brigittesantoso"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"brigittesantoso"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"brigittesantoso"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"brigittesantoso"},"content":"            .withJob(\"Mobile Engineer\")","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"ACCEPTED\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"brigittesantoso"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"brigittesantoso"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"brigittesantoso"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"brigittesantoso"},"content":"            .withJob(\"Software Engineer\")","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"REJECTED\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withJob(\"Software Engineer\")","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"INPROGRESS\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withJob(\"Data Analyst\")","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(\"ACCEPTED\").build();","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withJob(VALID_JOB_AMY)","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(VALID_STAGE_AMY).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"brigittesantoso"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withJob(VALID_JOB_BOB)","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"brigittesantoso"},"content":"            .withStage(VALID_STAGE_BOB).build();","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"brigittesantoso"},"content":"     * Returns an {@code AddressBook} with all the typical applicants.","lastModifiedDate":"2022-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"brigittesantoso":47,"-":56}}]
